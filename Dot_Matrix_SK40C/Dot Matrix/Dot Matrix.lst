

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Sat Sep 07 19:12:56 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 8 "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 8 "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
    45  2007  2CE2               	dw 0x3FFA & 0x3FF7 & 0x3FEF & 0x3CFF & 0x3FFF & 0x2FFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_light_a_number_alphabet
    48                           	FNCALL	_main,_running_dot
    49                           	FNCALL	_main,_running_line
    50                           	FNCALL	_main,_light_pattern_one_color
    51                           	FNCALL	_main,_light_pattern_two_color
    52                           	FNCALL	_main,_running_string
    53                           	FNCALL	_main,_expand_shrink_square
    54                           	FNCALL	_running_string,_light_a_number_alphabet
    55                           	FNCALL	_expand_shrink_square,_light_pattern_one_color
    56                           	FNCALL	_light_a_number_alphabet,_choose_num_alphabet
    57                           	FNCALL	_light_a_number_alphabet,_light_pattern_one_color
    58                           	FNCALL	_light_pattern_two_color,_light_a_column_two_color
    59                           	FNCALL	_light_pattern_one_color,_delay_ms
    60                           	FNCALL	_running_line,_light_a_row
    61                           	FNCALL	_running_line,_delay_ms
    62                           	FNCALL	_running_dot,_light_a_dot
    63                           	FNCALL	_running_dot,_delay_ms
    64                           	FNCALL	_light_a_column_two_color,_light_a_dot
    65                           	FNROOT	_main
    66                           	global	_love_shape_pattern_one_color
    67                           	global	_love_shape_pattern_two_color
    68                           	global	_expand_shrink_pattern
    69                           psect	idataBANK0,class=CODE,space=0,delta=2
    70                           global __pidataBANK0
    71  0A15                     __pidataBANK0:
    72                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
    73                           	line	22
    74                           
    75                           ;initializer for _love_shape_pattern_one_color
    76  0A15  3418               	retlw	018h
    77  0A16  343C               	retlw	03Ch
    78  0A17  347E               	retlw	07Eh
    79  0A18  34FF               	retlw	0FFh
    80  0A19  34FF               	retlw	0FFh
    81  0A1A  34FF               	retlw	0FFh
    82  0A1B  34FF               	retlw	0FFh
    83  0A1C  3466               	retlw	066h
    84                           	line	23
    85                           
    86                           ;initializer for _love_shape_pattern_two_color
    87  0A1D  341E               	retlw	01Eh
    88  0A1E  343F               	retlw	03Fh
    89  0A1F  347F               	retlw	07Fh
    90  0A20  34FE               	retlw	0FEh
    91  0A21  34FE               	retlw	0FEh
    92  0A22  347F               	retlw	07Fh
    93  0A23  343F               	retlw	03Fh
    94  0A24  341E               	retlw	01Eh
    95                           psect	idataBANK1,class=CODE,space=0,delta=2
    96                           global __pidataBANK1
    97  0AA5                     __pidataBANK1:
    98                           	line	14
    99                           
   100                           ;initializer for _expand_shrink_pattern
   101  0AA5  3400               	retlw	0
   102  0AA6  3400               	retlw	0
   103  0AA7  3400               	retlw	0
   104  0AA8  3400               	retlw	0
   105  0AA9  3400               	retlw	0
   106  0AAA  3400               	retlw	0
   107  0AAB  3403               	retlw	03h
   108  0AAC  3403               	retlw	03h
   109  0AAD  3400               	retlw	0
   110  0AAE  3400               	retlw	0
   111  0AAF  3400               	retlw	0
   112  0AB0  3400               	retlw	0
   113  0AB1  3400               	retlw	0
   114  0AB2  3407               	retlw	07h
   115  0AB3  3407               	retlw	07h
   116  0AB4  3407               	retlw	07h
   117  0AB5  3400               	retlw	0
   118  0AB6  3400               	retlw	0
   119  0AB7  3400               	retlw	0
   120  0AB8  3400               	retlw	0
   121  0AB9  340F               	retlw	0Fh
   122  0ABA  340F               	retlw	0Fh
   123  0ABB  340F               	retlw	0Fh
   124  0ABC  340F               	retlw	0Fh
   125  0ABD  3400               	retlw	0
   126  0ABE  3400               	retlw	0
   127  0ABF  3400               	retlw	0
   128  0AC0  341F               	retlw	01Fh
   129  0AC1  341F               	retlw	01Fh
   130  0AC2  341F               	retlw	01Fh
   131  0AC3  341F               	retlw	01Fh
   132  0AC4  341F               	retlw	01Fh
   133  0AC5  3400               	retlw	0
   134  0AC6  3400               	retlw	0
   135  0AC7  343F               	retlw	03Fh
   136  0AC8  343F               	retlw	03Fh
   137  0AC9  343F               	retlw	03Fh
   138  0ACA  343F               	retlw	03Fh
   139  0ACB  343F               	retlw	03Fh
   140  0ACC  343F               	retlw	03Fh
   141  0ACD  3400               	retlw	0
   142  0ACE  347F               	retlw	07Fh
   143  0ACF  347F               	retlw	07Fh
   144  0AD0  347F               	retlw	07Fh
   145  0AD1  347F               	retlw	07Fh
   146  0AD2  347F               	retlw	07Fh
   147  0AD3  347F               	retlw	07Fh
   148  0AD4  347F               	retlw	07Fh
   149  0AD5  34FF               	retlw	0FFh
   150  0AD6  34FF               	retlw	0FFh
   151  0AD7  34FF               	retlw	0FFh
   152  0AD8  34FF               	retlw	0FFh
   153  0AD9  34FF               	retlw	0FFh
   154  0ADA  34FF               	retlw	0FFh
   155  0ADB  34FF               	retlw	0FFh
   156  0ADC  34FF               	retlw	0FFh
   157                           	global	_mode
   158                           	global	_number_alphabet
   159                           	global	_ADCON0
   160  001F                     _ADCON0	set	31
   161                           	global	_PORTA
   162  0005                     _PORTA	set	5
   163                           	global	_PORTC
   164  0007                     _PORTC	set	7
   165                           	global	_PORTD
   166  0008                     _PORTD	set	8
   167                           	global	_RB0
   168  0030                     _RB0	set	48
   169                           	global	_RB1
   170  0031                     _RB1	set	49
   171                           	global	_RB6
   172  0036                     _RB6	set	54
   173                           	global	_RB7
   174  0037                     _RB7	set	55
   175                           	global	_TRISA
   176  0085                     _TRISA	set	133
   177                           	global	_TRISB
   178  0086                     _TRISB	set	134
   179                           	global	_TRISC
   180  0087                     _TRISC	set	135
   181                           	global	_TRISD
   182  0088                     _TRISD	set	136
   183                           	global	_ANSEL
   184  0188                     _ANSEL	set	392
   185                           	global	_ANSELH
   186  0189                     _ANSELH	set	393
   187                           psect	strings,class=STRING,delta=2
   188                           global __pstrings
   189  0800                     __pstrings:
   190                           ;	global	stringdir,stringtab,__stringbase
   191  0800                     stringtab:
   192                           ;	String table - string pointers are 1 byte each
   193  0800                     stringcode:stringdir:
      + 0800                     stringdir:	
   194  0800  3008               movlw high(stringdir)
   195  0801  008A               movwf pclath
   196  0802  0804               movf fsr,w
   197  0803  0A84               incf fsr
   198  0804  0782               	addwf pc
   199  0805                     __stringbase:
   200  0805  3400               	retlw	0
   201                           psect	strings
   202                           	
   203  0806                     STR_1:	
   204  0806  3443               	retlw	67	;'C'
   205  0807  3459               	retlw	89	;'Y'
   206  0808  3454               	retlw	84	;'T'
   207  0809  3452               	retlw	82	;'R'
   208  080A  344F               	retlw	79	;'O'
   209  080B  344E               	retlw	78	;'N'
   210  080C  3400               	retlw	0
   211                           psect	strings
   212                           	file	"Dot Matrix.as"
   213                           	line	#
   214                           psect cinit,class=CODE,delta=2
   215                           global start_initialization
   216  0004                     start_initialization:
   217                           
   218                           psect	bssBANK0,class=BANK0,space=1
   219                           global __pbssBANK0
   220  003C                     __pbssBANK0:
   221  003C                     _mode:
   222  003C                            ds      1
   223                           
   224  003D                     _number_alphabet:
   225  003D                            ds      8
   226                           
   227                           psect	dataBANK0,class=BANK0,space=1
   228                           global __pdataBANK0
   229  0020                     __pdataBANK0:
   230                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
   231                           	line	22
   232  0020                     _love_shape_pattern_one_color:
   233  0020                            ds      8
   234                           
   235                           psect	dataBANK0
   236                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
   237                           	line	23
   238  0028                     _love_shape_pattern_two_color:
   239  0028                            ds      8
   240                           
   241                           psect	dataBANK1,class=BANK1,space=1
   242                           global __pdataBANK1
   243  00A0                     __pdataBANK1:
   244                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
   245                           	line	14
   246  00A0                     _expand_shrink_pattern:
   247  00A0                            ds      56
   248                           
   249                           ; Clear objects allocated to BANK0
   250                           psect cinit,class=CODE,delta=2
   251  0004  01BC               	clrf	((__pbssBANK0)+0)&07Fh
   252  0005  01BD               	clrf	((__pbssBANK0)+1)&07Fh
   253  0006  01BE               	clrf	((__pbssBANK0)+2)&07Fh
   254  0007  01BF               	clrf	((__pbssBANK0)+3)&07Fh
   255  0008  01C0               	clrf	((__pbssBANK0)+4)&07Fh
   256  0009  01C1               	clrf	((__pbssBANK0)+5)&07Fh
   257  000A  01C2               	clrf	((__pbssBANK0)+6)&07Fh
   258  000B  01C3               	clrf	((__pbssBANK0)+7)&07Fh
   259  000C  01C4               	clrf	((__pbssBANK0)+8)&07Fh
   260                           global btemp
   261                           psect inittext,class=CODE,delta=2
   262                           global init_fetch,btemp
   263                           ;	Called with low address in FSR and high address in W
   264  0A25                     init_fetch:
   265  0A25  087E               	movf btemp,w
   266  0A26  008A               	movwf pclath
   267  0A27  087F               	movf btemp+1,w
   268  0A28  0082               	movwf pc
   269                           global init_ram
   270                           ;Called with:
   271                           ;	high address of idata address in btemp 
   272                           ;	low address of idata address in btemp+1 
   273                           ;	low address of data in FSR
   274                           ;	high address + 1 of data in btemp-1
   275  0A29                     init_ram:
   276  0A29  2225  120A  158A   	fcall init_fetch
   277  0A2C  0080               	movwf indf,f
   278  0A2D  0A84               	incf fsr,f
   279  0A2E  0804               	movf fsr,w
   280  0A2F  067D               	xorwf btemp-1,w
   281  0A30  1903               	btfsc status,2
   282  0A31  3400               	retlw 0
   283  0A32  0AFF               	incf btemp+1,f
   284  0A33  1903               	btfsc status,2
   285  0A34  0AFE               	incf btemp,f
   286  0A35  2A29               	goto init_ram
   287                           ; Initialize objects allocated to BANK1
   288                           psect cinit,class=CODE,delta=2
   289                           global init_ram, __pidataBANK1
   290  000D  1383               	bcf	status, 7	;select IRP bank0
   291  000E  30D8               	movlw low(__pdataBANK1+56)
   292  000F  00FD               	movwf btemp-1,f
   293  0010  300A               	movlw high(__pidataBANK1)
   294  0011  00FE               	movwf btemp,f
   295  0012  30A5               	movlw low(__pidataBANK1)
   296  0013  00FF               	movwf btemp+1,f
   297  0014  30A0               	movlw low(__pdataBANK1)
   298  0015  0084               	movwf fsr,f
   299  0016  120A  158A  2229   	fcall init_ram
              120A  118A         
   300                           ; Initialize objects allocated to BANK0
   301                           psect cinit,class=CODE,delta=2
   302                           global init_ram, __pidataBANK0
   303  001B  3030               	movlw low(__pdataBANK0+16)
   304  001C  00FD               	movwf btemp-1,f
   305  001D  300A               	movlw high(__pidataBANK0)
   306  001E  00FE               	movwf btemp,f
   307  001F  3015               	movlw low(__pidataBANK0)
   308  0020  00FF               	movwf btemp+1,f
   309  0021  3020               	movlw low(__pdataBANK0)
   310  0022  0084               	movwf fsr,f
   311  0023  120A  158A  2229   	fcall init_ram
              120A  118A         
   312                           psect cinit,class=CODE,delta=2
   313                           global end_of_initialization
   314                           
   315                           ;End of C runtime variable initialization code
   316                           
   317  0028                     end_of_initialization:
   318  0028  0183               clrf status
   319  0029  120A  158A  2DC7   ljmp _main	;jump to C main() function
   320                           psect	cstackCOMMON,class=COMMON,space=1
   321                           global __pcstackCOMMON
   322  0070                     __pcstackCOMMON:
   323                           	global	?_init
   324  0070                     ?_init:	; 0 bytes @ 0x0
   325                           	global	??_init
   326  0070                     ??_init:	; 0 bytes @ 0x0
   327                           	global	?_running_dot
   328  0070                     ?_running_dot:	; 0 bytes @ 0x0
   329                           	global	?_running_line
   330  0070                     ?_running_line:	; 0 bytes @ 0x0
   331                           	global	?_expand_shrink_square
   332  0070                     ?_expand_shrink_square:	; 0 bytes @ 0x0
   333                           	global	?_main
   334  0070                     ?_main:	; 0 bytes @ 0x0
   335                           	global	?_delay_ms
   336  0070                     ?_delay_ms:	; 0 bytes @ 0x0
   337                           	global	?_light_a_dot
   338  0070                     ?_light_a_dot:	; 0 bytes @ 0x0
   339                           	global	?_light_a_row
   340  0070                     ?_light_a_row:	; 0 bytes @ 0x0
   341                           	global	?_choose_num_alphabet
   342  0070                     ?_choose_num_alphabet:	; 0 bytes @ 0x0
   343                           	global	light_a_dot@column
   344  0070                     light_a_dot@column:	; 1 bytes @ 0x0
   345                           	global	light_a_row@color
   346  0070                     light_a_row@color:	; 1 bytes @ 0x0
   347                           	global	choose_num_alphabet@num_alp_array
   348  0070                     choose_num_alphabet@num_alp_array:	; 1 bytes @ 0x0
   349                           	global	delay_ms@ms
   350  0070                     delay_ms@ms:	; 4 bytes @ 0x0
   351  0070                     	ds	1
   352                           	global	??_light_a_row
   353  0071                     ??_light_a_row:	; 0 bytes @ 0x1
   354                           	global	??_choose_num_alphabet
   355  0071                     ??_choose_num_alphabet:	; 0 bytes @ 0x1
   356                           	global	light_a_dot@color
   357  0071                     light_a_dot@color:	; 1 bytes @ 0x1
   358                           	global	light_a_row@row
   359  0071                     light_a_row@row:	; 1 bytes @ 0x1
   360  0071                     	ds	1
   361                           	global	??_light_a_dot
   362  0072                     ??_light_a_dot:	; 0 bytes @ 0x2
   363                           	global	choose_num_alphabet@num_alp
   364  0072                     choose_num_alphabet@num_alp:	; 1 bytes @ 0x2
   365  0072                     	ds	1
   366                           	global	light_a_dot@row
   367  0073                     light_a_dot@row:	; 1 bytes @ 0x3
   368  0073                     	ds	1
   369                           	global	??_delay_ms
   370  0074                     ??_delay_ms:	; 0 bytes @ 0x4
   371                           	global	?_light_a_column_two_color
   372  0074                     ?_light_a_column_two_color:	; 0 bytes @ 0x4
   373                           	global	light_a_column_two_color@column_pattern
   374  0074                     light_a_column_two_color@column_pattern:	; 1 bytes @ 0x4
   375  0074                     	ds	1
   376                           	global	light_a_column_two_color@color_0
   377  0075                     light_a_column_two_color@color_0:	; 1 bytes @ 0x5
   378  0075                     	ds	1
   379                           	global	light_a_column_two_color@color_1
   380  0076                     light_a_column_two_color@color_1:	; 1 bytes @ 0x6
   381  0076                     	ds	1
   382                           	global	??_light_a_column_two_color
   383  0077                     ??_light_a_column_two_color:	; 0 bytes @ 0x7
   384  0077                     	ds	1
   385                           	global	??_running_dot
   386  0078                     ??_running_dot:	; 0 bytes @ 0x8
   387                           	global	??_running_line
   388  0078                     ??_running_line:	; 0 bytes @ 0x8
   389                           	global	?_light_pattern_one_color
   390  0078                     ?_light_pattern_one_color:	; 0 bytes @ 0x8
   391                           	global	light_pattern_one_color@color
   392  0078                     light_pattern_one_color@color:	; 1 bytes @ 0x8
   393  0078                     	ds	1
   394                           	global	??_light_pattern_one_color
   395  0079                     ??_light_pattern_one_color:	; 0 bytes @ 0x9
   396                           	global	light_a_column_two_color@lsb_tester
   397  0079                     light_a_column_two_color@lsb_tester:	; 1 bytes @ 0x9
   398                           	global	running_line@color
   399  0079                     running_line@color:	; 1 bytes @ 0x9
   400  0079                     	ds	1
   401                           	global	light_pattern_one_color@pattern
   402  007A                     light_pattern_one_color@pattern:	; 1 bytes @ 0xA
   403                           	global	light_a_column_two_color@column
   404  007A                     light_a_column_two_color@column:	; 1 bytes @ 0xA
   405                           	global	running_line@i
   406  007A                     running_line@i:	; 2 bytes @ 0xA
   407  007A                     	ds	1
   408                           	global	light_pattern_one_color@i
   409  007B                     light_pattern_one_color@i:	; 2 bytes @ 0xB
   410                           	global	light_a_column_two_color@i
   411  007B                     light_a_column_two_color@i:	; 2 bytes @ 0xB
   412  007B                     	ds	1
   413                           	global	running_line@i_540
   414  007C                     running_line@i_540:	; 2 bytes @ 0xC
   415  007C                     	ds	1
   416                           	global	?_light_a_number_alphabet
   417  007D                     ?_light_a_number_alphabet:	; 0 bytes @ 0xD
   418                           	global	light_a_number_alphabet@color
   419  007D                     light_a_number_alphabet@color:	; 1 bytes @ 0xD
   420  007D                     	ds	1
   421                           psect	cstackBANK0,class=BANK0,space=1
   422                           global __pcstackBANK0
   423  0030                     __pcstackBANK0:
   424                           	global	??_light_a_number_alphabet
   425  0030                     ??_light_a_number_alphabet:	; 0 bytes @ 0x0
   426                           	global	?_light_pattern_two_color
   427  0030                     ?_light_pattern_two_color:	; 0 bytes @ 0x0
   428                           	global	??_expand_shrink_square
   429  0030                     ??_expand_shrink_square:	; 0 bytes @ 0x0
   430                           	global	light_pattern_two_color@color_0
   431  0030                     light_pattern_two_color@color_0:	; 1 bytes @ 0x0
   432                           	global	running_dot@color
   433  0030                     running_dot@color:	; 1 bytes @ 0x0
   434  0030                     	ds	1
   435                           	global	light_pattern_two_color@color_1
   436  0031                     light_pattern_two_color@color_1:	; 1 bytes @ 0x1
   437                           	global	light_a_number_alphabet@num_alp
   438  0031                     light_a_number_alphabet@num_alp:	; 1 bytes @ 0x1
   439                           	global	running_dot@i
   440  0031                     running_dot@i:	; 2 bytes @ 0x1
   441  0031                     	ds	1
   442                           	global	??_light_pattern_two_color
   443  0032                     ??_light_pattern_two_color:	; 0 bytes @ 0x2
   444                           	global	?_running_string
   445  0032                     ?_running_string:	; 0 bytes @ 0x2
   446                           	global	running_string@color
   447  0032                     running_string@color:	; 1 bytes @ 0x2
   448                           	global	expand_shrink_square@color
   449  0032                     expand_shrink_square@color:	; 1 bytes @ 0x2
   450  0032                     	ds	1
   451                           	global	??_running_string
   452  0033                     ??_running_string:	; 0 bytes @ 0x3
   453                           	global	running_dot@j
   454  0033                     running_dot@j:	; 2 bytes @ 0x3
   455                           	global	expand_shrink_square@j
   456  0033                     expand_shrink_square@j:	; 2 bytes @ 0x3
   457  0033                     	ds	1
   458                           	global	running_string@sentence
   459  0034                     running_string@sentence:	; 1 bytes @ 0x4
   460  0034                     	ds	1
   461                           	global	running_string@i
   462  0035                     running_string@i:	; 2 bytes @ 0x5
   463                           	global	expand_shrink_square@j_557
   464  0035                     expand_shrink_square@j_557:	; 2 bytes @ 0x5
   465  0035                     	ds	1
   466                           	global	light_pattern_two_color@pattern
   467  0036                     light_pattern_two_color@pattern:	; 1 bytes @ 0x6
   468  0036                     	ds	1
   469                           	global	light_pattern_two_color@time
   470  0037                     light_pattern_two_color@time:	; 2 bytes @ 0x7
   471                           	global	running_string@j
   472  0037                     running_string@j:	; 2 bytes @ 0x7
   473                           	global	expand_shrink_square@i
   474  0037                     expand_shrink_square@i:	; 2 bytes @ 0x7
   475  0037                     	ds	2
   476                           	global	light_pattern_two_color@i
   477  0039                     light_pattern_two_color@i:	; 2 bytes @ 0x9
   478                           	global	expand_shrink_square@i_556
   479  0039                     expand_shrink_square@i_556:	; 2 bytes @ 0x9
   480  0039                     	ds	2
   481                           	global	??_main
   482  003B                     ??_main:	; 0 bytes @ 0xB
   483  003B                     	ds	1
   484 ;;Data sizes: Strings 7, constant 0, data 72, bss 9, persistent 0 stack 0
   485 ;;Auto spaces:   Size  Autos    Used
   486 ;; COMMON          14     14      14
   487 ;; BANK0           80     12      37
   488 ;; BANK1           80      0      56
   489 ;; BANK3           96      0       0
   490 ;; BANK2           96      0       0
   491                           
   492 ;;
   493 ;; Pointer list with targets:
   494                           
   495 ;; running_string@sentence	PTR unsigned char  size(1) Largest target is 7
   496 ;;		 -> STR_1(CODE[7]), 
   497 ;;
   498 ;; choose_num_alphabet@num_alp_array	PTR unsigned char  size(1) Largest target is 8
   499 ;;		 -> number_alphabet(BANK0[8]), 
   500 ;;
   501 ;; light_pattern_two_color@pattern	PTR unsigned char  size(1) Largest target is 8
   502 ;;		 -> love_shape_pattern_two_color(BANK0[8]), 
   503 ;;
   504 ;; light_pattern_one_color@pattern	PTR unsigned char  size(1) Largest target is 56
   505 ;;		 -> expand_shrink_pattern(BANK1[56]), number_alphabet(BANK0[8]), love_shape_pattern_one_color(BANK0[8]), 
   506 ;;
   507                           
   508                           
   509 ;;
   510 ;; Critical Paths under _main in COMMON
   511 ;;
   512 ;;   _main->_light_a_number_alphabet
   513 ;;   _main->_running_line
   514 ;;   _running_string->_light_a_number_alphabet
   515 ;;   _expand_shrink_square->_light_pattern_one_color
   516 ;;   _light_a_number_alphabet->_light_pattern_one_color
   517 ;;   _light_pattern_two_color->_light_a_column_two_color
   518 ;;   _light_pattern_one_color->_delay_ms
   519 ;;   _running_line->_delay_ms
   520 ;;   _running_dot->_delay_ms
   521 ;;   _light_a_column_two_color->_light_a_dot
   522 ;;
   523 ;; Critical Paths under _main in BANK0
   524 ;;
   525 ;;   _main->_light_pattern_two_color
   526 ;;   _main->_expand_shrink_square
   527 ;;   _running_string->_light_a_number_alphabet
   528 ;;
   529 ;; Critical Paths under _main in BANK1
   530 ;;
   531 ;;   None.
   532 ;;
   533 ;; Critical Paths under _main in BANK3
   534 ;;
   535 ;;   None.
   536 ;;
   537 ;; Critical Paths under _main in BANK2
   538 ;;
   539 ;;   None.
   540                           
   541 ;;
   542 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   543 ;;
   544                           
   545 ;;
   546 ;;Call Graph Tables:
   547 ;;
   548 ;; ---------------------------------------------------------------------------------
   549 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   550 ;; ---------------------------------------------------------------------------------
   551 ;; (0) _main                                                 1     1      0   15194
   552 ;;                                             11 BANK0      1     1      0
   553 ;;                               _init
   554 ;;            _light_a_number_alphabet
   555 ;;                        _running_dot
   556 ;;                       _running_line
   557 ;;            _light_pattern_one_color
   558 ;;            _light_pattern_two_color
   559 ;;                     _running_string
   560 ;;               _expand_shrink_square
   561 ;; ---------------------------------------------------------------------------------
   562 ;; (1) _running_string                                       7     6      1    6760
   563 ;;                                              2 BANK0      7     6      1
   564 ;;            _light_a_number_alphabet
   565 ;; ---------------------------------------------------------------------------------
   566 ;; (1) _expand_shrink_square                                11    11      0     472
   567 ;;                                              0 BANK0     11    11      0
   568 ;;            _light_pattern_one_color
   569 ;; ---------------------------------------------------------------------------------
   570 ;; (2) _light_a_number_alphabet                              3     2      1    6602
   571 ;;                                             13 COMMON     1     0      1
   572 ;;                                              0 BANK0      2     2      0
   573 ;;                _choose_num_alphabet
   574 ;;            _light_pattern_one_color
   575 ;; ---------------------------------------------------------------------------------
   576 ;; (1) _light_pattern_two_color                             11     9      2     580
   577 ;;                                              0 BANK0     11     9      2
   578 ;;           _light_a_column_two_color
   579 ;; ---------------------------------------------------------------------------------
   580 ;; (2) _light_pattern_one_color                              5     4      1     200
   581 ;;                                              8 COMMON     5     4      1
   582 ;;                           _delay_ms
   583 ;; ---------------------------------------------------------------------------------
   584 ;; (1) _running_line                                         6     6      0     290
   585 ;;                                              8 COMMON     6     6      0
   586 ;;                        _light_a_row
   587 ;;                           _delay_ms
   588 ;; ---------------------------------------------------------------------------------
   589 ;; (1) _running_dot                                          7     7      0     290
   590 ;;                                              8 COMMON     2     2      0
   591 ;;                                              0 BANK0      5     5      0
   592 ;;                        _light_a_dot
   593 ;;                           _delay_ms
   594 ;; ---------------------------------------------------------------------------------
   595 ;; (2) _light_a_column_two_color                             9     6      3     378
   596 ;;                                              4 COMMON     9     6      3
   597 ;;                        _light_a_dot
   598 ;; ---------------------------------------------------------------------------------
   599 ;; (3) _delay_ms                                             8     4      4      22
   600 ;;                                              0 COMMON     8     4      4
   601 ;; ---------------------------------------------------------------------------------
   602 ;; (3) _choose_num_alphabet                                  3     2      1    6358
   603 ;;                                              0 COMMON     3     2      1
   604 ;; ---------------------------------------------------------------------------------
   605 ;; (2) _light_a_row                                          2     1      1      88
   606 ;;                                              0 COMMON     2     1      1
   607 ;; ---------------------------------------------------------------------------------
   608 ;; (3) _light_a_dot                                          4     2      2     110
   609 ;;                                              0 COMMON     4     2      2
   610 ;; ---------------------------------------------------------------------------------
   611 ;; (1) _init                                                 0     0      0       0
   612 ;; ---------------------------------------------------------------------------------
   613 ;; Estimated maximum stack depth 3
   614 ;; ---------------------------------------------------------------------------------
   615                           
   616 ;; Call Graph Graphs:
   617                           
   618 ;; _main (ROOT)
   619 ;;   _init
   620 ;;   _light_a_number_alphabet
   621 ;;     _choose_num_alphabet
   622 ;;     _light_pattern_one_color
   623 ;;       _delay_ms
   624 ;;   _running_dot
   625 ;;     _light_a_dot
   626 ;;     _delay_ms
   627 ;;   _running_line
   628 ;;     _light_a_row
   629 ;;     _delay_ms
   630 ;;   _light_pattern_one_color
   631 ;;     _delay_ms
   632 ;;   _light_pattern_two_color
   633 ;;     _light_a_column_two_color
   634 ;;       _light_a_dot
   635 ;;   _running_string
   636 ;;     _light_a_number_alphabet
   637 ;;       _choose_num_alphabet
   638 ;;       _light_pattern_one_color
   639 ;;         _delay_ms
   640 ;;   _expand_shrink_square
   641 ;;     _light_pattern_one_color
   642 ;;       _delay_ms
   643 ;;
   644                           
   645 ;; Address spaces:
   646                           
   647 ;;Name               Size   Autos  Total    Cost      Usage
   648 ;;BANK3               60      0       0       9        0.0%
   649 ;;BITBANK3            60      0       0       8        0.0%
   650 ;;SFR3                 0      0       0       4        0.0%
   651 ;;BITSFR3              0      0       0       4        0.0%
   652 ;;BANK2               60      0       0      11        0.0%
   653 ;;BITBANK2            60      0       0      10        0.0%
   654 ;;SFR2                 0      0       0       5        0.0%
   655 ;;BITSFR2              0      0       0       5        0.0%
   656 ;;SFR1                 0      0       0       2        0.0%
   657 ;;BITSFR1              0      0       0       2        0.0%
   658 ;;BANK1               50      0      38       7       70.0%
   659 ;;BITBANK1            50      0       0       6        0.0%
   660 ;;CODE                 0      0       0       0        0.0%
   661 ;;DATA                 0      0      6F      12        0.0%
   662 ;;ABS                  0      0      6B       3        0.0%
   663 ;;NULL                 0      0       0       0        0.0%
   664 ;;STACK                0      0       4       2        0.0%
   665 ;;BANK0               50      C      25       5       46.3%
   666 ;;BITBANK0            50      0       0       4        0.0%
   667 ;;SFR0                 0      0       0       1        0.0%
   668 ;;BITSFR0              0      0       0       1        0.0%
   669 ;;COMMON               E      E       E       1      100.0%
   670 ;;BITCOMMON            E      0       0       0        0.0%
   671 ;;EEDATA             100      0       0       0        0.0%
   672                           
   673                           	global	_main
   674                           psect	maintext,global,class=CODE,delta=2
   675                           global __pmaintext
   676  0DC7                     __pmaintext:
   677                           
   678 ;; *************** function _main *****************
   679 ;; Defined at:
   680 ;;		line 27 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;		None               void
   687 ;; Registers used:
   688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 17F/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0
   696 ;;      Temps:          0       1       0       0       0
   697 ;;      Totals:         0       1       0       0       0
   698 ;;Total ram usage:        1 bytes
   699 ;; Hardware stack levels required when called:    4
   700 ;; This function calls:
   701 ;;		_init
   702 ;;		_light_a_number_alphabet
   703 ;;		_running_dot
   704 ;;		_running_line
   705 ;;		_light_pattern_one_color
   706 ;;		_light_pattern_two_color
   707 ;;		_running_string
   708 ;;		_expand_shrink_square
   709 ;; This function is called by:
   710 ;;		Startup code after reset
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           psect	maintext
   714                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
   715                           	line	27
   716                           	global	__size_of_main
   717  0116                     	__size_of_main	equ	__end_of_main-_main
   718                           	
   719  0DC7                     _main:	
   720                           	opt	stack 4
   721                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   722                           	line	28
   723                           	
   724  0DC7                     l2984:	
   725                           ;Dot Matrix.c: 28: init();
   726  0DC7  120A  158A  2236   	fcall	_init
              120A  158A         
   727                           	line	29
   728                           ;Dot Matrix.c: 29: while(RB1 == 1)
   729  0DCC  2E59               	goto	l863
   730                           	
   731  0DCD                     l864:	
   732                           	line	31
   733                           ;Dot Matrix.c: 30: {
   734                           ;Dot Matrix.c: 31: if(RB0 == 0)
   735  0DCD  1806               	btfsc	(48/8),(48)&7
   736  0DCE  2DD0               	goto	u3171
   737  0DCF  2DD1               	goto	u3170
   738  0DD0                     u3171:
   739  0DD0  2E40               	goto	l3010
   740  0DD1                     u3170:
   741  0DD1  2DD3               	goto	l866
   742                           	line	33
   743                           	
   744  0DD2                     l2986:	
   745                           ;Dot Matrix.c: 32: {
   746                           ;Dot Matrix.c: 33: while(RB0 == 0);
   747  0DD2  2DD3               	goto	l866
   748                           	
   749  0DD3                     l867:	
   750                           	
   751  0DD3                     l866:	
   752  0DD3  1C06               	btfss	(48/8),(48)&7
   753  0DD4  2DD6               	goto	u3181
   754  0DD5  2DD7               	goto	u3180
   755  0DD6                     u3181:
   756  0DD6  2DD3               	goto	l866
   757  0DD7                     u3180:
   758  0DD7  2DD8               	goto	l2988
   759                           	
   760  0DD8                     l868:	
   761                           	line	34
   762                           	
   763  0DD8                     l2988:	
   764                           ;Dot Matrix.c: 34: mode++;
   765  0DD8  3001               	movlw	(01h)
   766  0DD9  00BB               	movwf	(??_main+0)+0
   767  0DDA  083B               	movf	(??_main+0)+0,w
   768  0DDB  07BC               	addwf	(_mode),f
   769                           	line	35
   770                           	
   771  0DDC                     l2990:	
   772                           ;Dot Matrix.c: 35: if(mode>6)
   773  0DDC  3007               	movlw	(07h)
   774  0DDD  023C               	subwf	(_mode),w
   775  0DDE  1C03               	skipc
   776  0DDF  2DE1               	goto	u3191
   777  0DE0  2DE2               	goto	u3190
   778  0DE1                     u3191:
   779  0DE1  2E40               	goto	l3010
   780  0DE2                     u3190:
   781                           	line	37
   782                           	
   783  0DE2                     l2992:	
   784                           ;Dot Matrix.c: 36: {
   785                           ;Dot Matrix.c: 37: mode = 0;
   786  0DE2  1003               	clrc
   787  0DE3  3000               	movlw	0
   788  0DE4  1803               	btfsc	status,0
   789  0DE5  3001               	movlw	1
   790  0DE6  00BC               	movwf	(_mode)
   791  0DE7  2E40               	goto	l3010
   792                           	line	38
   793                           	
   794  0DE8                     l869:	
   795  0DE8  2E40               	goto	l3010
   796                           	line	39
   797                           	
   798  0DE9                     l865:	
   799                           	line	40
   800                           ;Dot Matrix.c: 38: }
   801                           ;Dot Matrix.c: 39: }
   802                           ;Dot Matrix.c: 40: switch(mode)
   803  0DE9  2E40               	goto	l3010
   804                           	line	42
   805                           ;Dot Matrix.c: 41: {
   806                           ;Dot Matrix.c: 42: case 0: light_a_number_alphabet('0',GREEN);
   807                           	
   808  0DEA                     l871:	
   809                           	
   810  0DEA                     l2994:	
   811  0DEA  1003               	clrc
   812  0DEB  3000               	movlw	0
   813  0DEC  1803               	btfsc	status,0
   814  0DED  3001               	movlw	1
   815  0DEE  00FD               	movwf	(?_light_a_number_alphabet)
   816  0DEF  3030               	movlw	(030h)
   817  0DF0  120A  158A  224A   	fcall	_light_a_number_alphabet
              120A  158A         
   818                           	line	43
   819                           ;Dot Matrix.c: 43: break;
   820  0DF5  2E59               	goto	l863
   821                           	line	44
   822                           ;Dot Matrix.c: 44: case 1: light_a_number_alphabet('1',GREEN);
   823                           	
   824  0DF6                     l873:	
   825                           	
   826  0DF6                     l2996:	
   827  0DF6  1003               	clrc
   828  0DF7  3000               	movlw	0
   829  0DF8  1803               	btfsc	status,0
   830  0DF9  3001               	movlw	1
   831  0DFA  00FD               	movwf	(?_light_a_number_alphabet)
   832  0DFB  3031               	movlw	(031h)
   833  0DFC  120A  158A  224A   	fcall	_light_a_number_alphabet
              120A  158A         
   834                           	line	45
   835                           ;Dot Matrix.c: 45: break;
   836  0E01  2E59               	goto	l863
   837                           	line	46
   838                           ;Dot Matrix.c: 46: case 2: light_a_number_alphabet('2',GREEN);
   839                           	
   840  0E02                     l874:	
   841                           	
   842  0E02                     l2998:	
   843  0E02  1003               	clrc
   844  0E03  3000               	movlw	0
   845  0E04  1803               	btfsc	status,0
   846  0E05  3001               	movlw	1
   847  0E06  00FD               	movwf	(?_light_a_number_alphabet)
   848  0E07  3032               	movlw	(032h)
   849  0E08  120A  158A  224A   	fcall	_light_a_number_alphabet
              120A  158A         
   850                           	line	47
   851                           ;Dot Matrix.c: 47: break;
   852  0E0D  2E59               	goto	l863
   853                           	line	48
   854                           ;Dot Matrix.c: 48: case 3: light_a_number_alphabet('3',GREEN);
   855                           	
   856  0E0E                     l875:	
   857                           	
   858  0E0E                     l3000:	
   859  0E0E  1003               	clrc
   860  0E0F  3000               	movlw	0
   861  0E10  1803               	btfsc	status,0
   862  0E11  3001               	movlw	1
   863  0E12  00FD               	movwf	(?_light_a_number_alphabet)
   864  0E13  3033               	movlw	(033h)
   865  0E14  120A  158A  224A   	fcall	_light_a_number_alphabet
              120A  158A         
   866                           	line	49
   867                           ;Dot Matrix.c: 49: break;
   868  0E19  2E59               	goto	l863
   869                           	line	50
   870                           ;Dot Matrix.c: 50: case 4: light_a_number_alphabet('4',GREEN);
   871                           	
   872  0E1A                     l876:	
   873                           	
   874  0E1A                     l3002:	
   875  0E1A  1003               	clrc
   876  0E1B  3000               	movlw	0
   877  0E1C  1803               	btfsc	status,0
   878  0E1D  3001               	movlw	1
   879  0E1E  00FD               	movwf	(?_light_a_number_alphabet)
   880  0E1F  3034               	movlw	(034h)
   881  0E20  120A  158A  224A   	fcall	_light_a_number_alphabet
              120A  158A         
   882                           	line	51
   883                           ;Dot Matrix.c: 51: break;
   884  0E25  2E59               	goto	l863
   885                           	line	52
   886                           ;Dot Matrix.c: 52: case 5: light_a_number_alphabet('5',GREEN);
   887                           	
   888  0E26                     l877:	
   889                           	
   890  0E26                     l3004:	
   891  0E26  1003               	clrc
   892  0E27  3000               	movlw	0
   893  0E28  1803               	btfsc	status,0
   894  0E29  3001               	movlw	1
   895  0E2A  00FD               	movwf	(?_light_a_number_alphabet)
   896  0E2B  3035               	movlw	(035h)
   897  0E2C  120A  158A  224A   	fcall	_light_a_number_alphabet
              120A  158A         
   898                           	line	53
   899                           ;Dot Matrix.c: 53: break;
   900  0E31  2E59               	goto	l863
   901                           	line	54
   902                           ;Dot Matrix.c: 54: case 6: light_a_number_alphabet('6',GREEN);
   903                           	
   904  0E32                     l878:	
   905                           	
   906  0E32                     l3006:	
   907  0E32  1003               	clrc
   908  0E33  3000               	movlw	0
   909  0E34  1803               	btfsc	status,0
   910  0E35  3001               	movlw	1
   911  0E36  00FD               	movwf	(?_light_a_number_alphabet)
   912  0E37  3036               	movlw	(036h)
   913  0E38  120A  158A  224A   	fcall	_light_a_number_alphabet
              120A  158A         
   914                           	line	55
   915                           ;Dot Matrix.c: 55: break;
   916  0E3D  2E59               	goto	l863
   917                           	line	56
   918                           ;Dot Matrix.c: 56: default:break;
   919                           	
   920  0E3E                     l879:	
   921  0E3E  2E59               	goto	l863
   922                           	line	57
   923                           	
   924  0E3F                     l3008:	
   925                           ;Dot Matrix.c: 57: }
   926  0E3F  2E59               	goto	l863
   927                           	line	40
   928                           	
   929  0E40                     l870:	
   930                           	
   931  0E40                     l3010:	
   932  0E40  1283               	bcf	status, 5	;RP0=0, select bank0
   933  0E41  1303               	bcf	status, 6	;RP1=0, select bank0
   934  0E42  083C               	movf	(_mode),w
   935                           	; Switch size 1, requested type "space"
   936                           ; Number of cases is 7, Range of values is 0 to 6
   937                           ; switch strategies available:
   938                           ; Name         Bytes Cycles
   939                           ; simple_byte    22    12 (average)
   940                           ; direct_byte    40    19 (fixed)
   941                           ;	Chosen strategy is simple_byte
   942                           
   943  0E43  3A00               	xorlw	0^0	; case 0
   944  0E44  1903               	skipnz
   945  0E45  2DEA               	goto	l2994
   946  0E46  3A01               	xorlw	1^0	; case 1
   947  0E47  1903               	skipnz
   948  0E48  2DF6               	goto	l2996
   949  0E49  3A03               	xorlw	2^1	; case 2
   950  0E4A  1903               	skipnz
   951  0E4B  2E02               	goto	l2998
   952  0E4C  3A01               	xorlw	3^2	; case 3
   953  0E4D  1903               	skipnz
   954  0E4E  2E0E               	goto	l3000
   955  0E4F  3A07               	xorlw	4^3	; case 4
   956  0E50  1903               	skipnz
   957  0E51  2E1A               	goto	l3002
   958  0E52  3A01               	xorlw	5^4	; case 5
   959  0E53  1903               	skipnz
   960  0E54  2E26               	goto	l3004
   961  0E55  3A03               	xorlw	6^5	; case 6
   962  0E56  1903               	skipnz
   963  0E57  2E32               	goto	l3006
   964  0E58  2E59               	goto	l863
   965                           
   966                           	line	57
   967                           	
   968  0E59                     l872:	
   969                           	line	58
   970                           	
   971  0E59                     l863:	
   972                           	line	29
   973  0E59  1283               	bcf	status, 5	;RP0=0, select bank0
   974  0E5A  1303               	bcf	status, 6	;RP1=0, select bank0
   975  0E5B  1886               	btfsc	(49/8),(49)&7
   976  0E5C  2E5E               	goto	u3201
   977  0E5D  2E5F               	goto	u3200
   978  0E5E                     u3201:
   979  0E5E  2DCD               	goto	l864
   980  0E5F                     u3200:
   981  0E5F  2E61               	goto	l881
   982                           	
   983  0E60                     l880:	
   984                           	line	59
   985                           ;Dot Matrix.c: 58: }
   986                           ;Dot Matrix.c: 59: while(RB1 == 0);
   987  0E60  2E61               	goto	l881
   988                           	
   989  0E61                     l882:	
   990                           	
   991  0E61                     l881:	
   992  0E61  1C86               	btfss	(49/8),(49)&7
   993  0E62  2E64               	goto	u3211
   994  0E63  2E65               	goto	u3210
   995  0E64                     u3211:
   996  0E64  2E61               	goto	l881
   997  0E65                     u3210:
   998  0E65  2EBF               	goto	l3028
   999                           	
  1000  0E66                     l883:	
  1001  0E66  2EBF               	goto	l3028
  1002                           	line	63
  1003                           ;Dot Matrix.c: 63: while(1)
  1004                           	
  1005  0E67                     l884:	
  1006                           	line	65
  1007                           ;Dot Matrix.c: 64: {
  1008                           ;Dot Matrix.c: 65: switch(mode)
  1009  0E67  2EBF               	goto	l3028
  1010                           	line	67
  1011                           ;Dot Matrix.c: 66: {
  1012                           ;Dot Matrix.c: 67: case 0: running_dot(GREEN);
  1013                           	
  1014  0E68                     l886:	
  1015                           	
  1016  0E68                     l3012:	
  1017  0E68  3000               	movlw	(0)
  1018  0E69  120A  118A  202C   	fcall	_running_dot
              120A  158A         
  1019                           	line	68
  1020                           ;Dot Matrix.c: 68: break;
  1021  0E6E  2EBF               	goto	l3028
  1022                           	line	69
  1023                           ;Dot Matrix.c: 69: case 1: running_line(GREEN);
  1024                           	
  1025  0E6F                     l888:	
  1026                           	
  1027  0E6F                     l3014:	
  1028  0E6F  3000               	movlw	(0)
  1029  0E70  120A  158A  2423   	fcall	_running_line
              120A  158A         
  1030                           	line	70
  1031                           ;Dot Matrix.c: 70: break;
  1032  0E75  2EBF               	goto	l3028
  1033                           	line	71
  1034                           ;Dot Matrix.c: 71: case 2: light_pattern_one_color(love_shape_pattern_one_color,GREEN);
  1035                           	
  1036  0E76                     l889:	
  1037                           	
  1038  0E76                     l3016:	
  1039  0E76  1003               	clrc
  1040  0E77  3000               	movlw	0
  1041  0E78  1803               	btfsc	status,0
  1042  0E79  3001               	movlw	1
  1043  0E7A  00F8               	movwf	(?_light_pattern_one_color)
  1044  0E7B  3020               	movlw	(_love_shape_pattern_one_color)&0ffh
  1045  0E7C  120A  158A  2316   	fcall	_light_pattern_one_color
              120A  158A         
  1046                           	line	72
  1047                           ;Dot Matrix.c: 72: break;
  1048  0E81  2EBF               	goto	l3028
  1049                           	line	73
  1050                           ;Dot Matrix.c: 73: case 3: light_pattern_one_color(love_shape_pattern_one_color,GREEN);
  1051                           	
  1052  0E82                     l890:	
  1053                           	
  1054  0E82                     l3018:	
  1055  0E82  1003               	clrc
  1056  0E83  3000               	movlw	0
  1057  0E84  1803               	btfsc	status,0
  1058  0E85  3001               	movlw	1
  1059  0E86  00F8               	movwf	(?_light_pattern_one_color)
  1060  0E87  3020               	movlw	(_love_shape_pattern_one_color)&0ffh
  1061  0E88  120A  158A  2316   	fcall	_light_pattern_one_color
              120A  158A         
  1062                           	line	74
  1063                           ;Dot Matrix.c: 74: light_pattern_one_color(love_shape_pattern_one_color,RED);
  1064  0E8D  01F8               	clrf	(?_light_pattern_one_color)
  1065  0E8E  1403               	bsf	status,0
  1066  0E8F  0DF8               	rlf	(?_light_pattern_one_color),f
  1067  0E90  3020               	movlw	(_love_shape_pattern_one_color)&0ffh
  1068  0E91  120A  158A  2316   	fcall	_light_pattern_one_color
              120A  158A         
  1069                           	line	75
  1070                           ;Dot Matrix.c: 75: break;
  1071  0E96  2EBF               	goto	l3028
  1072                           	line	76
  1073                           ;Dot Matrix.c: 76: case 4: light_pattern_two_color(love_shape_pattern_two_color,RED,GREE
                                 N);
  1074                           	
  1075  0E97                     l891:	
  1076                           	
  1077  0E97                     l3020:	
  1078  0E97  1283               	bcf	status, 5	;RP0=0, select bank0
  1079  0E98  1303               	bcf	status, 6	;RP1=0, select bank0
  1080  0E99  01B0               	clrf	(?_light_pattern_two_color)
  1081  0E9A  1403               	bsf	status,0
  1082  0E9B  0DB0               	rlf	(?_light_pattern_two_color),f
  1083  0E9C  1003               	clrc
  1084  0E9D  3000               	movlw	0
  1085  0E9E  1803               	btfsc	status,0
  1086  0E9F  3001               	movlw	1
  1087  0EA0  00B1               	movwf	0+(?_light_pattern_two_color)+01h
  1088  0EA1  3028               	movlw	(_love_shape_pattern_two_color)&0ffh
  1089  0EA2  120A  158A  248F   	fcall	_light_pattern_two_color
              120A  158A         
  1090                           	line	77
  1091                           ;Dot Matrix.c: 77: break;
  1092  0EA7  2EBF               	goto	l3028
  1093                           	line	78
  1094                           ;Dot Matrix.c: 78: case 5: running_string("CYTRON",GREEN);
  1095                           	
  1096  0EA8                     l892:	
  1097                           	
  1098  0EA8                     l3022:	
  1099  0EA8  1003               	clrc
  1100  0EA9  3000               	movlw	0
  1101  0EAA  1803               	btfsc	status,0
  1102  0EAB  3001               	movlw	1
  1103  0EAC  1283               	bcf	status, 5	;RP0=0, select bank0
  1104  0EAD  1303               	bcf	status, 6	;RP1=0, select bank0
  1105  0EAE  00B2               	movwf	(?_running_string)
  1106  0EAF  3001               	movlw	((STR_1-__stringbase))&0ffh
  1107  0EB0  120A  158A  23C7   	fcall	_running_string
              120A  158A         
  1108                           	line	79
  1109                           ;Dot Matrix.c: 79: break;
  1110  0EB5  2EBF               	goto	l3028
  1111                           	line	80
  1112                           ;Dot Matrix.c: 80: case 6: expand_shrink_square(GREEN);
  1113                           	
  1114  0EB6                     l893:	
  1115                           	
  1116  0EB6                     l3024:	
  1117  0EB6  3000               	movlw	(0)
  1118  0EB7  120A  158A  2501   	fcall	_expand_shrink_square
              120A  158A         
  1119                           	line	81
  1120                           ;Dot Matrix.c: 81: break;
  1121  0EBC  2EBF               	goto	l3028
  1122                           	line	82
  1123                           ;Dot Matrix.c: 82: default: break;
  1124                           	
  1125  0EBD                     l894:	
  1126  0EBD  2EBF               	goto	l3028
  1127                           	line	83
  1128                           	
  1129  0EBE                     l3026:	
  1130                           ;Dot Matrix.c: 83: }
  1131  0EBE  2EBF               	goto	l3028
  1132                           	line	65
  1133                           	
  1134  0EBF                     l885:	
  1135                           	
  1136  0EBF                     l3028:	
  1137  0EBF  1283               	bcf	status, 5	;RP0=0, select bank0
  1138  0EC0  1303               	bcf	status, 6	;RP1=0, select bank0
  1139  0EC1  083C               	movf	(_mode),w
  1140                           	; Switch size 1, requested type "space"
  1141                           ; Number of cases is 7, Range of values is 0 to 6
  1142                           ; switch strategies available:
  1143                           ; Name         Bytes Cycles
  1144                           ; simple_byte    22    12 (average)
  1145                           ; direct_byte    40    19 (fixed)
  1146                           ;	Chosen strategy is simple_byte
  1147                           
  1148  0EC2  3A00               	xorlw	0^0	; case 0
  1149  0EC3  1903               	skipnz
  1150  0EC4  2E68               	goto	l3012
  1151  0EC5  3A01               	xorlw	1^0	; case 1
  1152  0EC6  1903               	skipnz
  1153  0EC7  2E6F               	goto	l3014
  1154  0EC8  3A03               	xorlw	2^1	; case 2
  1155  0EC9  1903               	skipnz
  1156  0ECA  2E76               	goto	l3016
  1157  0ECB  3A01               	xorlw	3^2	; case 3
  1158  0ECC  1903               	skipnz
  1159  0ECD  2E82               	goto	l3018
  1160  0ECE  3A07               	xorlw	4^3	; case 4
  1161  0ECF  1903               	skipnz
  1162  0ED0  2E97               	goto	l3020
  1163  0ED1  3A01               	xorlw	5^4	; case 5
  1164  0ED2  1903               	skipnz
  1165  0ED3  2EA8               	goto	l3022
  1166  0ED4  3A03               	xorlw	6^5	; case 6
  1167  0ED5  1903               	skipnz
  1168  0ED6  2EB6               	goto	l3024
  1169  0ED7  2EBF               	goto	l3028
  1170                           
  1171                           	line	83
  1172                           	
  1173  0ED8                     l887:	
  1174  0ED8  2EBF               	goto	l3028
  1175                           	line	84
  1176                           	
  1177  0ED9                     l895:	
  1178                           	line	63
  1179  0ED9  2EBF               	goto	l3028
  1180                           	
  1181  0EDA                     l896:	
  1182                           	line	85
  1183                           	
  1184  0EDA                     l897:	
  1185                           	global	start
  1186  0EDA  120A  118A  2800   	ljmp	start
  1187                           	opt stack 0
  1188                           GLOBAL	__end_of_main
  1189  0EDD                     	__end_of_main:
  1190 ;; =============== function _main ends ============
  1191                           
  1192                           	signat	_main,88
  1193                           	global	_running_string
  1194                           psect	text337,local,class=CODE,delta=2
  1195                           global __ptext337
  1196  0BC7                     __ptext337:
  1197                           
  1198 ;; *************** function _running_string *****************
  1199 ;; Defined at:
  1200 ;;		line 604 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  sentence        1    wreg     PTR unsigned char 
  1203 ;;		 -> STR_1(7), 
  1204 ;;  color           1    2[BANK0 ] unsigned char 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  sentence        1    4[BANK0 ] PTR unsigned char 
  1207 ;;		 -> STR_1(7), 
  1208 ;;  j               2    7[BANK0 ] int 
  1209 ;;  i               2    5[BANK0 ] int 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;		None               void
  1212 ;; Registers used:
  1213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         0       1       0       0       0
  1220 ;;      Locals:         0       5       0       0       0
  1221 ;;      Temps:          0       1       0       0       0
  1222 ;;      Totals:         0       7       0       0       0
  1223 ;;Total ram usage:        7 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    3
  1226 ;; This function calls:
  1227 ;;		_light_a_number_alphabet
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           psect	text337
  1233                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  1234                           	line	604
  1235                           	global	__size_of_running_string
  1236  005C                     	__size_of_running_string	equ	__end_of_running_string-_running_string
  1237                           	
  1238  0BC7                     _running_string:	
  1239                           	opt	stack 4
  1240                           ; Regs used in _running_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1241                           ;running_string@sentence stored from wreg
  1242  0BC7  1283               	bcf	status, 5	;RP0=0, select bank0
  1243  0BC8  1303               	bcf	status, 6	;RP1=0, select bank0
  1244  0BC9  00B4               	movwf	(running_string@sentence)
  1245                           	line	605
  1246                           	
  1247  0BCA                     l2966:	
  1248                           ;Dot Matrix.c: 605: for(int i = 0; sentence[i] != '\0'; i++)
  1249  0BCA  3000               	movlw	low(0)
  1250  0BCB  00B5               	movwf	(running_string@i)
  1251  0BCC  3000               	movlw	high(0)
  1252  0BCD  00B6               	movwf	((running_string@i))+1
  1253  0BCE  2C14               	goto	l2982
  1254                           	line	606
  1255                           	
  1256  0BCF                     l1020:	
  1257                           	line	607
  1258                           	
  1259  0BCF                     l2968:	
  1260                           ;Dot Matrix.c: 606: {
  1261                           ;Dot Matrix.c: 607: for(int j = 0; j<50; j++)
  1262  0BCF  3000               	movlw	low(0)
  1263  0BD0  00B7               	movwf	(running_string@j)
  1264  0BD1  3000               	movlw	high(0)
  1265  0BD2  00B8               	movwf	((running_string@j))+1
  1266                           	
  1267  0BD3                     l2970:	
  1268  0BD3  0838               	movf	(running_string@j+1),w
  1269  0BD4  3A80               	xorlw	80h
  1270  0BD5  00FF               	movwf	btemp+1
  1271  0BD6  3080               	movlw	(high(032h))^80h
  1272  0BD7  027F               	subwf	btemp+1,w
  1273  0BD8  1D03               	skipz
  1274  0BD9  2BDC               	goto	u3145
  1275  0BDA  3032               	movlw	low(032h)
  1276  0BDB  0237               	subwf	(running_string@j),w
  1277  0BDC                     u3145:
  1278                           
  1279  0BDC  1C03               	skipc
  1280  0BDD  2BDF               	goto	u3141
  1281  0BDE  2BE0               	goto	u3140
  1282  0BDF                     u3141:
  1283  0BDF  2BE2               	goto	l2974
  1284  0BE0                     u3140:
  1285  0BE0  2C0B               	goto	l2980
  1286                           	
  1287  0BE1                     l2972:	
  1288  0BE1  2C0B               	goto	l2980
  1289                           	line	608
  1290                           	
  1291  0BE2                     l1021:	
  1292                           	
  1293  0BE2                     l2974:	
  1294                           ;Dot Matrix.c: 608: light_a_number_alphabet(sentence[i], color);
  1295  0BE2  1283               	bcf	status, 5	;RP0=0, select bank0
  1296  0BE3  1303               	bcf	status, 6	;RP1=0, select bank0
  1297  0BE4  0832               	movf	(running_string@color),w
  1298  0BE5  00B3               	movwf	(??_running_string+0)+0
  1299  0BE6  0833               	movf	(??_running_string+0)+0,w
  1300  0BE7  00FD               	movwf	(?_light_a_number_alphabet)
  1301  0BE8  0835               	movf	(running_string@i),w
  1302  0BE9  0734               	addwf	(running_string@sentence),w
  1303  0BEA  0084               	movwf	fsr0
  1304  0BEB  120A  158A  2000   	fcall	stringdir
              120A  158A         
  1305  0BF0  120A  158A  224A   	fcall	_light_a_number_alphabet
              120A  158A         
  1306                           	line	607
  1307                           	
  1308  0BF5                     l2976:	
  1309  0BF5  3001               	movlw	low(01h)
  1310  0BF6  1283               	bcf	status, 5	;RP0=0, select bank0
  1311  0BF7  1303               	bcf	status, 6	;RP1=0, select bank0
  1312  0BF8  07B7               	addwf	(running_string@j),f
  1313  0BF9  1803               	skipnc
  1314  0BFA  0AB8               	incf	(running_string@j+1),f
  1315  0BFB  3000               	movlw	high(01h)
  1316  0BFC  07B8               	addwf	(running_string@j+1),f
  1317                           	
  1318  0BFD                     l2978:	
  1319  0BFD  0838               	movf	(running_string@j+1),w
  1320  0BFE  3A80               	xorlw	80h
  1321  0BFF  00FF               	movwf	btemp+1
  1322  0C00  3080               	movlw	(high(032h))^80h
  1323  0C01  027F               	subwf	btemp+1,w
  1324  0C02  1D03               	skipz
  1325  0C03  2C06               	goto	u3155
  1326  0C04  3032               	movlw	low(032h)
  1327  0C05  0237               	subwf	(running_string@j),w
  1328  0C06                     u3155:
  1329                           
  1330  0C06  1C03               	skipc
  1331  0C07  2C09               	goto	u3151
  1332  0C08  2C0A               	goto	u3150
  1333  0C09                     u3151:
  1334  0C09  2BE2               	goto	l2974
  1335  0C0A                     u3150:
  1336  0C0A  2C0B               	goto	l2980
  1337                           	
  1338  0C0B                     l1022:	
  1339                           	line	605
  1340                           	
  1341  0C0B                     l2980:	
  1342  0C0B  3001               	movlw	low(01h)
  1343  0C0C  1283               	bcf	status, 5	;RP0=0, select bank0
  1344  0C0D  1303               	bcf	status, 6	;RP1=0, select bank0
  1345  0C0E  07B5               	addwf	(running_string@i),f
  1346  0C0F  1803               	skipnc
  1347  0C10  0AB6               	incf	(running_string@i+1),f
  1348  0C11  3000               	movlw	high(01h)
  1349  0C12  07B6               	addwf	(running_string@i+1),f
  1350  0C13  2C14               	goto	l2982
  1351                           	
  1352  0C14                     l1019:	
  1353                           	
  1354  0C14                     l2982:	
  1355  0C14  0835               	movf	(running_string@i),w
  1356  0C15  0734               	addwf	(running_string@sentence),w
  1357  0C16  0084               	movwf	fsr0
  1358  0C17  120A  158A  2000   	fcall	stringdir
              120A  158A         
  1359  0C1C  3800               	iorlw	0
  1360  0C1D  1D03               	skipz
  1361  0C1E  2C20               	goto	u3161
  1362  0C1F  2C21               	goto	u3160
  1363  0C20                     u3161:
  1364  0C20  2BCF               	goto	l2968
  1365  0C21                     u3160:
  1366  0C21  2C22               	goto	l1024
  1367                           	
  1368  0C22                     l1023:	
  1369                           	line	610
  1370                           	
  1371  0C22                     l1024:	
  1372  0C22  0008               	return
  1373                           	opt stack 0
  1374                           GLOBAL	__end_of_running_string
  1375  0C23                     	__end_of_running_string:
  1376 ;; =============== function _running_string ends ============
  1377                           
  1378                           	signat	_running_string,8312
  1379                           	global	_expand_shrink_square
  1380                           psect	text338,local,class=CODE,delta=2
  1381                           global __ptext338
  1382  0D01                     __ptext338:
  1383                           
  1384 ;; *************** function _expand_shrink_square *****************
  1385 ;; Defined at:
  1386 ;;		line 613 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  color           1    wreg     unsigned char 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  color           1    2[BANK0 ] unsigned char 
  1391 ;;  j               2    5[BANK0 ] int 
  1392 ;;  j               2    3[BANK0 ] int 
  1393 ;;  i               2    9[BANK0 ] int 
  1394 ;;  i               2    7[BANK0 ] int 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;		None               void
  1397 ;; Registers used:
  1398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         0       0       0       0       0
  1405 ;;      Locals:         0       9       0       0       0
  1406 ;;      Temps:          0       2       0       0       0
  1407 ;;      Totals:         0      11       0       0       0
  1408 ;;Total ram usage:       11 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    2
  1411 ;; This function calls:
  1412 ;;		_light_pattern_one_color
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           psect	text338
  1418                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  1419                           	line	613
  1420                           	global	__size_of_expand_shrink_square
  1421  00C6                     	__size_of_expand_shrink_square	equ	__end_of_expand_shrink_square-_expand_shrink_square
  1422                           	
  1423  0D01                     _expand_shrink_square:	
  1424                           	opt	stack 5
  1425                           ; Regs used in _expand_shrink_square: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
                                 k]
  1426                           ;expand_shrink_square@color stored from wreg
  1427  0D01  1283               	bcf	status, 5	;RP0=0, select bank0
  1428  0D02  1303               	bcf	status, 6	;RP1=0, select bank0
  1429  0D03  00B2               	movwf	(expand_shrink_square@color)
  1430                           	line	614
  1431                           	
  1432  0D04                     l2922:	
  1433                           ;Dot Matrix.c: 614: for(int i = 0; i<7; i++)
  1434  0D04  3000               	movlw	low(0)
  1435  0D05  00B7               	movwf	(expand_shrink_square@i)
  1436  0D06  3000               	movlw	high(0)
  1437  0D07  00B8               	movwf	((expand_shrink_square@i))+1
  1438                           	
  1439  0D08                     l2924:	
  1440  0D08  0838               	movf	(expand_shrink_square@i+1),w
  1441  0D09  3A80               	xorlw	80h
  1442  0D0A  00FF               	movwf	btemp+1
  1443  0D0B  3080               	movlw	(high(07h))^80h
  1444  0D0C  027F               	subwf	btemp+1,w
  1445  0D0D  1D03               	skipz
  1446  0D0E  2D11               	goto	u3045
  1447  0D0F  3007               	movlw	low(07h)
  1448  0D10  0237               	subwf	(expand_shrink_square@i),w
  1449  0D11                     u3045:
  1450                           
  1451  0D11  1C03               	skipc
  1452  0D12  2D14               	goto	u3041
  1453  0D13  2D15               	goto	u3040
  1454  0D14                     u3041:
  1455  0D14  2D17               	goto	l2928
  1456  0D15                     u3040:
  1457  0D15  2D6E               	goto	l2944
  1458                           	
  1459  0D16                     l2926:	
  1460  0D16  2D6E               	goto	l2944
  1461                           	line	615
  1462                           	
  1463  0D17                     l1027:	
  1464                           	
  1465  0D17                     l2928:	
  1466                           ;Dot Matrix.c: 615: for(int j = 0; j<5; j++)
  1467  0D17  3000               	movlw	low(0)
  1468  0D18  1283               	bcf	status, 5	;RP0=0, select bank0
  1469  0D19  1303               	bcf	status, 6	;RP1=0, select bank0
  1470  0D1A  00B3               	movwf	(expand_shrink_square@j)
  1471  0D1B  3000               	movlw	high(0)
  1472  0D1C  00B4               	movwf	((expand_shrink_square@j))+1
  1473                           	
  1474  0D1D                     l2930:	
  1475  0D1D  0834               	movf	(expand_shrink_square@j+1),w
  1476  0D1E  3A80               	xorlw	80h
  1477  0D1F  00FF               	movwf	btemp+1
  1478  0D20  3080               	movlw	(high(05h))^80h
  1479  0D21  027F               	subwf	btemp+1,w
  1480  0D22  1D03               	skipz
  1481  0D23  2D26               	goto	u3055
  1482  0D24  3005               	movlw	low(05h)
  1483  0D25  0233               	subwf	(expand_shrink_square@j),w
  1484  0D26                     u3055:
  1485                           
  1486  0D26  1C03               	skipc
  1487  0D27  2D29               	goto	u3051
  1488  0D28  2D2A               	goto	u3050
  1489  0D29                     u3051:
  1490  0D29  2D2C               	goto	l2934
  1491  0D2A                     u3050:
  1492  0D2A  2D58               	goto	l2940
  1493                           	
  1494  0D2B                     l2932:	
  1495  0D2B  2D58               	goto	l2940
  1496                           	line	616
  1497                           	
  1498  0D2C                     l1029:	
  1499                           	
  1500  0D2C                     l2934:	
  1501                           ;Dot Matrix.c: 616: light_pattern_one_color(expand_shrink_pattern[i],color);
  1502  0D2C  1283               	bcf	status, 5	;RP0=0, select bank0
  1503  0D2D  1303               	bcf	status, 6	;RP1=0, select bank0
  1504  0D2E  0832               	movf	(expand_shrink_square@color),w
  1505  0D2F  00B0               	movwf	(??_expand_shrink_square+0)+0
  1506  0D30  0830               	movf	(??_expand_shrink_square+0)+0,w
  1507  0D31  00F8               	movwf	(?_light_pattern_one_color)
  1508  0D32  0837               	movf	(expand_shrink_square@i),w
  1509  0D33  00B1               	movwf	(??_expand_shrink_square+1)+0
  1510  0D34  3002               	movlw	(03h)-1
  1511  0D35                     u3065:
  1512  0D35  1003               	clrc
  1513  0D36  0DB1               	rlf	(??_expand_shrink_square+1)+0,f
  1514  0D37  3EFF               	addlw	-1
  1515  0D38  1D03               	skipz
  1516  0D39  2D35               	goto	u3065
  1517  0D3A  1003               	clrc
  1518  0D3B  0D31               	rlf	(??_expand_shrink_square+1)+0,w
  1519  0D3C  3EA0               	addlw	_expand_shrink_pattern&0ffh
  1520  0D3D  120A  158A  2316   	fcall	_light_pattern_one_color
              120A  158A         
  1521                           	line	615
  1522                           	
  1523  0D42                     l2936:	
  1524  0D42  3001               	movlw	low(01h)
  1525  0D43  1283               	bcf	status, 5	;RP0=0, select bank0
  1526  0D44  1303               	bcf	status, 6	;RP1=0, select bank0
  1527  0D45  07B3               	addwf	(expand_shrink_square@j),f
  1528  0D46  1803               	skipnc
  1529  0D47  0AB4               	incf	(expand_shrink_square@j+1),f
  1530  0D48  3000               	movlw	high(01h)
  1531  0D49  07B4               	addwf	(expand_shrink_square@j+1),f
  1532                           	
  1533  0D4A                     l2938:	
  1534  0D4A  0834               	movf	(expand_shrink_square@j+1),w
  1535  0D4B  3A80               	xorlw	80h
  1536  0D4C  00FF               	movwf	btemp+1
  1537  0D4D  3080               	movlw	(high(05h))^80h
  1538  0D4E  027F               	subwf	btemp+1,w
  1539  0D4F  1D03               	skipz
  1540  0D50  2D53               	goto	u3075
  1541  0D51  3005               	movlw	low(05h)
  1542  0D52  0233               	subwf	(expand_shrink_square@j),w
  1543  0D53                     u3075:
  1544                           
  1545  0D53  1C03               	skipc
  1546  0D54  2D56               	goto	u3071
  1547  0D55  2D57               	goto	u3070
  1548  0D56                     u3071:
  1549  0D56  2D2C               	goto	l2934
  1550  0D57                     u3070:
  1551  0D57  2D58               	goto	l2940
  1552                           	
  1553  0D58                     l1030:	
  1554                           	line	614
  1555                           	
  1556  0D58                     l2940:	
  1557  0D58  3001               	movlw	low(01h)
  1558  0D59  1283               	bcf	status, 5	;RP0=0, select bank0
  1559  0D5A  1303               	bcf	status, 6	;RP1=0, select bank0
  1560  0D5B  07B7               	addwf	(expand_shrink_square@i),f
  1561  0D5C  1803               	skipnc
  1562  0D5D  0AB8               	incf	(expand_shrink_square@i+1),f
  1563  0D5E  3000               	movlw	high(01h)
  1564  0D5F  07B8               	addwf	(expand_shrink_square@i+1),f
  1565                           	
  1566  0D60                     l2942:	
  1567  0D60  0838               	movf	(expand_shrink_square@i+1),w
  1568  0D61  3A80               	xorlw	80h
  1569  0D62  00FF               	movwf	btemp+1
  1570  0D63  3080               	movlw	(high(07h))^80h
  1571  0D64  027F               	subwf	btemp+1,w
  1572  0D65  1D03               	skipz
  1573  0D66  2D69               	goto	u3085
  1574  0D67  3007               	movlw	low(07h)
  1575  0D68  0237               	subwf	(expand_shrink_square@i),w
  1576  0D69                     u3085:
  1577                           
  1578  0D69  1C03               	skipc
  1579  0D6A  2D6C               	goto	u3081
  1580  0D6B  2D6D               	goto	u3080
  1581  0D6C                     u3081:
  1582  0D6C  2D17               	goto	l2928
  1583  0D6D                     u3080:
  1584  0D6D  2D6E               	goto	l2944
  1585                           	
  1586  0D6E                     l1028:	
  1587                           	line	618
  1588                           	
  1589  0D6E                     l2944:	
  1590                           ;Dot Matrix.c: 618: for(int i = 6; i>=0; i--)
  1591  0D6E  3006               	movlw	low(06h)
  1592  0D6F  1283               	bcf	status, 5	;RP0=0, select bank0
  1593  0D70  1303               	bcf	status, 6	;RP1=0, select bank0
  1594  0D71  00B9               	movwf	(expand_shrink_square@i_556)
  1595  0D72  3000               	movlw	high(06h)
  1596  0D73  00BA               	movwf	((expand_shrink_square@i_556))+1
  1597                           	
  1598  0D74                     l2946:	
  1599  0D74  1FBA               	btfss	(expand_shrink_square@i_556+1),7
  1600  0D75  2D77               	goto	u3091
  1601  0D76  2D78               	goto	u3090
  1602  0D77                     u3091:
  1603  0D77  2D7A               	goto	l2950
  1604  0D78                     u3090:
  1605  0D78  2DC6               	goto	l1035
  1606                           	
  1607  0D79                     l2948:	
  1608  0D79  2DC6               	goto	l1035
  1609                           	line	619
  1610                           	
  1611  0D7A                     l1031:	
  1612                           	
  1613  0D7A                     l2950:	
  1614                           ;Dot Matrix.c: 619: for(int j = 0; j<5; j++)
  1615  0D7A  3000               	movlw	low(0)
  1616  0D7B  00B5               	movwf	(expand_shrink_square@j_557)
  1617  0D7C  3000               	movlw	high(0)
  1618  0D7D  00B6               	movwf	((expand_shrink_square@j_557))+1
  1619                           	
  1620  0D7E                     l2952:	
  1621  0D7E  0836               	movf	(expand_shrink_square@j_557+1),w
  1622  0D7F  3A80               	xorlw	80h
  1623  0D80  00FF               	movwf	btemp+1
  1624  0D81  3080               	movlw	(high(05h))^80h
  1625  0D82  027F               	subwf	btemp+1,w
  1626  0D83  1D03               	skipz
  1627  0D84  2D87               	goto	u3105
  1628  0D85  3005               	movlw	low(05h)
  1629  0D86  0235               	subwf	(expand_shrink_square@j_557),w
  1630  0D87                     u3105:
  1631                           
  1632  0D87  1C03               	skipc
  1633  0D88  2D8A               	goto	u3101
  1634  0D89  2D8B               	goto	u3100
  1635  0D8A                     u3101:
  1636  0D8A  2D8D               	goto	l2956
  1637  0D8B                     u3100:
  1638  0D8B  2DB9               	goto	l2962
  1639                           	
  1640  0D8C                     l2954:	
  1641  0D8C  2DB9               	goto	l2962
  1642                           	line	620
  1643                           	
  1644  0D8D                     l1033:	
  1645                           	
  1646  0D8D                     l2956:	
  1647                           ;Dot Matrix.c: 620: light_pattern_one_color(expand_shrink_pattern[i],color);
  1648  0D8D  1283               	bcf	status, 5	;RP0=0, select bank0
  1649  0D8E  1303               	bcf	status, 6	;RP1=0, select bank0
  1650  0D8F  0832               	movf	(expand_shrink_square@color),w
  1651  0D90  00B0               	movwf	(??_expand_shrink_square+0)+0
  1652  0D91  0830               	movf	(??_expand_shrink_square+0)+0,w
  1653  0D92  00F8               	movwf	(?_light_pattern_one_color)
  1654  0D93  0839               	movf	(expand_shrink_square@i_556),w
  1655  0D94  00B1               	movwf	(??_expand_shrink_square+1)+0
  1656  0D95  3002               	movlw	(03h)-1
  1657  0D96                     u3115:
  1658  0D96  1003               	clrc
  1659  0D97  0DB1               	rlf	(??_expand_shrink_square+1)+0,f
  1660  0D98  3EFF               	addlw	-1
  1661  0D99  1D03               	skipz
  1662  0D9A  2D96               	goto	u3115
  1663  0D9B  1003               	clrc
  1664  0D9C  0D31               	rlf	(??_expand_shrink_square+1)+0,w
  1665  0D9D  3EA0               	addlw	_expand_shrink_pattern&0ffh
  1666  0D9E  120A  158A  2316   	fcall	_light_pattern_one_color
              120A  158A         
  1667                           	line	619
  1668                           	
  1669  0DA3                     l2958:	
  1670  0DA3  3001               	movlw	low(01h)
  1671  0DA4  1283               	bcf	status, 5	;RP0=0, select bank0
  1672  0DA5  1303               	bcf	status, 6	;RP1=0, select bank0
  1673  0DA6  07B5               	addwf	(expand_shrink_square@j_557),f
  1674  0DA7  1803               	skipnc
  1675  0DA8  0AB6               	incf	(expand_shrink_square@j_557+1),f
  1676  0DA9  3000               	movlw	high(01h)
  1677  0DAA  07B6               	addwf	(expand_shrink_square@j_557+1),f
  1678                           	
  1679  0DAB                     l2960:	
  1680  0DAB  0836               	movf	(expand_shrink_square@j_557+1),w
  1681  0DAC  3A80               	xorlw	80h
  1682  0DAD  00FF               	movwf	btemp+1
  1683  0DAE  3080               	movlw	(high(05h))^80h
  1684  0DAF  027F               	subwf	btemp+1,w
  1685  0DB0  1D03               	skipz
  1686  0DB1  2DB4               	goto	u3125
  1687  0DB2  3005               	movlw	low(05h)
  1688  0DB3  0235               	subwf	(expand_shrink_square@j_557),w
  1689  0DB4                     u3125:
  1690                           
  1691  0DB4  1C03               	skipc
  1692  0DB5  2DB7               	goto	u3121
  1693  0DB6  2DB8               	goto	u3120
  1694  0DB7                     u3121:
  1695  0DB7  2D8D               	goto	l2956
  1696  0DB8                     u3120:
  1697  0DB8  2DB9               	goto	l2962
  1698                           	
  1699  0DB9                     l1034:	
  1700                           	line	618
  1701                           	
  1702  0DB9                     l2962:	
  1703  0DB9  30FF               	movlw	low(-1)
  1704  0DBA  1283               	bcf	status, 5	;RP0=0, select bank0
  1705  0DBB  1303               	bcf	status, 6	;RP1=0, select bank0
  1706  0DBC  07B9               	addwf	(expand_shrink_square@i_556),f
  1707  0DBD  1803               	skipnc
  1708  0DBE  0ABA               	incf	(expand_shrink_square@i_556+1),f
  1709  0DBF  30FF               	movlw	high(-1)
  1710  0DC0  07BA               	addwf	(expand_shrink_square@i_556+1),f
  1711                           	
  1712  0DC1                     l2964:	
  1713  0DC1  1FBA               	btfss	(expand_shrink_square@i_556+1),7
  1714  0DC2  2DC4               	goto	u3131
  1715  0DC3  2DC5               	goto	u3130
  1716  0DC4                     u3131:
  1717  0DC4  2D7A               	goto	l2950
  1718  0DC5                     u3130:
  1719  0DC5  2DC6               	goto	l1035
  1720                           	
  1721  0DC6                     l1032:	
  1722                           	line	621
  1723                           	
  1724  0DC6                     l1035:	
  1725  0DC6  0008               	return
  1726                           	opt stack 0
  1727                           GLOBAL	__end_of_expand_shrink_square
  1728  0DC7                     	__end_of_expand_shrink_square:
  1729 ;; =============== function _expand_shrink_square ends ============
  1730                           
  1731                           	signat	_expand_shrink_square,4216
  1732                           	global	_light_a_number_alphabet
  1733                           psect	text339,local,class=CODE,delta=2
  1734                           global __ptext339
  1735  0A4A                     __ptext339:
  1736                           
  1737 ;; *************** function _light_a_number_alphabet *****************
  1738 ;; Defined at:
  1739 ;;		line 598 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  num_alp         1    wreg     unsigned char 
  1742 ;;  color           1   13[COMMON] unsigned char 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  num_alp         1    1[BANK0 ] unsigned char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;		None               void
  1747 ;; Registers used:
  1748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1754 ;;      Params:         1       0       0       0       0
  1755 ;;      Locals:         0       1       0       0       0
  1756 ;;      Temps:          0       1       0       0       0
  1757 ;;      Totals:         1       2       0       0       0
  1758 ;;Total ram usage:        3 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; Hardware stack levels required when called:    2
  1761 ;; This function calls:
  1762 ;;		_choose_num_alphabet
  1763 ;;		_light_pattern_one_color
  1764 ;; This function is called by:
  1765 ;;		_main
  1766 ;;		_running_string
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           psect	text339
  1770                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  1771                           	line	598
  1772                           	global	__size_of_light_a_number_alphabet
  1773  001A                     	__size_of_light_a_number_alphabet	equ	__end_of_light_a_number_alphabet-_light_a_number_
                                 alphabet
  1774                           	
  1775  0A4A                     _light_a_number_alphabet:	
  1776                           	opt	stack 4
  1777                           ; Regs used in _light_a_number_alphabet: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
                                 tack]
  1778                           ;light_a_number_alphabet@num_alp stored from wreg
  1779  0A4A  1283               	bcf	status, 5	;RP0=0, select bank0
  1780  0A4B  1303               	bcf	status, 6	;RP1=0, select bank0
  1781  0A4C  00B1               	movwf	(light_a_number_alphabet@num_alp)
  1782                           	line	599
  1783                           	
  1784  0A4D                     l2918:	
  1785                           ;Dot Matrix.c: 599: choose_num_alphabet(num_alp,number_alphabet);
  1786  0A4D  303D               	movlw	(_number_alphabet)&0ffh
  1787  0A4E  00B0               	movwf	(??_light_a_number_alphabet+0)+0
  1788  0A4F  0830               	movf	(??_light_a_number_alphabet+0)+0,w
  1789  0A50  00F0               	movwf	(?_choose_num_alphabet)
  1790  0A51  0831               	movf	(light_a_number_alphabet@num_alp),w
  1791  0A52  120A  158A  26DD   	fcall	_choose_num_alphabet
              120A  158A         
  1792                           	line	600
  1793                           	
  1794  0A57                     l2920:	
  1795                           ;Dot Matrix.c: 600: light_pattern_one_color(number_alphabet,color);
  1796  0A57  087D               	movf	(light_a_number_alphabet@color),w
  1797  0A58  1283               	bcf	status, 5	;RP0=0, select bank0
  1798  0A59  1303               	bcf	status, 6	;RP1=0, select bank0
  1799  0A5A  00B0               	movwf	(??_light_a_number_alphabet+0)+0
  1800  0A5B  0830               	movf	(??_light_a_number_alphabet+0)+0,w
  1801  0A5C  00F8               	movwf	(?_light_pattern_one_color)
  1802  0A5D  303D               	movlw	(_number_alphabet)&0ffh
  1803  0A5E  120A  158A  2316   	fcall	_light_pattern_one_color
              120A  158A         
  1804                           	line	601
  1805                           	
  1806  0A63                     l1016:	
  1807  0A63  0008               	return
  1808                           	opt stack 0
  1809                           GLOBAL	__end_of_light_a_number_alphabet
  1810  0A64                     	__end_of_light_a_number_alphabet:
  1811 ;; =============== function _light_a_number_alphabet ends ============
  1812                           
  1813                           	signat	_light_a_number_alphabet,8312
  1814                           	global	_light_pattern_two_color
  1815                           psect	text340,local,class=CODE,delta=2
  1816                           global __ptext340
  1817  0C8F                     __ptext340:
  1818                           
  1819 ;; *************** function _light_pattern_two_color *****************
  1820 ;; Defined at:
  1821 ;;		line 211 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  pattern         1    wreg     PTR unsigned char 
  1824 ;;		 -> love_shape_pattern_two_color(8), 
  1825 ;;  color_0         1    0[BANK0 ] unsigned char 
  1826 ;;  color_1         1    1[BANK0 ] unsigned char 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  pattern         1    6[BANK0 ] PTR unsigned char 
  1829 ;;		 -> love_shape_pattern_two_color(8), 
  1830 ;;  time            2    7[BANK0 ] int 
  1831 ;;  i               2    9[BANK0 ] int 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;		None               void
  1834 ;; Registers used:
  1835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         0       2       0       0       0
  1842 ;;      Locals:         0       5       0       0       0
  1843 ;;      Temps:          0       4       0       0       0
  1844 ;;      Totals:         0      11       0       0       0
  1845 ;;Total ram usage:       11 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    2
  1848 ;; This function calls:
  1849 ;;		_light_a_column_two_color
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           psect	text340
  1855                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  1856                           	line	211
  1857                           	global	__size_of_light_pattern_two_color
  1858  0072                     	__size_of_light_pattern_two_color	equ	__end_of_light_pattern_two_color-_light_pattern_t
                                 wo_color
  1859                           	
  1860  0C8F                     _light_pattern_two_color:	
  1861                           	opt	stack 5
  1862                           ; Regs used in _light_pattern_two_color: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
                                 tack]
  1863                           ;light_pattern_two_color@pattern stored from wreg
  1864  0C8F  1283               	bcf	status, 5	;RP0=0, select bank0
  1865  0C90  1303               	bcf	status, 6	;RP1=0, select bank0
  1866  0C91  00B6               	movwf	(light_pattern_two_color@pattern)
  1867                           	line	212
  1868                           	
  1869  0C92                     l2896:	
  1870                           ;Dot Matrix.c: 212: for(int i = 0; i<8; i++)
  1871  0C92  3000               	movlw	low(0)
  1872  0C93  00B9               	movwf	(light_pattern_two_color@i)
  1873  0C94  3000               	movlw	high(0)
  1874  0C95  00BA               	movwf	((light_pattern_two_color@i))+1
  1875                           	
  1876  0C96                     l2898:	
  1877  0C96  083A               	movf	(light_pattern_two_color@i+1),w
  1878  0C97  3A80               	xorlw	80h
  1879  0C98  00FF               	movwf	btemp+1
  1880  0C99  3080               	movlw	(high(08h))^80h
  1881  0C9A  027F               	subwf	btemp+1,w
  1882  0C9B  1D03               	skipz
  1883  0C9C  2C9F               	goto	u3005
  1884  0C9D  3008               	movlw	low(08h)
  1885  0C9E  0239               	subwf	(light_pattern_two_color@i),w
  1886  0C9F                     u3005:
  1887                           
  1888  0C9F  1C03               	skipc
  1889  0CA0  2CA2               	goto	u3001
  1890  0CA1  2CA3               	goto	u3000
  1891  0CA2                     u3001:
  1892  0CA2  2CA5               	goto	l2902
  1893  0CA3                     u3000:
  1894  0CA3  2D00               	goto	l957
  1895                           	
  1896  0CA4                     l2900:	
  1897  0CA4  2D00               	goto	l957
  1898                           	line	213
  1899                           	
  1900  0CA5                     l953:	
  1901                           	line	214
  1902                           	
  1903  0CA5                     l2902:	
  1904                           ;Dot Matrix.c: 213: {
  1905                           ;Dot Matrix.c: 214: for(int time = 0; time<5; time++)
  1906  0CA5  3000               	movlw	low(0)
  1907  0CA6  1283               	bcf	status, 5	;RP0=0, select bank0
  1908  0CA7  1303               	bcf	status, 6	;RP1=0, select bank0
  1909  0CA8  00B7               	movwf	(light_pattern_two_color@time)
  1910  0CA9  3000               	movlw	high(0)
  1911  0CAA  00B8               	movwf	((light_pattern_two_color@time))+1
  1912                           	
  1913  0CAB                     l2904:	
  1914  0CAB  0838               	movf	(light_pattern_two_color@time+1),w
  1915  0CAC  3A80               	xorlw	80h
  1916  0CAD  00FF               	movwf	btemp+1
  1917  0CAE  3080               	movlw	(high(05h))^80h
  1918  0CAF  027F               	subwf	btemp+1,w
  1919  0CB0  1D03               	skipz
  1920  0CB1  2CB4               	goto	u3015
  1921  0CB2  3005               	movlw	low(05h)
  1922  0CB3  0237               	subwf	(light_pattern_two_color@time),w
  1923  0CB4                     u3015:
  1924                           
  1925  0CB4  1C03               	skipc
  1926  0CB5  2CB7               	goto	u3011
  1927  0CB6  2CB8               	goto	u3010
  1928  0CB7                     u3011:
  1929  0CB7  2CBA               	goto	l2908
  1930  0CB8                     u3010:
  1931  0CB8  2CEA               	goto	l2914
  1932                           	
  1933  0CB9                     l2906:	
  1934  0CB9  2CEA               	goto	l2914
  1935                           	line	215
  1936                           	
  1937  0CBA                     l955:	
  1938                           	
  1939  0CBA                     l2908:	
  1940                           ;Dot Matrix.c: 215: light_a_column_two_color(i,pattern[i],color_0,color_1);
  1941  0CBA  1283               	bcf	status, 5	;RP0=0, select bank0
  1942  0CBB  1303               	bcf	status, 6	;RP1=0, select bank0
  1943  0CBC  0839               	movf	(light_pattern_two_color@i),w
  1944  0CBD  0736               	addwf	(light_pattern_two_color@pattern),w
  1945  0CBE  00B2               	movwf	(??_light_pattern_two_color+0)+0
  1946  0CBF  0832               	movf	0+(??_light_pattern_two_color+0)+0,w
  1947  0CC0  0084               	movwf	fsr0
  1948  0CC1  1383               	bcf	status, 7	;select IRP bank0
  1949  0CC2  0800               	movf	indf,w
  1950  0CC3  00B3               	movwf	(??_light_pattern_two_color+1)+0
  1951  0CC4  0833               	movf	(??_light_pattern_two_color+1)+0,w
  1952  0CC5  00F4               	movwf	(?_light_a_column_two_color)
  1953  0CC6  0830               	movf	(light_pattern_two_color@color_0),w
  1954  0CC7  00B4               	movwf	(??_light_pattern_two_color+2)+0
  1955  0CC8  0834               	movf	(??_light_pattern_two_color+2)+0,w
  1956  0CC9  00F5               	movwf	0+(?_light_a_column_two_color)+01h
  1957  0CCA  0831               	movf	(light_pattern_two_color@color_1),w
  1958  0CCB  00B5               	movwf	(??_light_pattern_two_color+3)+0
  1959  0CCC  0835               	movf	(??_light_pattern_two_color+3)+0,w
  1960  0CCD  00F6               	movwf	0+(?_light_a_column_two_color)+02h
  1961  0CCE  0839               	movf	(light_pattern_two_color@i),w
  1962  0CCF  120A  158A  236E   	fcall	_light_a_column_two_color
              120A  158A         
  1963                           	line	214
  1964                           	
  1965  0CD4                     l2910:	
  1966  0CD4  3001               	movlw	low(01h)
  1967  0CD5  1283               	bcf	status, 5	;RP0=0, select bank0
  1968  0CD6  1303               	bcf	status, 6	;RP1=0, select bank0
  1969  0CD7  07B7               	addwf	(light_pattern_two_color@time),f
  1970  0CD8  1803               	skipnc
  1971  0CD9  0AB8               	incf	(light_pattern_two_color@time+1),f
  1972  0CDA  3000               	movlw	high(01h)
  1973  0CDB  07B8               	addwf	(light_pattern_two_color@time+1),f
  1974                           	
  1975  0CDC                     l2912:	
  1976  0CDC  0838               	movf	(light_pattern_two_color@time+1),w
  1977  0CDD  3A80               	xorlw	80h
  1978  0CDE  00FF               	movwf	btemp+1
  1979  0CDF  3080               	movlw	(high(05h))^80h
  1980  0CE0  027F               	subwf	btemp+1,w
  1981  0CE1  1D03               	skipz
  1982  0CE2  2CE5               	goto	u3025
  1983  0CE3  3005               	movlw	low(05h)
  1984  0CE4  0237               	subwf	(light_pattern_two_color@time),w
  1985  0CE5                     u3025:
  1986                           
  1987  0CE5  1C03               	skipc
  1988  0CE6  2CE8               	goto	u3021
  1989  0CE7  2CE9               	goto	u3020
  1990  0CE8                     u3021:
  1991  0CE8  2CBA               	goto	l2908
  1992  0CE9                     u3020:
  1993  0CE9  2CEA               	goto	l2914
  1994                           	
  1995  0CEA                     l956:	
  1996                           	line	212
  1997                           	
  1998  0CEA                     l2914:	
  1999  0CEA  3001               	movlw	low(01h)
  2000  0CEB  1283               	bcf	status, 5	;RP0=0, select bank0
  2001  0CEC  1303               	bcf	status, 6	;RP1=0, select bank0
  2002  0CED  07B9               	addwf	(light_pattern_two_color@i),f
  2003  0CEE  1803               	skipnc
  2004  0CEF  0ABA               	incf	(light_pattern_two_color@i+1),f
  2005  0CF0  3000               	movlw	high(01h)
  2006  0CF1  07BA               	addwf	(light_pattern_two_color@i+1),f
  2007                           	
  2008  0CF2                     l2916:	
  2009  0CF2  083A               	movf	(light_pattern_two_color@i+1),w
  2010  0CF3  3A80               	xorlw	80h
  2011  0CF4  00FF               	movwf	btemp+1
  2012  0CF5  3080               	movlw	(high(08h))^80h
  2013  0CF6  027F               	subwf	btemp+1,w
  2014  0CF7  1D03               	skipz
  2015  0CF8  2CFB               	goto	u3035
  2016  0CF9  3008               	movlw	low(08h)
  2017  0CFA  0239               	subwf	(light_pattern_two_color@i),w
  2018  0CFB                     u3035:
  2019                           
  2020  0CFB  1C03               	skipc
  2021  0CFC  2CFE               	goto	u3031
  2022  0CFD  2CFF               	goto	u3030
  2023  0CFE                     u3031:
  2024  0CFE  2CA5               	goto	l2902
  2025  0CFF                     u3030:
  2026  0CFF  2D00               	goto	l957
  2027                           	
  2028  0D00                     l954:	
  2029                           	line	217
  2030                           	
  2031  0D00                     l957:	
  2032  0D00  0008               	return
  2033                           	opt stack 0
  2034                           GLOBAL	__end_of_light_pattern_two_color
  2035  0D01                     	__end_of_light_pattern_two_color:
  2036 ;; =============== function _light_pattern_two_color ends ============
  2037                           
  2038                           	signat	_light_pattern_two_color,12408
  2039                           	global	_light_pattern_one_color
  2040                           psect	text341,local,class=CODE,delta=2
  2041                           global __ptext341
  2042  0B16                     __ptext341:
  2043                           
  2044 ;; *************** function _light_pattern_one_color *****************
  2045 ;; Defined at:
  2046 ;;		line 173 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  pattern         1    wreg     PTR unsigned char 
  2049 ;;		 -> expand_shrink_pattern(56), number_alphabet(8), love_shape_pattern_one_color(8), 
  2050 ;;  color           1    8[COMMON] unsigned char 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  pattern         1   10[COMMON] PTR unsigned char 
  2053 ;;		 -> expand_shrink_pattern(56), number_alphabet(8), love_shape_pattern_one_color(8), 
  2054 ;;  i               2   11[COMMON] int 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;		None               void
  2057 ;; Registers used:
  2058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2064 ;;      Params:         1       0       0       0       0
  2065 ;;      Locals:         3       0       0       0       0
  2066 ;;      Temps:          1       0       0       0       0
  2067 ;;      Totals:         5       0       0       0       0
  2068 ;;Total ram usage:        5 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    1
  2071 ;; This function calls:
  2072 ;;		_delay_ms
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;;		_light_a_number_alphabet
  2076 ;;		_expand_shrink_square
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           psect	text341
  2080                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  2081                           	line	173
  2082                           	global	__size_of_light_pattern_one_color
  2083  0058                     	__size_of_light_pattern_one_color	equ	__end_of_light_pattern_one_color-_light_pattern_o
                                 ne_color
  2084                           	
  2085  0B16                     _light_pattern_one_color:	
  2086                           	opt	stack 5
  2087                           ; Regs used in _light_pattern_one_color: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
                                 tack]
  2088                           ;light_pattern_one_color@pattern stored from wreg
  2089  0B16  00FA               	movwf	(light_pattern_one_color@pattern)
  2090                           	line	174
  2091                           	
  2092  0B17                     l2870:	
  2093                           ;Dot Matrix.c: 174: for(int i = 0; i<8 ; i++)
  2094  0B17  3000               	movlw	low(0)
  2095  0B18  00FB               	movwf	(light_pattern_one_color@i)
  2096  0B19  3000               	movlw	high(0)
  2097  0B1A  00FC               	movwf	((light_pattern_one_color@i))+1
  2098                           	
  2099  0B1B                     l2872:	
  2100  0B1B  087C               	movf	(light_pattern_one_color@i+1),w
  2101  0B1C  3A80               	xorlw	80h
  2102  0B1D  00FF               	movwf	btemp+1
  2103  0B1E  3080               	movlw	(high(08h))^80h
  2104  0B1F  027F               	subwf	btemp+1,w
  2105  0B20  1D03               	skipz
  2106  0B21  2B24               	goto	u2965
  2107  0B22  3008               	movlw	low(08h)
  2108  0B23  027B               	subwf	(light_pattern_one_color@i),w
  2109  0B24                     u2965:
  2110                           
  2111  0B24  1C03               	skipc
  2112  0B25  2B27               	goto	u2961
  2113  0B26  2B28               	goto	u2960
  2114  0B27                     u2961:
  2115  0B27  2B2A               	goto	l2876
  2116  0B28                     u2960:
  2117  0B28  2B6D               	goto	l943
  2118                           	
  2119  0B29                     l2874:	
  2120  0B29  2B6D               	goto	l943
  2121                           	line	175
  2122                           	
  2123  0B2A                     l938:	
  2124                           	line	176
  2125                           	
  2126  0B2A                     l2876:	
  2127                           ;Dot Matrix.c: 175: {
  2128                           ;Dot Matrix.c: 176: PORTD = pattern[7-i];
  2129  0B2A  037B               	decf	(light_pattern_one_color@i),w
  2130  0B2B  3AFF               	xorlw	0ffh
  2131  0B2C  3E07               	addlw	07h
  2132  0B2D  077A               	addwf	(light_pattern_one_color@pattern),w
  2133  0B2E  00F9               	movwf	(??_light_pattern_one_color+0)+0
  2134  0B2F  0879               	movf	0+(??_light_pattern_one_color+0)+0,w
  2135  0B30  0084               	movwf	fsr0
  2136  0B31  1383               	bcf	status, 7	;select IRP bank0
  2137  0B32  0800               	movf	indf,w
  2138  0B33  1283               	bcf	status, 5	;RP0=0, select bank0
  2139  0B34  1303               	bcf	status, 6	;RP1=0, select bank0
  2140  0B35  0088               	movwf	(8)	;volatile
  2141                           	line	177
  2142                           	
  2143  0B36                     l2878:	
  2144                           ;Dot Matrix.c: 177: if(color == GREEN)
  2145  0B36  08F8               	movf	(light_pattern_one_color@color),f
  2146  0B37  1D03               	skipz
  2147  0B38  2B3A               	goto	u2971
  2148  0B39  2B3B               	goto	u2970
  2149  0B3A                     u2971:
  2150  0B3A  2B40               	goto	l2884
  2151  0B3B                     u2970:
  2152                           	line	179
  2153                           	
  2154  0B3B                     l2880:	
  2155                           ;Dot Matrix.c: 178: {
  2156                           ;Dot Matrix.c: 179: PORTC = 0;
  2157  0B3B  0187               	clrf	(7)	;volatile
  2158                           	line	180
  2159                           	
  2160  0B3C                     l2882:	
  2161                           ;Dot Matrix.c: 180: PORTA = 0b00001000 | i;
  2162  0B3C  087B               	movf	(light_pattern_one_color@i),w
  2163  0B3D  3808               	iorlw	08h
  2164  0B3E  0085               	movwf	(5)	;volatile
  2165                           	line	181
  2166                           ;Dot Matrix.c: 181: }
  2167  0B3F  2B4C               	goto	l2890
  2168                           	line	182
  2169                           	
  2170  0B40                     l940:	
  2171                           	
  2172  0B40                     l2884:	
  2173                           ;Dot Matrix.c: 182: else if(color == RED)
  2174  0B40  0878               	movf	(light_pattern_one_color@color),w
  2175  0B41  3A01               	xorlw	01h
  2176  0B42  1D03               	skipz
  2177  0B43  2B45               	goto	u2981
  2178  0B44  2B46               	goto	u2980
  2179  0B45                     u2981:
  2180  0B45  2B4C               	goto	l2890
  2181  0B46                     u2980:
  2182                           	line	184
  2183                           	
  2184  0B46                     l2886:	
  2185                           ;Dot Matrix.c: 183: {
  2186                           ;Dot Matrix.c: 184: PORTA = 0;
  2187  0B46  0185               	clrf	(5)	;volatile
  2188                           	line	185
  2189                           	
  2190  0B47                     l2888:	
  2191                           ;Dot Matrix.c: 185: PORTC = 0b00001000 | i;
  2192  0B47  087B               	movf	(light_pattern_one_color@i),w
  2193  0B48  3808               	iorlw	08h
  2194  0B49  0087               	movwf	(7)	;volatile
  2195  0B4A  2B4C               	goto	l2890
  2196                           	line	186
  2197                           	
  2198  0B4B                     l942:	
  2199  0B4B  2B4C               	goto	l2890
  2200                           	line	187
  2201                           	
  2202  0B4C                     l941:	
  2203                           	
  2204  0B4C                     l2890:	
  2205                           ;Dot Matrix.c: 186: }
  2206                           ;Dot Matrix.c: 187: delay_ms(1);
  2207  0B4C  3000               	movlw	0
  2208  0B4D  00F3               	movwf	(?_delay_ms+3)
  2209  0B4E  3000               	movlw	0
  2210  0B4F  00F2               	movwf	(?_delay_ms+2)
  2211  0B50  3000               	movlw	0
  2212  0B51  00F1               	movwf	(?_delay_ms+1)
  2213  0B52  3001               	movlw	01h
  2214  0B53  00F0               	movwf	(?_delay_ms)
  2215                           
  2216  0B54  120A  158A  22DD   	fcall	_delay_ms
              120A  158A         
  2217                           	line	174
  2218                           	
  2219  0B59                     l2892:	
  2220  0B59  3001               	movlw	low(01h)
  2221  0B5A  07FB               	addwf	(light_pattern_one_color@i),f
  2222  0B5B  1803               	skipnc
  2223  0B5C  0AFC               	incf	(light_pattern_one_color@i+1),f
  2224  0B5D  3000               	movlw	high(01h)
  2225  0B5E  07FC               	addwf	(light_pattern_one_color@i+1),f
  2226                           	
  2227  0B5F                     l2894:	
  2228  0B5F  087C               	movf	(light_pattern_one_color@i+1),w
  2229  0B60  3A80               	xorlw	80h
  2230  0B61  00FF               	movwf	btemp+1
  2231  0B62  3080               	movlw	(high(08h))^80h
  2232  0B63  027F               	subwf	btemp+1,w
  2233  0B64  1D03               	skipz
  2234  0B65  2B68               	goto	u2995
  2235  0B66  3008               	movlw	low(08h)
  2236  0B67  027B               	subwf	(light_pattern_one_color@i),w
  2237  0B68                     u2995:
  2238                           
  2239  0B68  1C03               	skipc
  2240  0B69  2B6B               	goto	u2991
  2241  0B6A  2B6C               	goto	u2990
  2242  0B6B                     u2991:
  2243  0B6B  2B2A               	goto	l2876
  2244  0B6C                     u2990:
  2245  0B6C  2B6D               	goto	l943
  2246                           	
  2247  0B6D                     l939:	
  2248                           	line	189
  2249                           	
  2250  0B6D                     l943:	
  2251  0B6D  0008               	return
  2252                           	opt stack 0
  2253                           GLOBAL	__end_of_light_pattern_one_color
  2254  0B6E                     	__end_of_light_pattern_one_color:
  2255 ;; =============== function _light_pattern_one_color ends ============
  2256                           
  2257                           	signat	_light_pattern_one_color,8312
  2258                           	global	_running_line
  2259                           psect	text342,local,class=CODE,delta=2
  2260                           global __ptext342
  2261  0C23                     __ptext342:
  2262                           
  2263 ;; *************** function _running_line *****************
  2264 ;; Defined at:
  2265 ;;		line 232 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  color           1    wreg     unsigned char 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  color           1    9[COMMON] unsigned char 
  2270 ;;  i               2   12[COMMON] int 
  2271 ;;  i               2   10[COMMON] int 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;		None               void
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2281 ;;      Params:         0       0       0       0       0
  2282 ;;      Locals:         5       0       0       0       0
  2283 ;;      Temps:          1       0       0       0       0
  2284 ;;      Totals:         6       0       0       0       0
  2285 ;;Total ram usage:        6 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    1
  2288 ;; This function calls:
  2289 ;;		_light_a_row
  2290 ;;		_delay_ms
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           psect	text342
  2296                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  2297                           	line	232
  2298                           	global	__size_of_running_line
  2299  006C                     	__size_of_running_line	equ	__end_of_running_line-_running_line
  2300                           	
  2301  0C23                     _running_line:	
  2302                           	opt	stack 6
  2303                           ; Regs used in _running_line: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2304                           ;running_line@color stored from wreg
  2305  0C23  00F9               	movwf	(running_line@color)
  2306                           	line	233
  2307                           	
  2308  0C24                     l2846:	
  2309                           ;Dot Matrix.c: 233: for(int i = 0; i<8; i++)
  2310  0C24  3000               	movlw	low(0)
  2311  0C25  00FA               	movwf	(running_line@i)
  2312  0C26  3000               	movlw	high(0)
  2313  0C27  00FB               	movwf	((running_line@i))+1
  2314                           	
  2315  0C28                     l2848:	
  2316  0C28  087B               	movf	(running_line@i+1),w
  2317  0C29  3A80               	xorlw	80h
  2318  0C2A  00FF               	movwf	btemp+1
  2319  0C2B  3080               	movlw	(high(08h))^80h
  2320  0C2C  027F               	subwf	btemp+1,w
  2321  0C2D  1D03               	skipz
  2322  0C2E  2C31               	goto	u2925
  2323  0C2F  3008               	movlw	low(08h)
  2324  0C30  027A               	subwf	(running_line@i),w
  2325  0C31                     u2925:
  2326                           
  2327  0C31  1C03               	skipc
  2328  0C32  2C34               	goto	u2921
  2329  0C33  2C35               	goto	u2920
  2330  0C34                     u2921:
  2331  0C34  2C37               	goto	l2852
  2332  0C35                     u2920:
  2333  0C35  2C62               	goto	l2858
  2334                           	
  2335  0C36                     l2850:	
  2336  0C36  2C62               	goto	l2858
  2337                           	line	234
  2338                           	
  2339  0C37                     l967:	
  2340                           	line	235
  2341                           	
  2342  0C37                     l2852:	
  2343                           ;Dot Matrix.c: 234: {
  2344                           ;Dot Matrix.c: 235: light_a_row(i,color);
  2345  0C37  0879               	movf	(running_line@color),w
  2346  0C38  00F8               	movwf	(??_running_line+0)+0
  2347  0C39  0878               	movf	(??_running_line+0)+0,w
  2348  0C3A  00F0               	movwf	(?_light_a_row)
  2349  0C3B  087A               	movf	(running_line@i),w
  2350  0C3C  120A  158A  2264   	fcall	_light_a_row
              120A  158A         
  2351                           	line	236
  2352                           ;Dot Matrix.c: 236: delay_ms(100);
  2353  0C41  3000               	movlw	0
  2354  0C42  00F3               	movwf	(?_delay_ms+3)
  2355  0C43  3000               	movlw	0
  2356  0C44  00F2               	movwf	(?_delay_ms+2)
  2357  0C45  3000               	movlw	0
  2358  0C46  00F1               	movwf	(?_delay_ms+1)
  2359  0C47  3064               	movlw	064h
  2360  0C48  00F0               	movwf	(?_delay_ms)
  2361                           
  2362  0C49  120A  158A  22DD   	fcall	_delay_ms
              120A  158A         
  2363                           	line	233
  2364                           	
  2365  0C4E                     l2854:	
  2366  0C4E  3001               	movlw	low(01h)
  2367  0C4F  07FA               	addwf	(running_line@i),f
  2368  0C50  1803               	skipnc
  2369  0C51  0AFB               	incf	(running_line@i+1),f
  2370  0C52  3000               	movlw	high(01h)
  2371  0C53  07FB               	addwf	(running_line@i+1),f
  2372                           	
  2373  0C54                     l2856:	
  2374  0C54  087B               	movf	(running_line@i+1),w
  2375  0C55  3A80               	xorlw	80h
  2376  0C56  00FF               	movwf	btemp+1
  2377  0C57  3080               	movlw	(high(08h))^80h
  2378  0C58  027F               	subwf	btemp+1,w
  2379  0C59  1D03               	skipz
  2380  0C5A  2C5D               	goto	u2935
  2381  0C5B  3008               	movlw	low(08h)
  2382  0C5C  027A               	subwf	(running_line@i),w
  2383  0C5D                     u2935:
  2384                           
  2385  0C5D  1C03               	skipc
  2386  0C5E  2C60               	goto	u2931
  2387  0C5F  2C61               	goto	u2930
  2388  0C60                     u2931:
  2389  0C60  2C37               	goto	l2852
  2390  0C61                     u2930:
  2391  0C61  2C62               	goto	l2858
  2392                           	
  2393  0C62                     l968:	
  2394                           	line	239
  2395                           	
  2396  0C62                     l2858:	
  2397                           ;Dot Matrix.c: 237: }
  2398                           ;Dot Matrix.c: 239: for(int i = 7; i>=0; i--)
  2399  0C62  3007               	movlw	low(07h)
  2400  0C63  00FC               	movwf	(running_line@i_540)
  2401  0C64  3000               	movlw	high(07h)
  2402  0C65  00FD               	movwf	((running_line@i_540))+1
  2403                           	
  2404  0C66                     l2860:	
  2405  0C66  1FFD               	btfss	(running_line@i_540+1),7
  2406  0C67  2C69               	goto	u2941
  2407  0C68  2C6A               	goto	u2940
  2408  0C69                     u2941:
  2409  0C69  2C6C               	goto	l2864
  2410  0C6A                     u2940:
  2411  0C6A  2C8E               	goto	l971
  2412                           	
  2413  0C6B                     l2862:	
  2414  0C6B  2C8E               	goto	l971
  2415                           	line	240
  2416                           	
  2417  0C6C                     l969:	
  2418                           	line	241
  2419                           	
  2420  0C6C                     l2864:	
  2421                           ;Dot Matrix.c: 240: {
  2422                           ;Dot Matrix.c: 241: light_a_row(i,color);
  2423  0C6C  0879               	movf	(running_line@color),w
  2424  0C6D  00F8               	movwf	(??_running_line+0)+0
  2425  0C6E  0878               	movf	(??_running_line+0)+0,w
  2426  0C6F  00F0               	movwf	(?_light_a_row)
  2427  0C70  087C               	movf	(running_line@i_540),w
  2428  0C71  120A  158A  2264   	fcall	_light_a_row
              120A  158A         
  2429                           	line	242
  2430                           ;Dot Matrix.c: 242: delay_ms(100);
  2431  0C76  3000               	movlw	0
  2432  0C77  00F3               	movwf	(?_delay_ms+3)
  2433  0C78  3000               	movlw	0
  2434  0C79  00F2               	movwf	(?_delay_ms+2)
  2435  0C7A  3000               	movlw	0
  2436  0C7B  00F1               	movwf	(?_delay_ms+1)
  2437  0C7C  3064               	movlw	064h
  2438  0C7D  00F0               	movwf	(?_delay_ms)
  2439                           
  2440  0C7E  120A  158A  22DD   	fcall	_delay_ms
              120A  158A         
  2441                           	line	239
  2442                           	
  2443  0C83                     l2866:	
  2444  0C83  30FF               	movlw	low(-1)
  2445  0C84  07FC               	addwf	(running_line@i_540),f
  2446  0C85  1803               	skipnc
  2447  0C86  0AFD               	incf	(running_line@i_540+1),f
  2448  0C87  30FF               	movlw	high(-1)
  2449  0C88  07FD               	addwf	(running_line@i_540+1),f
  2450                           	
  2451  0C89                     l2868:	
  2452  0C89  1FFD               	btfss	(running_line@i_540+1),7
  2453  0C8A  2C8C               	goto	u2951
  2454  0C8B  2C8D               	goto	u2950
  2455  0C8C                     u2951:
  2456  0C8C  2C6C               	goto	l2864
  2457  0C8D                     u2950:
  2458  0C8D  2C8E               	goto	l971
  2459                           	
  2460  0C8E                     l970:	
  2461                           	line	244
  2462                           	
  2463  0C8E                     l971:	
  2464  0C8E  0008               	return
  2465                           	opt stack 0
  2466                           GLOBAL	__end_of_running_line
  2467  0C8F                     	__end_of_running_line:
  2468 ;; =============== function _running_line ends ============
  2469                           
  2470                           	signat	_running_line,4216
  2471                           	global	_running_dot
  2472                           psect	text343,local,class=CODE,delta=2
  2473                           global __ptext343
  2474  002C                     __ptext343:
  2475                           
  2476 ;; *************** function _running_dot *****************
  2477 ;; Defined at:
  2478 ;;		line 220 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  color           1    wreg     unsigned char 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  color           1    0[BANK0 ] unsigned char 
  2483 ;;  j               2    3[BANK0 ] int 
  2484 ;;  i               2    1[BANK0 ] int 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;		None               void
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2494 ;;      Params:         0       0       0       0       0
  2495 ;;      Locals:         0       5       0       0       0
  2496 ;;      Temps:          2       0       0       0       0
  2497 ;;      Totals:         2       5       0       0       0
  2498 ;;Total ram usage:        7 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    1
  2501 ;; This function calls:
  2502 ;;		_light_a_dot
  2503 ;;		_delay_ms
  2504 ;; This function is called by:
  2505 ;;		_main
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           psect	text343
  2509                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  2510                           	line	220
  2511                           	global	__size_of_running_dot
  2512  0075                     	__size_of_running_dot	equ	__end_of_running_dot-_running_dot
  2513                           	
  2514  002C                     _running_dot:	
  2515                           	opt	stack 6
  2516                           ; Regs used in _running_dot: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2517                           ;running_dot@color stored from wreg
  2518  002C  1283               	bcf	status, 5	;RP0=0, select bank0
  2519  002D  1303               	bcf	status, 6	;RP1=0, select bank0
  2520  002E  00B0               	movwf	(running_dot@color)
  2521                           	line	221
  2522                           	
  2523  002F                     l2824:	
  2524                           ;Dot Matrix.c: 221: for(int i = 0; i<8; i++)
  2525  002F  3000               	movlw	low(0)
  2526  0030  00B1               	movwf	(running_dot@i)
  2527  0031  3000               	movlw	high(0)
  2528  0032  00B2               	movwf	((running_dot@i))+1
  2529                           	
  2530  0033                     l2826:	
  2531  0033  0832               	movf	(running_dot@i+1),w
  2532  0034  3A80               	xorlw	80h
  2533  0035  00FF               	movwf	btemp+1
  2534  0036  3080               	movlw	(high(08h))^80h
  2535  0037  027F               	subwf	btemp+1,w
  2536  0038  1D03               	skipz
  2537  0039  283C               	goto	u2885
  2538  003A  3008               	movlw	low(08h)
  2539  003B  0231               	subwf	(running_dot@i),w
  2540  003C                     u2885:
  2541                           
  2542  003C  1C03               	skipc
  2543  003D  283F               	goto	u2881
  2544  003E  2840               	goto	u2880
  2545  003F                     u2881:
  2546  003F  2842               	goto	l2830
  2547  0040                     u2880:
  2548  0040  28A0               	goto	l964
  2549                           	
  2550  0041                     l2828:	
  2551  0041  28A0               	goto	l964
  2552                           	line	222
  2553                           	
  2554  0042                     l960:	
  2555                           	line	223
  2556                           	
  2557  0042                     l2830:	
  2558                           ;Dot Matrix.c: 222: {
  2559                           ;Dot Matrix.c: 223: for(int j = 0; j<8; j++)
  2560  0042  3000               	movlw	low(0)
  2561  0043  1283               	bcf	status, 5	;RP0=0, select bank0
  2562  0044  1303               	bcf	status, 6	;RP1=0, select bank0
  2563  0045  00B3               	movwf	(running_dot@j)
  2564  0046  3000               	movlw	high(0)
  2565  0047  00B4               	movwf	((running_dot@j))+1
  2566                           	
  2567  0048                     l2832:	
  2568  0048  0834               	movf	(running_dot@j+1),w
  2569  0049  3A80               	xorlw	80h
  2570  004A  00FF               	movwf	btemp+1
  2571  004B  3080               	movlw	(high(08h))^80h
  2572  004C  027F               	subwf	btemp+1,w
  2573  004D  1D03               	skipz
  2574  004E  2851               	goto	u2895
  2575  004F  3008               	movlw	low(08h)
  2576  0050  0233               	subwf	(running_dot@j),w
  2577  0051                     u2895:
  2578                           
  2579  0051  1C03               	skipc
  2580  0052  2854               	goto	u2891
  2581  0053  2855               	goto	u2890
  2582  0054                     u2891:
  2583  0054  2857               	goto	l2836
  2584  0055                     u2890:
  2585  0055  288A               	goto	l2842
  2586                           	
  2587  0056                     l2834:	
  2588  0056  288A               	goto	l2842
  2589                           	line	224
  2590                           	
  2591  0057                     l962:	
  2592                           	line	225
  2593                           	
  2594  0057                     l2836:	
  2595                           ;Dot Matrix.c: 224: {
  2596                           ;Dot Matrix.c: 225: light_a_dot(i,j,color);
  2597  0057  1283               	bcf	status, 5	;RP0=0, select bank0
  2598  0058  1303               	bcf	status, 6	;RP1=0, select bank0
  2599  0059  0833               	movf	(running_dot@j),w
  2600  005A  00F8               	movwf	(??_running_dot+0)+0
  2601  005B  0878               	movf	(??_running_dot+0)+0,w
  2602  005C  00F0               	movwf	(?_light_a_dot)
  2603  005D  0830               	movf	(running_dot@color),w
  2604  005E  00F9               	movwf	(??_running_dot+1)+0
  2605  005F  0879               	movf	(??_running_dot+1)+0,w
  2606  0060  00F1               	movwf	0+(?_light_a_dot)+01h
  2607  0061  0831               	movf	(running_dot@i),w
  2608  0062  120A  158A  2280   	fcall	_light_a_dot
              120A  118A         
  2609                           	line	226
  2610                           ;Dot Matrix.c: 226: delay_ms(50);
  2611  0067  3000               	movlw	0
  2612  0068  00F3               	movwf	(?_delay_ms+3)
  2613  0069  3000               	movlw	0
  2614  006A  00F2               	movwf	(?_delay_ms+2)
  2615  006B  3000               	movlw	0
  2616  006C  00F1               	movwf	(?_delay_ms+1)
  2617  006D  3032               	movlw	032h
  2618  006E  00F0               	movwf	(?_delay_ms)
  2619                           
  2620  006F  120A  158A  22DD   	fcall	_delay_ms
              120A  118A         
  2621                           	line	223
  2622                           	
  2623  0074                     l2838:	
  2624  0074  3001               	movlw	low(01h)
  2625  0075  1283               	bcf	status, 5	;RP0=0, select bank0
  2626  0076  1303               	bcf	status, 6	;RP1=0, select bank0
  2627  0077  07B3               	addwf	(running_dot@j),f
  2628  0078  1803               	skipnc
  2629  0079  0AB4               	incf	(running_dot@j+1),f
  2630  007A  3000               	movlw	high(01h)
  2631  007B  07B4               	addwf	(running_dot@j+1),f
  2632                           	
  2633  007C                     l2840:	
  2634  007C  0834               	movf	(running_dot@j+1),w
  2635  007D  3A80               	xorlw	80h
  2636  007E  00FF               	movwf	btemp+1
  2637  007F  3080               	movlw	(high(08h))^80h
  2638  0080  027F               	subwf	btemp+1,w
  2639  0081  1D03               	skipz
  2640  0082  2885               	goto	u2905
  2641  0083  3008               	movlw	low(08h)
  2642  0084  0233               	subwf	(running_dot@j),w
  2643  0085                     u2905:
  2644                           
  2645  0085  1C03               	skipc
  2646  0086  2888               	goto	u2901
  2647  0087  2889               	goto	u2900
  2648  0088                     u2901:
  2649  0088  2857               	goto	l2836
  2650  0089                     u2900:
  2651  0089  288A               	goto	l2842
  2652                           	
  2653  008A                     l963:	
  2654                           	line	221
  2655                           	
  2656  008A                     l2842:	
  2657  008A  3001               	movlw	low(01h)
  2658  008B  1283               	bcf	status, 5	;RP0=0, select bank0
  2659  008C  1303               	bcf	status, 6	;RP1=0, select bank0
  2660  008D  07B1               	addwf	(running_dot@i),f
  2661  008E  1803               	skipnc
  2662  008F  0AB2               	incf	(running_dot@i+1),f
  2663  0090  3000               	movlw	high(01h)
  2664  0091  07B2               	addwf	(running_dot@i+1),f
  2665                           	
  2666  0092                     l2844:	
  2667  0092  0832               	movf	(running_dot@i+1),w
  2668  0093  3A80               	xorlw	80h
  2669  0094  00FF               	movwf	btemp+1
  2670  0095  3080               	movlw	(high(08h))^80h
  2671  0096  027F               	subwf	btemp+1,w
  2672  0097  1D03               	skipz
  2673  0098  289B               	goto	u2915
  2674  0099  3008               	movlw	low(08h)
  2675  009A  0231               	subwf	(running_dot@i),w
  2676  009B                     u2915:
  2677                           
  2678  009B  1C03               	skipc
  2679  009C  289E               	goto	u2911
  2680  009D  289F               	goto	u2910
  2681  009E                     u2911:
  2682  009E  2842               	goto	l2830
  2683  009F                     u2910:
  2684  009F  28A0               	goto	l964
  2685                           	
  2686  00A0                     l961:	
  2687                           	line	229
  2688                           	
  2689  00A0                     l964:	
  2690  00A0  0008               	return
  2691                           	opt stack 0
  2692                           GLOBAL	__end_of_running_dot
  2693  00A1                     	__end_of_running_dot:
  2694 ;; =============== function _running_dot ends ============
  2695                           
  2696                           	signat	_running_dot,4216
  2697                           	global	_light_a_column_two_color
  2698                           psect	text344,local,class=CODE,delta=2
  2699                           global __ptext344
  2700  0B6E                     __ptext344:
  2701                           
  2702 ;; *************** function _light_a_column_two_color *****************
  2703 ;; Defined at:
  2704 ;;		line 192 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  column          1    wreg     unsigned char 
  2707 ;;  column_patte    1    4[COMMON] unsigned char 
  2708 ;;  color_0         1    5[COMMON] unsigned char 
  2709 ;;  color_1         1    6[COMMON] unsigned char 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  column          1   10[COMMON] unsigned char 
  2712 ;;  i               2   11[COMMON] int 
  2713 ;;  lsb_tester      1    9[COMMON] unsigned char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;		None               void
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0, pclath, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2723 ;;      Params:         3       0       0       0       0
  2724 ;;      Locals:         4       0       0       0       0
  2725 ;;      Temps:          2       0       0       0       0
  2726 ;;      Totals:         9       0       0       0       0
  2727 ;;Total ram usage:        9 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    1
  2730 ;; This function calls:
  2731 ;;		_light_a_dot
  2732 ;; This function is called by:
  2733 ;;		_light_pattern_two_color
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           psect	text344
  2737                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  2738                           	line	192
  2739                           	global	__size_of_light_a_column_two_color
  2740  0059                     	__size_of_light_a_column_two_color	equ	__end_of_light_a_column_two_color-_light_a_colum
                                 n_two_color
  2741                           	
  2742  0B6E                     _light_a_column_two_color:	
  2743                           	opt	stack 5
  2744                           ; Regs used in _light_a_column_two_color: [wreg+status,2+status,0+pclath+cstack]
  2745                           ;light_a_column_two_color@column stored from wreg
  2746  0B6E  00FA               	movwf	(light_a_column_two_color@column)
  2747                           	line	193
  2748                           	
  2749  0B6F                     l2804:	
  2750                           ;Dot Matrix.c: 193: char lsb_tester = 0;
  2751  0B6F  1003               	clrc
  2752  0B70  3000               	movlw	0
  2753  0B71  1803               	btfsc	status,0
  2754  0B72  3001               	movlw	1
  2755  0B73  00F9               	movwf	(light_a_column_two_color@lsb_tester)
  2756                           	line	194
  2757                           ;Dot Matrix.c: 194: PORTD = 1<<column;
  2758  0B74  3001               	movlw	(01h)
  2759  0B75  00F7               	movwf	(??_light_a_column_two_color+0)+0
  2760  0B76  0A7A               	incf	(light_a_column_two_color@column),w
  2761  0B77  2B7A               	goto	u2834
  2762  0B78                     u2835:
  2763  0B78  1003               	clrc
  2764  0B79  0DF7               	rlf	(??_light_a_column_two_color+0)+0,f
  2765  0B7A                     u2834:
  2766  0B7A  3EFF               	addlw	-1
  2767  0B7B  1D03               	skipz
  2768  0B7C  2B78               	goto	u2835
  2769  0B7D  0877               	movf	0+(??_light_a_column_two_color+0)+0,w
  2770  0B7E  1283               	bcf	status, 5	;RP0=0, select bank0
  2771  0B7F  1303               	bcf	status, 6	;RP1=0, select bank0
  2772  0B80  0088               	movwf	(8)	;volatile
  2773                           	line	195
  2774                           	
  2775  0B81                     l2806:	
  2776                           ;Dot Matrix.c: 195: for(int i = 7; i>=0; i--)
  2777  0B81  3007               	movlw	low(07h)
  2778  0B82  00FB               	movwf	(light_a_column_two_color@i)
  2779  0B83  3000               	movlw	high(07h)
  2780  0B84  00FC               	movwf	((light_a_column_two_color@i))+1
  2781                           	
  2782  0B85                     l2808:	
  2783  0B85  1FFC               	btfss	(light_a_column_two_color@i+1),7
  2784  0B86  2B88               	goto	u2841
  2785  0B87  2B89               	goto	u2840
  2786  0B88                     u2841:
  2787  0B88  2B8B               	goto	l2812
  2788  0B89                     u2840:
  2789  0B89  2BC6               	goto	l950
  2790                           	
  2791  0B8A                     l2810:	
  2792  0B8A  2BC6               	goto	l950
  2793                           	line	196
  2794                           	
  2795  0B8B                     l946:	
  2796                           	line	197
  2797                           	
  2798  0B8B                     l2812:	
  2799                           ;Dot Matrix.c: 196: {
  2800                           ;Dot Matrix.c: 197: lsb_tester = (column_pattern >> i) & 0x01;
  2801  0B8B  0874               	movf	(light_a_column_two_color@column_pattern),w
  2802  0B8C  00F7               	movwf	(??_light_a_column_two_color+0)+0
  2803  0B8D  0A7B               	incf	(light_a_column_two_color@i),w
  2804  0B8E  2B91               	goto	u2854
  2805  0B8F                     u2855:
  2806  0B8F  1003               	clrc
  2807  0B90  0CF7               	rrf	(??_light_a_column_two_color+0)+0,f
  2808  0B91                     u2854:
  2809  0B91  3EFF               	addlw	-1
  2810  0B92  1D03               	skipz
  2811  0B93  2B8F               	goto	u2855
  2812  0B94  0877               	movf	0+(??_light_a_column_two_color+0)+0,w
  2813  0B95  3901               	andlw	01h
  2814  0B96  00F8               	movwf	(??_light_a_column_two_color+1)+0
  2815  0B97  0878               	movf	(??_light_a_column_two_color+1)+0,w
  2816  0B98  00F9               	movwf	(light_a_column_two_color@lsb_tester)
  2817                           	line	198
  2818                           	
  2819  0B99                     l2814:	
  2820                           ;Dot Matrix.c: 198: if(lsb_tester)
  2821  0B99  0879               	movf	(light_a_column_two_color@lsb_tester),w
  2822  0B9A  1D03               	skipz
  2823  0B9B  2B9D               	goto	u2860
  2824  0B9C  2BAC               	goto	l2818
  2825  0B9D                     u2860:
  2826                           	line	200
  2827                           	
  2828  0B9D                     l2816:	
  2829                           ;Dot Matrix.c: 199: {
  2830                           ;Dot Matrix.c: 200: light_a_dot(i,column,color_1);
  2831  0B9D  087A               	movf	(light_a_column_two_color@column),w
  2832  0B9E  00F7               	movwf	(??_light_a_column_two_color+0)+0
  2833  0B9F  0877               	movf	(??_light_a_column_two_color+0)+0,w
  2834  0BA0  00F0               	movwf	(?_light_a_dot)
  2835  0BA1  0876               	movf	(light_a_column_two_color@color_1),w
  2836  0BA2  00F8               	movwf	(??_light_a_column_two_color+1)+0
  2837  0BA3  0878               	movf	(??_light_a_column_two_color+1)+0,w
  2838  0BA4  00F1               	movwf	0+(?_light_a_dot)+01h
  2839  0BA5  087B               	movf	(light_a_column_two_color@i),w
  2840  0BA6  120A  158A  2280   	fcall	_light_a_dot
              120A  158A         
  2841                           	line	201
  2842                           ;Dot Matrix.c: 201: }
  2843  0BAB  2BBB               	goto	l2820
  2844                           	line	203
  2845                           	
  2846  0BAC                     l948:	
  2847                           	line	205
  2848                           	
  2849  0BAC                     l2818:	
  2850                           ;Dot Matrix.c: 203: else
  2851                           ;Dot Matrix.c: 204: {
  2852                           ;Dot Matrix.c: 205: light_a_dot(i,column,color_0);
  2853  0BAC  087A               	movf	(light_a_column_two_color@column),w
  2854  0BAD  00F7               	movwf	(??_light_a_column_two_color+0)+0
  2855  0BAE  0877               	movf	(??_light_a_column_two_color+0)+0,w
  2856  0BAF  00F0               	movwf	(?_light_a_dot)
  2857  0BB0  0875               	movf	(light_a_column_two_color@color_0),w
  2858  0BB1  00F8               	movwf	(??_light_a_column_two_color+1)+0
  2859  0BB2  0878               	movf	(??_light_a_column_two_color+1)+0,w
  2860  0BB3  00F1               	movwf	0+(?_light_a_dot)+01h
  2861  0BB4  087B               	movf	(light_a_column_two_color@i),w
  2862  0BB5  120A  158A  2280   	fcall	_light_a_dot
              120A  158A         
  2863  0BBA  2BBB               	goto	l2820
  2864                           	line	206
  2865                           	
  2866  0BBB                     l949:	
  2867                           	line	195
  2868                           	
  2869  0BBB                     l2820:	
  2870  0BBB  30FF               	movlw	low(-1)
  2871  0BBC  07FB               	addwf	(light_a_column_two_color@i),f
  2872  0BBD  1803               	skipnc
  2873  0BBE  0AFC               	incf	(light_a_column_two_color@i+1),f
  2874  0BBF  30FF               	movlw	high(-1)
  2875  0BC0  07FC               	addwf	(light_a_column_two_color@i+1),f
  2876                           	
  2877  0BC1                     l2822:	
  2878  0BC1  1FFC               	btfss	(light_a_column_two_color@i+1),7
  2879  0BC2  2BC4               	goto	u2871
  2880  0BC3  2BC5               	goto	u2870
  2881  0BC4                     u2871:
  2882  0BC4  2B8B               	goto	l2812
  2883  0BC5                     u2870:
  2884  0BC5  2BC6               	goto	l950
  2885                           	
  2886  0BC6                     l947:	
  2887                           	line	208
  2888                           	
  2889  0BC6                     l950:	
  2890  0BC6  0008               	return
  2891                           	opt stack 0
  2892                           GLOBAL	__end_of_light_a_column_two_color
  2893  0BC7                     	__end_of_light_a_column_two_color:
  2894 ;; =============== function _light_a_column_two_color ends ============
  2895                           
  2896                           	signat	_light_a_column_two_color,16504
  2897                           	global	_delay_ms
  2898                           psect	text345,local,class=CODE,delta=2
  2899                           global __ptext345
  2900  0ADD                     __ptext345:
  2901                           
  2902 ;; *************** function _delay_ms *****************
  2903 ;; Defined at:
  2904 ;;		line 106 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  ms              4    0[COMMON] unsigned long 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;		None               void
  2911 ;; Registers used:
  2912 ;;		wreg
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2918 ;;      Params:         4       0       0       0       0
  2919 ;;      Locals:         0       0       0       0       0
  2920 ;;      Temps:          4       0       0       0       0
  2921 ;;      Totals:         8       0       0       0       0
  2922 ;;Total ram usage:        8 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_light_pattern_one_color
  2928 ;;		_running_dot
  2929 ;;		_running_line
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           psect	text345
  2933                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  2934                           	line	106
  2935                           	global	__size_of_delay_ms
  2936  0039                     	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  2937                           	
  2938  0ADD                     _delay_ms:	
  2939                           	opt	stack 5
  2940                           ; Regs used in _delay_ms: [wreg]
  2941                           	line	107
  2942                           	
  2943  0ADD                     l2800:	
  2944                           ;Dot Matrix.c: 107: while(ms--)
  2945  0ADD  2AE6               	goto	l903
  2946                           	
  2947  0ADE                     l904:	
  2948                           	line	109
  2949                           	
  2950  0ADE                     l2802:	
  2951                           ;Dot Matrix.c: 108: {
  2952                           ;Dot Matrix.c: 109: _delay((unsigned long)((1)*(20000000/4000.0)));
  2953                           	opt asmopt_off
  2954  0ADE  3007               movlw	7
  2955  0ADF  00F5               movwf	((??_delay_ms+0)+0+1),f
  2956  0AE0  307D               	movlw	125
  2957  0AE1  00F4               movwf	((??_delay_ms+0)+0),f
  2958  0AE2                     u3227:
  2959  0AE2  0BF4               	decfsz	((??_delay_ms+0)+0),f
  2960  0AE3  2AE2               	goto	u3227
  2961  0AE4  0BF5               	decfsz	((??_delay_ms+0)+0+1),f
  2962  0AE5  2AE2               	goto	u3227
  2963                           opt asmopt_on
  2964                           
  2965                           	line	110
  2966                           	
  2967  0AE6                     l903:	
  2968                           	line	107
  2969  0AE6  3001               	movlw	01h
  2970  0AE7  00F4               	movwf	((??_delay_ms+0)+0)
  2971  0AE8  3000               	movlw	0
  2972  0AE9  00F5               	movwf	((??_delay_ms+0)+0+1)
  2973  0AEA  3000               	movlw	0
  2974  0AEB  00F6               	movwf	((??_delay_ms+0)+0+2)
  2975  0AEC  3000               	movlw	0
  2976  0AED  00F7               	movwf	((??_delay_ms+0)+0+3)
  2977  0AEE  0874               	movf	0+(??_delay_ms+0)+0,w
  2978  0AEF  02F0               	subwf	(delay_ms@ms),f
  2979  0AF0  0875               	movf	1+(??_delay_ms+0)+0,w
  2980  0AF1  1C03               	skipc
  2981  0AF2  0F75               	incfsz	1+(??_delay_ms+0)+0,w
  2982  0AF3  2AF5               	goto	u2815
  2983  0AF4  2AF6               	goto	u2816
  2984  0AF5                     u2815:
  2985  0AF5  02F1               	subwf	(delay_ms@ms+1),f
  2986  0AF6                     u2816:
  2987  0AF6  0876               	movf	2+(??_delay_ms+0)+0,w
  2988  0AF7  1C03               	skipc
  2989  0AF8  0F76               	incfsz	2+(??_delay_ms+0)+0,w
  2990  0AF9  2AFB               	goto	u2817
  2991  0AFA  2AFC               	goto	u2818
  2992  0AFB                     u2817:
  2993  0AFB  02F2               	subwf	(delay_ms@ms+2),f
  2994  0AFC                     u2818:
  2995  0AFC  0877               	movf	3+(??_delay_ms+0)+0,w
  2996  0AFD  1C03               	skipc
  2997  0AFE  0F77               	incfsz	3+(??_delay_ms+0)+0,w
  2998  0AFF  2B01               	goto	u2819
  2999  0B00  2B02               	goto	u2810
  3000  0B01                     u2819:
  3001  0B01  02F3               	subwf	(delay_ms@ms+3),f
  3002  0B02                     u2810:
  3003                           
  3004  0B02  30FF               	movlw	0FFh
  3005  0B03  0673               	xorwf	((delay_ms@ms+3)),w
  3006  0B04  1D03               	skipz
  3007  0B05  2B10               	goto	u2825
  3008  0B06  30FF               	movlw	0FFh
  3009  0B07  0672               	xorwf	((delay_ms@ms+2)),w
  3010  0B08  1D03               	skipz
  3011  0B09  2B10               	goto	u2825
  3012  0B0A  30FF               	movlw	0FFh
  3013  0B0B  0671               	xorwf	((delay_ms@ms+1)),w
  3014  0B0C  1D03               	skipz
  3015  0B0D  2B10               	goto	u2825
  3016  0B0E  30FF               	movlw	0FFh
  3017  0B0F  0670               	xorwf	((delay_ms@ms)),w
  3018  0B10                     u2825:
  3019  0B10  1D03               	skipz
  3020  0B11  2B13               	goto	u2821
  3021  0B12  2B14               	goto	u2820
  3022  0B13                     u2821:
  3023  0B13  2ADE               	goto	l2802
  3024  0B14                     u2820:
  3025  0B14  2B15               	goto	l906
  3026                           	
  3027  0B15                     l905:	
  3028                           	line	111
  3029                           	
  3030  0B15                     l906:	
  3031  0B15  0008               	return
  3032                           	opt stack 0
  3033                           GLOBAL	__end_of_delay_ms
  3034  0B16                     	__end_of_delay_ms:
  3035 ;; =============== function _delay_ms ends ============
  3036                           
  3037                           	signat	_delay_ms,4216
  3038                           	global	_choose_num_alphabet
  3039                           psect	text346,local,class=CODE,delta=2
  3040                           global __ptext346
  3041  0EDD                     __ptext346:
  3042                           
  3043 ;; *************** function _choose_num_alphabet *****************
  3044 ;; Defined at:
  3045 ;;		line 247 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  num_alp         1    wreg     unsigned char 
  3048 ;;  num_alp_arra    1    0[COMMON] PTR unsigned char 
  3049 ;;		 -> number_alphabet(8), 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  num_alp         1    2[COMMON] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;		None               void
  3054 ;; Registers used:
  3055 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3061 ;;      Params:         1       0       0       0       0
  3062 ;;      Locals:         1       0       0       0       0
  3063 ;;      Temps:          1       0       0       0       0
  3064 ;;      Totals:         3       0       0       0       0
  3065 ;;Total ram usage:        3 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_light_a_number_alphabet
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           psect	text346
  3074                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  3075                           	line	247
  3076                           	global	__size_of_choose_num_alphabet
  3077  F123                     	__size_of_choose_num_alphabet	equ	__end_of_choose_num_alphabet-_choose_num_alphabet
  3078                           	
  3079  0EDD                     _choose_num_alphabet:	
  3080                           	opt	stack 5
  3081                           ; Regs used in _choose_num_alphabet: [wreg-fsr0h+status,2+status,0]
  3082                           ;choose_num_alphabet@num_alp stored from wreg
  3083  0EDD  00F2               	movwf	(choose_num_alphabet@num_alp)
  3084                           	line	248
  3085                           	
  3086  0EDE                     l2708:	
  3087                           ;Dot Matrix.c: 248: switch(num_alp)
  3088  0EDE  120A  118A  2F8A   	goto	l2798
  3089                           	line	250
  3090                           ;Dot Matrix.c: 249: {
  3091                           ;Dot Matrix.c: 250: case 'A': num_alp_array[0] = 0xc3;
  3092                           	
  3093  0EE1                     l975:	
  3094                           	
  3095  0EE1                     l2710:	
  3096  0EE1  30C3               	movlw	(0C3h)
  3097  0EE2  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3098  0EE3  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3099  0EE4  0084               	movwf	fsr0
  3100  0EE5  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3101  0EE6  1383               	bcf	status, 7	;select IRP bank0
  3102  0EE7  0080               	movwf	indf
  3103                           	line	251
  3104                           	
  3105  0EE8                     l2712:	
  3106                           ;Dot Matrix.c: 251: num_alp_array[1] = 0xc3;
  3107  0EE8  30C3               	movlw	(0C3h)
  3108  0EE9  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3109  0EEA  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3110  0EEB  3E01               	addlw	01h
  3111  0EEC  0084               	movwf	fsr0
  3112  0EED  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3113  0EEE  0080               	movwf	indf
  3114                           	line	252
  3115                           	
  3116  0EEF                     l2714:	
  3117                           ;Dot Matrix.c: 252: num_alp_array[2] = 0xff;
  3118  0EEF  30FF               	movlw	(0FFh)
  3119  0EF0  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3120  0EF1  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3121  0EF2  3E02               	addlw	02h
  3122  0EF3  0084               	movwf	fsr0
  3123  0EF4  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3124  0EF5  0080               	movwf	indf
  3125                           	line	253
  3126                           	
  3127  0EF6                     l2716:	
  3128                           ;Dot Matrix.c: 253: num_alp_array[3] = 0xff;
  3129  0EF6  30FF               	movlw	(0FFh)
  3130  0EF7  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3131  0EF8  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3132  0EF9  3E03               	addlw	03h
  3133  0EFA  0084               	movwf	fsr0
  3134  0EFB  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3135  0EFC  0080               	movwf	indf
  3136                           	line	254
  3137                           	
  3138  0EFD                     l2718:	
  3139                           ;Dot Matrix.c: 254: num_alp_array[4] = 0xc3;
  3140  0EFD  30C3               	movlw	(0C3h)
  3141  0EFE  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3142  0EFF  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3143  0F00  3E04               	addlw	04h
  3144  0F01  0084               	movwf	fsr0
  3145  0F02  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3146  0F03  0080               	movwf	indf
  3147                           	line	255
  3148                           	
  3149  0F04                     l2720:	
  3150                           ;Dot Matrix.c: 255: num_alp_array[5] = 0xe7;
  3151  0F04  30E7               	movlw	(0E7h)
  3152  0F05  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3153  0F06  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3154  0F07  3E05               	addlw	05h
  3155  0F08  0084               	movwf	fsr0
  3156  0F09  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3157  0F0A  0080               	movwf	indf
  3158                           	line	256
  3159                           	
  3160  0F0B                     l2722:	
  3161                           ;Dot Matrix.c: 256: num_alp_array[6] = 0x7e;
  3162  0F0B  307E               	movlw	(07Eh)
  3163  0F0C  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3164  0F0D  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3165  0F0E  3E06               	addlw	06h
  3166  0F0F  0084               	movwf	fsr0
  3167  0F10  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3168  0F11  0080               	movwf	indf
  3169                           	line	257
  3170                           	
  3171  0F12                     l2724:	
  3172                           ;Dot Matrix.c: 257: num_alp_array[7] = 0x3c;
  3173  0F12  303C               	movlw	(03Ch)
  3174  0F13  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3175  0F14  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3176  0F15  3E07               	addlw	07h
  3177  0F16  0084               	movwf	fsr0
  3178  0F17  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3179  0F18  0080               	movwf	indf
  3180                           	line	258
  3181                           ;Dot Matrix.c: 258: break;
  3182  0F19  120A  118A  2FFC   	goto	l1013
  3183                           	line	260
  3184                           ;Dot Matrix.c: 260: case 'B': num_alp_array[0] = 0x3f;
  3185                           	
  3186  0F1C                     l977:	
  3187                           	
  3188  0F1C                     l2726:	
  3189  0F1C  303F               	movlw	(03Fh)
  3190  0F1D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3191  0F1E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3192  0F1F  0084               	movwf	fsr0
  3193  0F20  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3194  0F21  1383               	bcf	status, 7	;select IRP bank0
  3195  0F22  0080               	movwf	indf
  3196                           	line	261
  3197                           ;Dot Matrix.c: 261: num_alp_array[1] = 0xff;
  3198  0F23  30FF               	movlw	(0FFh)
  3199  0F24  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3200  0F25  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3201  0F26  3E01               	addlw	01h
  3202  0F27  0084               	movwf	fsr0
  3203  0F28  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3204  0F29  0080               	movwf	indf
  3205                           	line	262
  3206                           ;Dot Matrix.c: 262: num_alp_array[2] = 0xc3;
  3207  0F2A  30C3               	movlw	(0C3h)
  3208  0F2B  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3209  0F2C  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3210  0F2D  3E02               	addlw	02h
  3211  0F2E  0084               	movwf	fsr0
  3212  0F2F  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3213  0F30  0080               	movwf	indf
  3214                           	line	263
  3215                           ;Dot Matrix.c: 263: num_alp_array[3] = 0xff;
  3216  0F31  30FF               	movlw	(0FFh)
  3217  0F32  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3218  0F33  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3219  0F34  3E03               	addlw	03h
  3220  0F35  0084               	movwf	fsr0
  3221  0F36  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3222  0F37  0080               	movwf	indf
  3223                           	line	264
  3224                           ;Dot Matrix.c: 264: num_alp_array[4] = 0xff;
  3225  0F38  30FF               	movlw	(0FFh)
  3226  0F39  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3227  0F3A  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3228  0F3B  3E04               	addlw	04h
  3229  0F3C  0084               	movwf	fsr0
  3230  0F3D  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3231  0F3E  0080               	movwf	indf
  3232                           	line	265
  3233                           ;Dot Matrix.c: 265: num_alp_array[5] = 0xc3;
  3234  0F3F  30C3               	movlw	(0C3h)
  3235  0F40  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3236  0F41  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3237  0F42  3E05               	addlw	05h
  3238  0F43  0084               	movwf	fsr0
  3239  0F44  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3240  0F45  0080               	movwf	indf
  3241                           	line	266
  3242                           ;Dot Matrix.c: 266: num_alp_array[6] = 0xff;
  3243  0F46  30FF               	movlw	(0FFh)
  3244  0F47  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3245  0F48  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3246  0F49  3E06               	addlw	06h
  3247  0F4A  0084               	movwf	fsr0
  3248  0F4B  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3249  0F4C  0080               	movwf	indf
  3250                           	line	267
  3251                           ;Dot Matrix.c: 267: num_alp_array[7] = 0x3f;
  3252  0F4D  303F               	movlw	(03Fh)
  3253  0F4E  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3254  0F4F  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3255  0F50  3E07               	addlw	07h
  3256  0F51  0084               	movwf	fsr0
  3257  0F52  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3258  0F53  0080               	movwf	indf
  3259                           	line	268
  3260                           ;Dot Matrix.c: 268: break;
  3261  0F54  2F19               	goto	l1013
  3262                           	line	270
  3263                           ;Dot Matrix.c: 270: case 'C': num_alp_array[0] = 0xff;
  3264                           	
  3265  0F55                     l978:	
  3266                           	
  3267  0F55                     l2728:	
  3268  0F55  30FF               	movlw	(0FFh)
  3269  0F56  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3270  0F57  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3271  0F58  0084               	movwf	fsr0
  3272  0F59  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3273  0F5A  1383               	bcf	status, 7	;select IRP bank0
  3274  0F5B  0080               	movwf	indf
  3275                           	line	271
  3276                           ;Dot Matrix.c: 271: num_alp_array[1] = 0xff;
  3277  0F5C  30FF               	movlw	(0FFh)
  3278  0F5D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3279  0F5E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3280  0F5F  3E01               	addlw	01h
  3281  0F60  0084               	movwf	fsr0
  3282  0F61  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3283  0F62  0080               	movwf	indf
  3284                           	line	272
  3285                           ;Dot Matrix.c: 272: num_alp_array[2] = 0x03;
  3286  0F63  3003               	movlw	(03h)
  3287  0F64  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3288  0F65  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3289  0F66  3E02               	addlw	02h
  3290  0F67  0084               	movwf	fsr0
  3291  0F68  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3292  0F69  0080               	movwf	indf
  3293                           	line	273
  3294                           ;Dot Matrix.c: 273: num_alp_array[3] = 0x03;
  3295  0F6A  3003               	movlw	(03h)
  3296  0F6B  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3297  0F6C  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3298  0F6D  3E03               	addlw	03h
  3299  0F6E  0084               	movwf	fsr0
  3300  0F6F  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3301  0F70  0080               	movwf	indf
  3302                           	line	274
  3303                           ;Dot Matrix.c: 274: num_alp_array[4] = 0x03;
  3304  0F71  3003               	movlw	(03h)
  3305  0F72  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3306  0F73  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3307  0F74  3E04               	addlw	04h
  3308  0F75  0084               	movwf	fsr0
  3309  0F76  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3310  0F77  0080               	movwf	indf
  3311                           	line	275
  3312                           ;Dot Matrix.c: 275: num_alp_array[5] = 0x03;
  3313  0F78  3003               	movlw	(03h)
  3314  0F79  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3315  0F7A  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3316  0F7B  3E05               	addlw	05h
  3317  0F7C  0084               	movwf	fsr0
  3318  0F7D  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3319  0F7E  0080               	movwf	indf
  3320                           	line	276
  3321                           ;Dot Matrix.c: 276: num_alp_array[6] = 0xff;
  3322  0F7F  30FF               	movlw	(0FFh)
  3323  0F80  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3324  0F81  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3325  0F82  3E06               	addlw	06h
  3326  0F83  0084               	movwf	fsr0
  3327  0F84  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3328  0F85  0080               	movwf	indf
  3329                           	line	277
  3330                           ;Dot Matrix.c: 277: num_alp_array[7] = 0xff;
  3331  0F86  30FF               	movlw	(0FFh)
  3332  0F87  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3333  0F88  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3334  0F89  3E07               	addlw	07h
  3335  0F8A  0084               	movwf	fsr0
  3336  0F8B  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3337  0F8C  0080               	movwf	indf
  3338                           	line	278
  3339                           ;Dot Matrix.c: 278: break;
  3340  0F8D  2F19               	goto	l1013
  3341                           	line	280
  3342                           ;Dot Matrix.c: 280: case 'D': num_alp_array[0] = 0x3f;
  3343                           	
  3344  0F8E                     l979:	
  3345                           	
  3346  0F8E                     l2730:	
  3347  0F8E  303F               	movlw	(03Fh)
  3348  0F8F  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3349  0F90  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3350  0F91  0084               	movwf	fsr0
  3351  0F92  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3352  0F93  1383               	bcf	status, 7	;select IRP bank0
  3353  0F94  0080               	movwf	indf
  3354                           	line	281
  3355                           ;Dot Matrix.c: 281: num_alp_array[1] = 0x7f;
  3356  0F95  307F               	movlw	(07Fh)
  3357  0F96  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3358  0F97  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3359  0F98  3E01               	addlw	01h
  3360  0F99  0084               	movwf	fsr0
  3361  0F9A  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3362  0F9B  0080               	movwf	indf
  3363                           	line	282
  3364                           ;Dot Matrix.c: 282: num_alp_array[2] = 0xc3;
  3365  0F9C  30C3               	movlw	(0C3h)
  3366  0F9D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3367  0F9E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3368  0F9F  3E02               	addlw	02h
  3369  0FA0  0084               	movwf	fsr0
  3370  0FA1  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3371  0FA2  0080               	movwf	indf
  3372                           	line	283
  3373                           ;Dot Matrix.c: 283: num_alp_array[3] = 0xc3;
  3374  0FA3  30C3               	movlw	(0C3h)
  3375  0FA4  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3376  0FA5  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3377  0FA6  3E03               	addlw	03h
  3378  0FA7  0084               	movwf	fsr0
  3379  0FA8  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3380  0FA9  0080               	movwf	indf
  3381                           	line	284
  3382                           ;Dot Matrix.c: 284: num_alp_array[4] = 0xc3;
  3383  0FAA  30C3               	movlw	(0C3h)
  3384  0FAB  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3385  0FAC  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3386  0FAD  3E04               	addlw	04h
  3387  0FAE  0084               	movwf	fsr0
  3388  0FAF  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3389  0FB0  0080               	movwf	indf
  3390                           	line	285
  3391                           ;Dot Matrix.c: 285: num_alp_array[5] = 0xc3;
  3392  0FB1  30C3               	movlw	(0C3h)
  3393  0FB2  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3394  0FB3  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3395  0FB4  3E05               	addlw	05h
  3396  0FB5  0084               	movwf	fsr0
  3397  0FB6  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3398  0FB7  0080               	movwf	indf
  3399                           	line	286
  3400                           ;Dot Matrix.c: 286: num_alp_array[6] = 0x7f;
  3401  0FB8  307F               	movlw	(07Fh)
  3402  0FB9  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3403  0FBA  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3404  0FBB  3E06               	addlw	06h
  3405  0FBC  0084               	movwf	fsr0
  3406  0FBD  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3407  0FBE  0080               	movwf	indf
  3408                           	line	287
  3409                           ;Dot Matrix.c: 287: num_alp_array[7] = 0x3f;
  3410  0FBF  303F               	movlw	(03Fh)
  3411  0FC0  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3412  0FC1  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3413  0FC2  3E07               	addlw	07h
  3414  0FC3  0084               	movwf	fsr0
  3415  0FC4  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3416  0FC5  0080               	movwf	indf
  3417                           	line	288
  3418                           ;Dot Matrix.c: 288: break;
  3419  0FC6  2F19               	goto	l1013
  3420                           	line	290
  3421                           ;Dot Matrix.c: 290: case 'E': num_alp_array[0] = 0xff;
  3422                           	
  3423  0FC7                     l980:	
  3424                           	
  3425  0FC7                     l2732:	
  3426  0FC7  30FF               	movlw	(0FFh)
  3427  0FC8  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3428  0FC9  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3429  0FCA  0084               	movwf	fsr0
  3430  0FCB  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3431  0FCC  1383               	bcf	status, 7	;select IRP bank0
  3432  0FCD  0080               	movwf	indf
  3433                           	line	291
  3434                           ;Dot Matrix.c: 291: num_alp_array[1] = 0xff;
  3435  0FCE  30FF               	movlw	(0FFh)
  3436  0FCF  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3437  0FD0  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3438  0FD1  3E01               	addlw	01h
  3439  0FD2  0084               	movwf	fsr0
  3440  0FD3  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3441  0FD4  0080               	movwf	indf
  3442                           	line	292
  3443                           ;Dot Matrix.c: 292: num_alp_array[2] = 0x03;
  3444  0FD5  3003               	movlw	(03h)
  3445  0FD6  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3446  0FD7  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3447  0FD8  3E02               	addlw	02h
  3448  0FD9  0084               	movwf	fsr0
  3449  0FDA  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3450  0FDB  0080               	movwf	indf
  3451                           	line	293
  3452                           ;Dot Matrix.c: 293: num_alp_array[3] = 0xff;
  3453  0FDC  30FF               	movlw	(0FFh)
  3454  0FDD  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3455  0FDE  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3456  0FDF  3E03               	addlw	03h
  3457  0FE0  0084               	movwf	fsr0
  3458  0FE1  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3459  0FE2  0080               	movwf	indf
  3460                           	line	294
  3461                           ;Dot Matrix.c: 294: num_alp_array[4] = 0xff;
  3462  0FE3  30FF               	movlw	(0FFh)
  3463  0FE4  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3464  0FE5  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3465  0FE6  3E04               	addlw	04h
  3466  0FE7  0084               	movwf	fsr0
  3467  0FE8  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3468  0FE9  0080               	movwf	indf
  3469                           	line	295
  3470                           ;Dot Matrix.c: 295: num_alp_array[5] = 0x03;
  3471  0FEA  3003               	movlw	(03h)
  3472  0FEB  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3473  0FEC  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3474  0FED  3E05               	addlw	05h
  3475  0FEE  0084               	movwf	fsr0
  3476  0FEF  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3477  0FF0  0080               	movwf	indf
  3478                           	line	296
  3479                           ;Dot Matrix.c: 296: num_alp_array[6] = 0xff;
  3480  0FF1  30FF               	movlw	(0FFh)
  3481  0FF2  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3482  0FF3  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3483  0FF4  3E06               	addlw	06h
  3484  0FF5  0084               	movwf	fsr0
  3485  0FF6  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3486  0FF7  0080               	movwf	indf
  3487                           	line	297
  3488                           ;Dot Matrix.c: 297: num_alp_array[7] = 0xff;
  3489  0FF8  30FF               	movlw	(0FFh)
  3490  0FF9  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3491  0FFA  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3492  0FFB  3E07               	addlw	07h
  3493  0FFC  0084               	movwf	fsr0
  3494  0FFD  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3495  0FFE  0080               	movwf	indf
  3496                           	line	298
  3497                           ;Dot Matrix.c: 298: break;
  3498  0FFF  2F19               	goto	l1013
  3499                           	line	300
  3500                           ;Dot Matrix.c: 300: case 'F': num_alp_array[0] = 0x03;
  3501                           	
  3502  00A1                     l981:	
  3503                           	
  3504  00A1                     l2734:	
  3505  00A1  3003               	movlw	(03h)
  3506  00A2  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3507  00A3  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3508  00A4  0084               	movwf	fsr0
  3509  00A5  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3510  00A6  1383               	bcf	status, 7	;select IRP bank0
  3511  00A7  0080               	movwf	indf
  3512                           	line	301
  3513                           ;Dot Matrix.c: 301: num_alp_array[1] = 0x03;
  3514  00A8  3003               	movlw	(03h)
  3515  00A9  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3516  00AA  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3517  00AB  3E01               	addlw	01h
  3518  00AC  0084               	movwf	fsr0
  3519  00AD  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3520  00AE  0080               	movwf	indf
  3521                           	line	302
  3522                           ;Dot Matrix.c: 302: num_alp_array[2] = 0x03;
  3523  00AF  3003               	movlw	(03h)
  3524  00B0  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3525  00B1  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3526  00B2  3E02               	addlw	02h
  3527  00B3  0084               	movwf	fsr0
  3528  00B4  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3529  00B5  0080               	movwf	indf
  3530                           	line	303
  3531                           ;Dot Matrix.c: 303: num_alp_array[3] = 0xff;
  3532  00B6  30FF               	movlw	(0FFh)
  3533  00B7  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3534  00B8  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3535  00B9  3E03               	addlw	03h
  3536  00BA  0084               	movwf	fsr0
  3537  00BB  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3538  00BC  0080               	movwf	indf
  3539                           	line	304
  3540                           ;Dot Matrix.c: 304: num_alp_array[4] = 0xff;
  3541  00BD  30FF               	movlw	(0FFh)
  3542  00BE  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3543  00BF  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3544  00C0  3E04               	addlw	04h
  3545  00C1  0084               	movwf	fsr0
  3546  00C2  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3547  00C3  0080               	movwf	indf
  3548                           	line	305
  3549                           ;Dot Matrix.c: 305: num_alp_array[5] = 0x03;
  3550  00C4  3003               	movlw	(03h)
  3551  00C5  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3552  00C6  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3553  00C7  3E05               	addlw	05h
  3554  00C8  0084               	movwf	fsr0
  3555  00C9  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3556  00CA  0080               	movwf	indf
  3557                           	line	306
  3558                           ;Dot Matrix.c: 306: num_alp_array[6] = 0xff;
  3559  00CB  30FF               	movlw	(0FFh)
  3560  00CC  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3561  00CD  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3562  00CE  3E06               	addlw	06h
  3563  00CF  0084               	movwf	fsr0
  3564  00D0  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3565  00D1  0080               	movwf	indf
  3566                           	line	307
  3567                           ;Dot Matrix.c: 307: num_alp_array[7] = 0xff;
  3568  00D2  30FF               	movlw	(0FFh)
  3569  00D3  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3570  00D4  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3571  00D5  3E07               	addlw	07h
  3572  00D6  0084               	movwf	fsr0
  3573  00D7  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3574  00D8  0080               	movwf	indf
  3575                           	line	308
  3576                           ;Dot Matrix.c: 308: break;
  3577  00D9  2FFC               	goto	l1013
  3578                           	line	310
  3579                           ;Dot Matrix.c: 310: case 'G': num_alp_array[0] = 0xfe;
  3580                           	
  3581  00DA                     l982:	
  3582                           	
  3583  00DA                     l2736:	
  3584  00DA  30FE               	movlw	(0FEh)
  3585  00DB  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3586  00DC  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3587  00DD  0084               	movwf	fsr0
  3588  00DE  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3589  00DF  1383               	bcf	status, 7	;select IRP bank0
  3590  00E0  0080               	movwf	indf
  3591                           	line	311
  3592                           ;Dot Matrix.c: 311: num_alp_array[1] = 0xff;
  3593  00E1  30FF               	movlw	(0FFh)
  3594  00E2  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3595  00E3  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3596  00E4  3E01               	addlw	01h
  3597  00E5  0084               	movwf	fsr0
  3598  00E6  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3599  00E7  0080               	movwf	indf
  3600                           	line	312
  3601                           ;Dot Matrix.c: 312: num_alp_array[2] = 0xc3;
  3602  00E8  30C3               	movlw	(0C3h)
  3603  00E9  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3604  00EA  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3605  00EB  3E02               	addlw	02h
  3606  00EC  0084               	movwf	fsr0
  3607  00ED  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3608  00EE  0080               	movwf	indf
  3609                           	line	313
  3610                           ;Dot Matrix.c: 313: num_alp_array[3] = 0xf3;
  3611  00EF  30F3               	movlw	(0F3h)
  3612  00F0  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3613  00F1  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3614  00F2  3E03               	addlw	03h
  3615  00F3  0084               	movwf	fsr0
  3616  00F4  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3617  00F5  0080               	movwf	indf
  3618                           	line	314
  3619                           ;Dot Matrix.c: 314: num_alp_array[4] = 0xf3;
  3620  00F6  30F3               	movlw	(0F3h)
  3621  00F7  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3622  00F8  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3623  00F9  3E04               	addlw	04h
  3624  00FA  0084               	movwf	fsr0
  3625  00FB  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3626  00FC  0080               	movwf	indf
  3627                           	line	315
  3628                           ;Dot Matrix.c: 315: num_alp_array[5] = 0x03;
  3629  00FD  3003               	movlw	(03h)
  3630  00FE  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3631  00FF  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3632  0100  3E05               	addlw	05h
  3633  0101  0084               	movwf	fsr0
  3634  0102  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3635  0103  0080               	movwf	indf
  3636                           	line	316
  3637                           ;Dot Matrix.c: 316: num_alp_array[6] = 0xfe;
  3638  0104  30FE               	movlw	(0FEh)
  3639  0105  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3640  0106  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3641  0107  3E06               	addlw	06h
  3642  0108  0084               	movwf	fsr0
  3643  0109  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3644  010A  0080               	movwf	indf
  3645                           	line	317
  3646                           ;Dot Matrix.c: 317: num_alp_array[7] = 0xfc;
  3647  010B  30FC               	movlw	(0FCh)
  3648  010C  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3649  010D  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3650  010E  3E07               	addlw	07h
  3651  010F  0084               	movwf	fsr0
  3652  0110  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3653  0111  0080               	movwf	indf
  3654                           	line	318
  3655                           ;Dot Matrix.c: 318: break;
  3656  0112  2FFC               	goto	l1013
  3657                           	line	320
  3658                           ;Dot Matrix.c: 320: case 'H': num_alp_array[0] = 0xc3;
  3659                           	
  3660  0113                     l983:	
  3661                           	
  3662  0113                     l2738:	
  3663  0113  30C3               	movlw	(0C3h)
  3664  0114  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3665  0115  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3666  0116  0084               	movwf	fsr0
  3667  0117  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3668  0118  1383               	bcf	status, 7	;select IRP bank0
  3669  0119  0080               	movwf	indf
  3670                           	line	321
  3671                           ;Dot Matrix.c: 321: num_alp_array[1] = 0xc3;
  3672  011A  30C3               	movlw	(0C3h)
  3673  011B  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3674  011C  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3675  011D  3E01               	addlw	01h
  3676  011E  0084               	movwf	fsr0
  3677  011F  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3678  0120  0080               	movwf	indf
  3679                           	line	322
  3680                           ;Dot Matrix.c: 322: num_alp_array[2] = 0xc3;
  3681  0121  30C3               	movlw	(0C3h)
  3682  0122  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3683  0123  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3684  0124  3E02               	addlw	02h
  3685  0125  0084               	movwf	fsr0
  3686  0126  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3687  0127  0080               	movwf	indf
  3688                           	line	323
  3689                           ;Dot Matrix.c: 323: num_alp_array[3] = 0xff;
  3690  0128  30FF               	movlw	(0FFh)
  3691  0129  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3692  012A  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3693  012B  3E03               	addlw	03h
  3694  012C  0084               	movwf	fsr0
  3695  012D  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3696  012E  0080               	movwf	indf
  3697                           	line	324
  3698                           ;Dot Matrix.c: 324: num_alp_array[4] = 0xff;
  3699  012F  30FF               	movlw	(0FFh)
  3700  0130  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3701  0131  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3702  0132  3E04               	addlw	04h
  3703  0133  0084               	movwf	fsr0
  3704  0134  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3705  0135  0080               	movwf	indf
  3706                           	line	325
  3707                           ;Dot Matrix.c: 325: num_alp_array[5] = 0xc3;
  3708  0136  30C3               	movlw	(0C3h)
  3709  0137  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3710  0138  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3711  0139  3E05               	addlw	05h
  3712  013A  0084               	movwf	fsr0
  3713  013B  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3714  013C  0080               	movwf	indf
  3715                           	line	326
  3716                           ;Dot Matrix.c: 326: num_alp_array[6] = 0xc3;
  3717  013D  30C3               	movlw	(0C3h)
  3718  013E  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3719  013F  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3720  0140  3E06               	addlw	06h
  3721  0141  0084               	movwf	fsr0
  3722  0142  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3723  0143  0080               	movwf	indf
  3724                           	line	327
  3725                           ;Dot Matrix.c: 327: num_alp_array[7] = 0xc3;
  3726  0144  30C3               	movlw	(0C3h)
  3727  0145  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3728  0146  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3729  0147  3E07               	addlw	07h
  3730  0148  0084               	movwf	fsr0
  3731  0149  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3732  014A  0080               	movwf	indf
  3733                           	line	328
  3734                           ;Dot Matrix.c: 328: break;
  3735  014B  2FFC               	goto	l1013
  3736                           	line	330
  3737                           ;Dot Matrix.c: 330: case 'I': num_alp_array[0] = 0xff;
  3738                           	
  3739  014C                     l984:	
  3740                           	
  3741  014C                     l2740:	
  3742  014C  30FF               	movlw	(0FFh)
  3743  014D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3744  014E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3745  014F  0084               	movwf	fsr0
  3746  0150  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3747  0151  1383               	bcf	status, 7	;select IRP bank0
  3748  0152  0080               	movwf	indf
  3749                           	line	331
  3750                           ;Dot Matrix.c: 331: num_alp_array[1] = 0xff;
  3751  0153  30FF               	movlw	(0FFh)
  3752  0154  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3753  0155  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3754  0156  3E01               	addlw	01h
  3755  0157  0084               	movwf	fsr0
  3756  0158  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3757  0159  0080               	movwf	indf
  3758                           	line	332
  3759                           ;Dot Matrix.c: 332: num_alp_array[2] = 0x18;
  3760  015A  3018               	movlw	(018h)
  3761  015B  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3762  015C  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3763  015D  3E02               	addlw	02h
  3764  015E  0084               	movwf	fsr0
  3765  015F  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3766  0160  0080               	movwf	indf
  3767                           	line	333
  3768                           ;Dot Matrix.c: 333: num_alp_array[3] = 0x18;
  3769  0161  3018               	movlw	(018h)
  3770  0162  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3771  0163  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3772  0164  3E03               	addlw	03h
  3773  0165  0084               	movwf	fsr0
  3774  0166  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3775  0167  0080               	movwf	indf
  3776                           	line	334
  3777                           ;Dot Matrix.c: 334: num_alp_array[4] = 0x18;
  3778  0168  3018               	movlw	(018h)
  3779  0169  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3780  016A  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3781  016B  3E04               	addlw	04h
  3782  016C  0084               	movwf	fsr0
  3783  016D  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3784  016E  0080               	movwf	indf
  3785                           	line	335
  3786                           ;Dot Matrix.c: 335: num_alp_array[5] = 0x18;
  3787  016F  3018               	movlw	(018h)
  3788  0170  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3789  0171  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3790  0172  3E05               	addlw	05h
  3791  0173  0084               	movwf	fsr0
  3792  0174  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3793  0175  0080               	movwf	indf
  3794                           	line	336
  3795                           ;Dot Matrix.c: 336: num_alp_array[6] = 0xff;
  3796  0176  30FF               	movlw	(0FFh)
  3797  0177  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3798  0178  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3799  0179  3E06               	addlw	06h
  3800  017A  0084               	movwf	fsr0
  3801  017B  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3802  017C  0080               	movwf	indf
  3803                           	line	337
  3804                           ;Dot Matrix.c: 337: num_alp_array[7] = 0xff;
  3805  017D  30FF               	movlw	(0FFh)
  3806  017E  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3807  017F  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3808  0180  3E07               	addlw	07h
  3809  0181  0084               	movwf	fsr0
  3810  0182  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3811  0183  0080               	movwf	indf
  3812                           	line	338
  3813                           ;Dot Matrix.c: 338: break;
  3814  0184  2FFC               	goto	l1013
  3815                           	line	339
  3816                           ;Dot Matrix.c: 339: case 'J': num_alp_array[0] = 0x1e;
  3817                           	
  3818  0185                     l985:	
  3819                           	
  3820  0185                     l2742:	
  3821  0185  301E               	movlw	(01Eh)
  3822  0186  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3823  0187  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3824  0188  0084               	movwf	fsr0
  3825  0189  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3826  018A  1383               	bcf	status, 7	;select IRP bank0
  3827  018B  0080               	movwf	indf
  3828                           	line	340
  3829                           ;Dot Matrix.c: 340: num_alp_array[1] = 0x3f;
  3830  018C  303F               	movlw	(03Fh)
  3831  018D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3832  018E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3833  018F  3E01               	addlw	01h
  3834  0190  0084               	movwf	fsr0
  3835  0191  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3836  0192  0080               	movwf	indf
  3837                           	line	341
  3838                           ;Dot Matrix.c: 341: num_alp_array[2] = 0x33;
  3839  0193  3033               	movlw	(033h)
  3840  0194  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3841  0195  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3842  0196  3E02               	addlw	02h
  3843  0197  0084               	movwf	fsr0
  3844  0198  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3845  0199  0080               	movwf	indf
  3846                           	line	342
  3847                           ;Dot Matrix.c: 342: num_alp_array[3] = 0x33;
  3848  019A  3033               	movlw	(033h)
  3849  019B  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3850  019C  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3851  019D  3E03               	addlw	03h
  3852  019E  0084               	movwf	fsr0
  3853  019F  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3854  01A0  0080               	movwf	indf
  3855                           	line	343
  3856                           ;Dot Matrix.c: 343: num_alp_array[4] = 0x30;
  3857  01A1  3030               	movlw	(030h)
  3858  01A2  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3859  01A3  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3860  01A4  3E04               	addlw	04h
  3861  01A5  0084               	movwf	fsr0
  3862  01A6  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3863  01A7  0080               	movwf	indf
  3864                           	line	344
  3865                           ;Dot Matrix.c: 344: num_alp_array[5] = 0x30;
  3866  01A8  3030               	movlw	(030h)
  3867  01A9  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3868  01AA  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3869  01AB  3E05               	addlw	05h
  3870  01AC  0084               	movwf	fsr0
  3871  01AD  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3872  01AE  0080               	movwf	indf
  3873                           	line	345
  3874                           ;Dot Matrix.c: 345: num_alp_array[6] = 0xff;
  3875  01AF  30FF               	movlw	(0FFh)
  3876  01B0  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3877  01B1  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3878  01B2  3E06               	addlw	06h
  3879  01B3  0084               	movwf	fsr0
  3880  01B4  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3881  01B5  0080               	movwf	indf
  3882                           	line	346
  3883                           ;Dot Matrix.c: 346: num_alp_array[7] = 0xff;
  3884  01B6  30FF               	movlw	(0FFh)
  3885  01B7  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3886  01B8  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3887  01B9  3E07               	addlw	07h
  3888  01BA  0084               	movwf	fsr0
  3889  01BB  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3890  01BC  0080               	movwf	indf
  3891                           	line	347
  3892                           ;Dot Matrix.c: 347: break;
  3893  01BD  2FFC               	goto	l1013
  3894                           	line	348
  3895                           ;Dot Matrix.c: 348: case 'K': num_alp_array[0] = 0xc3;
  3896                           	
  3897  01BE                     l986:	
  3898                           	
  3899  01BE                     l2744:	
  3900  01BE  30C3               	movlw	(0C3h)
  3901  01BF  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3902  01C0  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3903  01C1  0084               	movwf	fsr0
  3904  01C2  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3905  01C3  1383               	bcf	status, 7	;select IRP bank0
  3906  01C4  0080               	movwf	indf
  3907                           	line	349
  3908                           ;Dot Matrix.c: 349: num_alp_array[1] = 0x63;
  3909  01C5  3063               	movlw	(063h)
  3910  01C6  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3911  01C7  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3912  01C8  3E01               	addlw	01h
  3913  01C9  0084               	movwf	fsr0
  3914  01CA  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3915  01CB  0080               	movwf	indf
  3916                           	line	350
  3917                           ;Dot Matrix.c: 350: num_alp_array[2] = 0x33;
  3918  01CC  3033               	movlw	(033h)
  3919  01CD  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3920  01CE  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3921  01CF  3E02               	addlw	02h
  3922  01D0  0084               	movwf	fsr0
  3923  01D1  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3924  01D2  0080               	movwf	indf
  3925                           	line	351
  3926                           ;Dot Matrix.c: 351: num_alp_array[3] = 0x1f;
  3927  01D3  301F               	movlw	(01Fh)
  3928  01D4  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3929  01D5  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3930  01D6  3E03               	addlw	03h
  3931  01D7  0084               	movwf	fsr0
  3932  01D8  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3933  01D9  0080               	movwf	indf
  3934                           	line	352
  3935                           ;Dot Matrix.c: 352: num_alp_array[4] = 0x1f;
  3936  01DA  301F               	movlw	(01Fh)
  3937  01DB  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3938  01DC  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3939  01DD  3E04               	addlw	04h
  3940  01DE  0084               	movwf	fsr0
  3941  01DF  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3942  01E0  0080               	movwf	indf
  3943                           	line	353
  3944                           ;Dot Matrix.c: 353: num_alp_array[5] = 0x33;
  3945  01E1  3033               	movlw	(033h)
  3946  01E2  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3947  01E3  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3948  01E4  3E05               	addlw	05h
  3949  01E5  0084               	movwf	fsr0
  3950  01E6  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3951  01E7  0080               	movwf	indf
  3952                           	line	354
  3953                           ;Dot Matrix.c: 354: num_alp_array[6] = 0x63;
  3954  01E8  3063               	movlw	(063h)
  3955  01E9  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3956  01EA  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3957  01EB  3E06               	addlw	06h
  3958  01EC  0084               	movwf	fsr0
  3959  01ED  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3960  01EE  0080               	movwf	indf
  3961                           	line	355
  3962                           ;Dot Matrix.c: 355: num_alp_array[7] = 0xc3;
  3963  01EF  30C3               	movlw	(0C3h)
  3964  01F0  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3965  01F1  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3966  01F2  3E07               	addlw	07h
  3967  01F3  0084               	movwf	fsr0
  3968  01F4  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3969  01F5  0080               	movwf	indf
  3970                           	line	356
  3971                           ;Dot Matrix.c: 356: break;
  3972  01F6  2FFC               	goto	l1013
  3973                           	line	357
  3974                           ;Dot Matrix.c: 357: case 'L': num_alp_array[0] = 0xff;
  3975                           	
  3976  01F7                     l987:	
  3977                           	
  3978  01F7                     l2746:	
  3979  01F7  30FF               	movlw	(0FFh)
  3980  01F8  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3981  01F9  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3982  01FA  0084               	movwf	fsr0
  3983  01FB  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3984  01FC  1383               	bcf	status, 7	;select IRP bank0
  3985  01FD  0080               	movwf	indf
  3986                           	line	358
  3987                           ;Dot Matrix.c: 358: num_alp_array[1] = 0xff;
  3988  01FE  30FF               	movlw	(0FFh)
  3989  01FF  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3990  0200  0870               	movf	(choose_num_alphabet@num_alp_array),w
  3991  0201  3E01               	addlw	01h
  3992  0202  0084               	movwf	fsr0
  3993  0203  0871               	movf	(??_choose_num_alphabet+0)+0,w
  3994  0204  0080               	movwf	indf
  3995                           	line	359
  3996                           ;Dot Matrix.c: 359: num_alp_array[2] = 0x03;
  3997  0205  3003               	movlw	(03h)
  3998  0206  00F1               	movwf	(??_choose_num_alphabet+0)+0
  3999  0207  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4000  0208  3E02               	addlw	02h
  4001  0209  0084               	movwf	fsr0
  4002  020A  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4003  020B  0080               	movwf	indf
  4004                           	line	360
  4005                           ;Dot Matrix.c: 360: num_alp_array[3] = 0x03;
  4006  020C  3003               	movlw	(03h)
  4007  020D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4008  020E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4009  020F  3E03               	addlw	03h
  4010  0210  0084               	movwf	fsr0
  4011  0211  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4012  0212  0080               	movwf	indf
  4013                           	line	361
  4014                           ;Dot Matrix.c: 361: num_alp_array[4] = 0x03;
  4015  0213  3003               	movlw	(03h)
  4016  0214  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4017  0215  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4018  0216  3E04               	addlw	04h
  4019  0217  0084               	movwf	fsr0
  4020  0218  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4021  0219  0080               	movwf	indf
  4022                           	line	362
  4023                           ;Dot Matrix.c: 362: num_alp_array[5] = 0x03;
  4024  021A  3003               	movlw	(03h)
  4025  021B  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4026  021C  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4027  021D  3E05               	addlw	05h
  4028  021E  0084               	movwf	fsr0
  4029  021F  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4030  0220  0080               	movwf	indf
  4031                           	line	363
  4032                           ;Dot Matrix.c: 363: num_alp_array[6] = 0x03;
  4033  0221  3003               	movlw	(03h)
  4034  0222  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4035  0223  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4036  0224  3E06               	addlw	06h
  4037  0225  0084               	movwf	fsr0
  4038  0226  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4039  0227  0080               	movwf	indf
  4040                           	line	364
  4041                           ;Dot Matrix.c: 364: num_alp_array[7] = 0x03;
  4042  0228  3003               	movlw	(03h)
  4043  0229  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4044  022A  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4045  022B  3E07               	addlw	07h
  4046  022C  0084               	movwf	fsr0
  4047  022D  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4048  022E  0080               	movwf	indf
  4049                           	line	365
  4050                           ;Dot Matrix.c: 365: break;
  4051  022F  2FFC               	goto	l1013
  4052                           	line	366
  4053                           ;Dot Matrix.c: 366: case 'M': num_alp_array[0] = 0xc3;
  4054                           	
  4055  0230                     l988:	
  4056                           	
  4057  0230                     l2748:	
  4058  0230  30C3               	movlw	(0C3h)
  4059  0231  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4060  0232  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4061  0233  0084               	movwf	fsr0
  4062  0234  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4063  0235  1383               	bcf	status, 7	;select IRP bank0
  4064  0236  0080               	movwf	indf
  4065                           	line	367
  4066                           ;Dot Matrix.c: 367: num_alp_array[1] = 0xc3;
  4067  0237  30C3               	movlw	(0C3h)
  4068  0238  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4069  0239  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4070  023A  3E01               	addlw	01h
  4071  023B  0084               	movwf	fsr0
  4072  023C  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4073  023D  0080               	movwf	indf
  4074                           	line	368
  4075                           ;Dot Matrix.c: 368: num_alp_array[2] = 0xc3;
  4076  023E  30C3               	movlw	(0C3h)
  4077  023F  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4078  0240  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4079  0241  3E02               	addlw	02h
  4080  0242  0084               	movwf	fsr0
  4081  0243  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4082  0244  0080               	movwf	indf
  4083                           	line	369
  4084                           ;Dot Matrix.c: 369: num_alp_array[3] = 0xc3;
  4085  0245  30C3               	movlw	(0C3h)
  4086  0246  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4087  0247  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4088  0248  3E03               	addlw	03h
  4089  0249  0084               	movwf	fsr0
  4090  024A  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4091  024B  0080               	movwf	indf
  4092                           	line	370
  4093                           ;Dot Matrix.c: 370: num_alp_array[4] = 0xdb;
  4094  024C  30DB               	movlw	(0DBh)
  4095  024D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4096  024E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4097  024F  3E04               	addlw	04h
  4098  0250  0084               	movwf	fsr0
  4099  0251  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4100  0252  0080               	movwf	indf
  4101                           	line	371
  4102                           ;Dot Matrix.c: 371: num_alp_array[5] = 0xff;
  4103  0253  30FF               	movlw	(0FFh)
  4104  0254  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4105  0255  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4106  0256  3E05               	addlw	05h
  4107  0257  0084               	movwf	fsr0
  4108  0258  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4109  0259  0080               	movwf	indf
  4110                           	line	372
  4111                           ;Dot Matrix.c: 372: num_alp_array[6] = 0xe7;
  4112  025A  30E7               	movlw	(0E7h)
  4113  025B  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4114  025C  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4115  025D  3E06               	addlw	06h
  4116  025E  0084               	movwf	fsr0
  4117  025F  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4118  0260  0080               	movwf	indf
  4119                           	line	373
  4120                           ;Dot Matrix.c: 373: num_alp_array[7] = 0xc3;
  4121  0261  30C3               	movlw	(0C3h)
  4122  0262  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4123  0263  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4124  0264  3E07               	addlw	07h
  4125  0265  0084               	movwf	fsr0
  4126  0266  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4127  0267  0080               	movwf	indf
  4128                           	line	374
  4129                           ;Dot Matrix.c: 374: break;
  4130  0268  2FFC               	goto	l1013
  4131                           	line	376
  4132                           ;Dot Matrix.c: 376: case 'N': num_alp_array[0] = 0xc3;
  4133                           	
  4134  0269                     l989:	
  4135                           	
  4136  0269                     l2750:	
  4137  0269  30C3               	movlw	(0C3h)
  4138  026A  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4139  026B  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4140  026C  0084               	movwf	fsr0
  4141  026D  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4142  026E  1383               	bcf	status, 7	;select IRP bank0
  4143  026F  0080               	movwf	indf
  4144                           	line	377
  4145                           ;Dot Matrix.c: 377: num_alp_array[1] = 0xe3;
  4146  0270  30E3               	movlw	(0E3h)
  4147  0271  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4148  0272  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4149  0273  3E01               	addlw	01h
  4150  0274  0084               	movwf	fsr0
  4151  0275  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4152  0276  0080               	movwf	indf
  4153                           	line	378
  4154                           ;Dot Matrix.c: 378: num_alp_array[2] = 0xf3;
  4155  0277  30F3               	movlw	(0F3h)
  4156  0278  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4157  0279  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4158  027A  3E02               	addlw	02h
  4159  027B  0084               	movwf	fsr0
  4160  027C  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4161  027D  0080               	movwf	indf
  4162                           	line	379
  4163                           ;Dot Matrix.c: 379: num_alp_array[3] = 0xfb;
  4164  027E  30FB               	movlw	(0FBh)
  4165  027F  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4166  0280  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4167  0281  3E03               	addlw	03h
  4168  0282  0084               	movwf	fsr0
  4169  0283  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4170  0284  0080               	movwf	indf
  4171                           	line	380
  4172                           ;Dot Matrix.c: 380: num_alp_array[4] = 0xdf;
  4173  0285  30DF               	movlw	(0DFh)
  4174  0286  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4175  0287  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4176  0288  3E04               	addlw	04h
  4177  0289  0084               	movwf	fsr0
  4178  028A  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4179  028B  0080               	movwf	indf
  4180                           	line	381
  4181                           ;Dot Matrix.c: 381: num_alp_array[5] = 0xcf;
  4182  028C  30CF               	movlw	(0CFh)
  4183  028D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4184  028E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4185  028F  3E05               	addlw	05h
  4186  0290  0084               	movwf	fsr0
  4187  0291  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4188  0292  0080               	movwf	indf
  4189                           	line	382
  4190                           ;Dot Matrix.c: 382: num_alp_array[6] = 0xc7;
  4191  0293  30C7               	movlw	(0C7h)
  4192  0294  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4193  0295  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4194  0296  3E06               	addlw	06h
  4195  0297  0084               	movwf	fsr0
  4196  0298  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4197  0299  0080               	movwf	indf
  4198                           	line	383
  4199                           ;Dot Matrix.c: 383: num_alp_array[7] = 0xc3;
  4200  029A  30C3               	movlw	(0C3h)
  4201  029B  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4202  029C  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4203  029D  3E07               	addlw	07h
  4204  029E  0084               	movwf	fsr0
  4205  029F  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4206  02A0  0080               	movwf	indf
  4207                           	line	384
  4208                           ;Dot Matrix.c: 384: break;
  4209  02A1  2FFC               	goto	l1013
  4210                           	line	386
  4211                           ;Dot Matrix.c: 386: case 'O': num_alp_array[0] = 0x3c;
  4212                           	
  4213  02A2                     l990:	
  4214                           	
  4215  02A2                     l2752:	
  4216  02A2  303C               	movlw	(03Ch)
  4217  02A3  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4218  02A4  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4219  02A5  0084               	movwf	fsr0
  4220  02A6  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4221  02A7  1383               	bcf	status, 7	;select IRP bank0
  4222  02A8  0080               	movwf	indf
  4223                           	line	387
  4224                           ;Dot Matrix.c: 387: num_alp_array[1] = 0x7e;
  4225  02A9  307E               	movlw	(07Eh)
  4226  02AA  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4227  02AB  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4228  02AC  3E01               	addlw	01h
  4229  02AD  0084               	movwf	fsr0
  4230  02AE  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4231  02AF  0080               	movwf	indf
  4232                           	line	388
  4233                           ;Dot Matrix.c: 388: num_alp_array[2] = 0xc3;
  4234  02B0  30C3               	movlw	(0C3h)
  4235  02B1  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4236  02B2  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4237  02B3  3E02               	addlw	02h
  4238  02B4  0084               	movwf	fsr0
  4239  02B5  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4240  02B6  0080               	movwf	indf
  4241                           	line	389
  4242                           ;Dot Matrix.c: 389: num_alp_array[3] = 0xc3;
  4243  02B7  30C3               	movlw	(0C3h)
  4244  02B8  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4245  02B9  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4246  02BA  3E03               	addlw	03h
  4247  02BB  0084               	movwf	fsr0
  4248  02BC  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4249  02BD  0080               	movwf	indf
  4250                           	line	390
  4251                           ;Dot Matrix.c: 390: num_alp_array[4] = 0xc3;
  4252  02BE  30C3               	movlw	(0C3h)
  4253  02BF  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4254  02C0  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4255  02C1  3E04               	addlw	04h
  4256  02C2  0084               	movwf	fsr0
  4257  02C3  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4258  02C4  0080               	movwf	indf
  4259                           	line	391
  4260                           ;Dot Matrix.c: 391: num_alp_array[5] = 0xc3;
  4261  02C5  30C3               	movlw	(0C3h)
  4262  02C6  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4263  02C7  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4264  02C8  3E05               	addlw	05h
  4265  02C9  0084               	movwf	fsr0
  4266  02CA  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4267  02CB  0080               	movwf	indf
  4268                           	line	392
  4269                           ;Dot Matrix.c: 392: num_alp_array[6] = 0x7e;
  4270  02CC  307E               	movlw	(07Eh)
  4271  02CD  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4272  02CE  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4273  02CF  3E06               	addlw	06h
  4274  02D0  0084               	movwf	fsr0
  4275  02D1  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4276  02D2  0080               	movwf	indf
  4277                           	line	393
  4278                           ;Dot Matrix.c: 393: num_alp_array[7] = 0x3c;
  4279  02D3  303C               	movlw	(03Ch)
  4280  02D4  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4281  02D5  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4282  02D6  3E07               	addlw	07h
  4283  02D7  0084               	movwf	fsr0
  4284  02D8  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4285  02D9  0080               	movwf	indf
  4286                           	line	394
  4287                           ;Dot Matrix.c: 394: break;
  4288  02DA  2FFC               	goto	l1013
  4289                           	line	396
  4290                           ;Dot Matrix.c: 396: case 'P': num_alp_array[0] = 0x03;
  4291                           	
  4292  02DB                     l991:	
  4293                           	
  4294  02DB                     l2754:	
  4295  02DB  3003               	movlw	(03h)
  4296  02DC  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4297  02DD  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4298  02DE  0084               	movwf	fsr0
  4299  02DF  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4300  02E0  1383               	bcf	status, 7	;select IRP bank0
  4301  02E1  0080               	movwf	indf
  4302                           	line	397
  4303                           ;Dot Matrix.c: 397: num_alp_array[1] = 0x03;
  4304  02E2  3003               	movlw	(03h)
  4305  02E3  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4306  02E4  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4307  02E5  3E01               	addlw	01h
  4308  02E6  0084               	movwf	fsr0
  4309  02E7  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4310  02E8  0080               	movwf	indf
  4311                           	line	398
  4312                           ;Dot Matrix.c: 398: num_alp_array[2] = 0x7f;
  4313  02E9  307F               	movlw	(07Fh)
  4314  02EA  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4315  02EB  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4316  02EC  3E02               	addlw	02h
  4317  02ED  0084               	movwf	fsr0
  4318  02EE  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4319  02EF  0080               	movwf	indf
  4320                           	line	399
  4321                           ;Dot Matrix.c: 399: num_alp_array[3] = 0xff;
  4322  02F0  30FF               	movlw	(0FFh)
  4323  02F1  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4324  02F2  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4325  02F3  3E03               	addlw	03h
  4326  02F4  0084               	movwf	fsr0
  4327  02F5  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4328  02F6  0080               	movwf	indf
  4329                           	line	400
  4330                           ;Dot Matrix.c: 400: num_alp_array[4] = 0xc3;
  4331  02F7  30C3               	movlw	(0C3h)
  4332  02F8  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4333  02F9  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4334  02FA  3E04               	addlw	04h
  4335  02FB  0084               	movwf	fsr0
  4336  02FC  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4337  02FD  0080               	movwf	indf
  4338                           	line	401
  4339                           ;Dot Matrix.c: 401: num_alp_array[5] = 0xc3;
  4340  02FE  30C3               	movlw	(0C3h)
  4341  02FF  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4342  0300  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4343  0301  3E05               	addlw	05h
  4344  0302  0084               	movwf	fsr0
  4345  0303  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4346  0304  0080               	movwf	indf
  4347                           	line	402
  4348                           ;Dot Matrix.c: 402: num_alp_array[6] = 0xff;
  4349  0305  30FF               	movlw	(0FFh)
  4350  0306  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4351  0307  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4352  0308  3E06               	addlw	06h
  4353  0309  0084               	movwf	fsr0
  4354  030A  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4355  030B  0080               	movwf	indf
  4356                           	line	403
  4357                           ;Dot Matrix.c: 403: num_alp_array[7] = 0x7f;
  4358  030C  307F               	movlw	(07Fh)
  4359  030D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4360  030E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4361  030F  3E07               	addlw	07h
  4362  0310  0084               	movwf	fsr0
  4363  0311  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4364  0312  0080               	movwf	indf
  4365                           	line	404
  4366                           ;Dot Matrix.c: 404: break;
  4367  0313  2FFC               	goto	l1013
  4368                           	line	406
  4369                           ;Dot Matrix.c: 406: case 'Q': num_alp_array[0] = 0xde;
  4370                           	
  4371  0314                     l992:	
  4372                           	
  4373  0314                     l2756:	
  4374  0314  30DE               	movlw	(0DEh)
  4375  0315  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4376  0316  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4377  0317  0084               	movwf	fsr0
  4378  0318  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4379  0319  1383               	bcf	status, 7	;select IRP bank0
  4380  031A  0080               	movwf	indf
  4381                           	line	407
  4382                           ;Dot Matrix.c: 407: num_alp_array[1] = 0x7f;
  4383  031B  307F               	movlw	(07Fh)
  4384  031C  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4385  031D  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4386  031E  3E01               	addlw	01h
  4387  031F  0084               	movwf	fsr0
  4388  0320  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4389  0321  0080               	movwf	indf
  4390                           	line	408
  4391                           ;Dot Matrix.c: 408: num_alp_array[2] = 0xf3;
  4392  0322  30F3               	movlw	(0F3h)
  4393  0323  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4394  0324  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4395  0325  3E02               	addlw	02h
  4396  0326  0084               	movwf	fsr0
  4397  0327  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4398  0328  0080               	movwf	indf
  4399                           	line	409
  4400                           ;Dot Matrix.c: 409: num_alp_array[3] = 0xdb;
  4401  0329  30DB               	movlw	(0DBh)
  4402  032A  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4403  032B  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4404  032C  3E03               	addlw	03h
  4405  032D  0084               	movwf	fsr0
  4406  032E  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4407  032F  0080               	movwf	indf
  4408                           	line	410
  4409                           ;Dot Matrix.c: 410: num_alp_array[4] = 0xc3;
  4410  0330  30C3               	movlw	(0C3h)
  4411  0331  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4412  0332  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4413  0333  3E04               	addlw	04h
  4414  0334  0084               	movwf	fsr0
  4415  0335  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4416  0336  0080               	movwf	indf
  4417                           	line	411
  4418                           ;Dot Matrix.c: 411: num_alp_array[5] = 0xc3;
  4419  0337  30C3               	movlw	(0C3h)
  4420  0338  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4421  0339  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4422  033A  3E05               	addlw	05h
  4423  033B  0084               	movwf	fsr0
  4424  033C  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4425  033D  0080               	movwf	indf
  4426                           	line	412
  4427                           ;Dot Matrix.c: 412: num_alp_array[6] = 0x7e;
  4428  033E  307E               	movlw	(07Eh)
  4429  033F  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4430  0340  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4431  0341  3E06               	addlw	06h
  4432  0342  0084               	movwf	fsr0
  4433  0343  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4434  0344  0080               	movwf	indf
  4435                           	line	413
  4436                           ;Dot Matrix.c: 413: num_alp_array[7] = 0x3c;
  4437  0345  303C               	movlw	(03Ch)
  4438  0346  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4439  0347  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4440  0348  3E07               	addlw	07h
  4441  0349  0084               	movwf	fsr0
  4442  034A  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4443  034B  0080               	movwf	indf
  4444                           	line	414
  4445                           ;Dot Matrix.c: 414: break;
  4446  034C  2FFC               	goto	l1013
  4447                           	line	416
  4448                           ;Dot Matrix.c: 416: case 'R': num_alp_array[0] = 0xc3;
  4449                           	
  4450  034D                     l993:	
  4451                           	
  4452  034D                     l2758:	
  4453  034D  30C3               	movlw	(0C3h)
  4454  034E  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4455  034F  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4456  0350  0084               	movwf	fsr0
  4457  0351  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4458  0352  1383               	bcf	status, 7	;select IRP bank0
  4459  0353  0080               	movwf	indf
  4460                           	line	417
  4461                           ;Dot Matrix.c: 417: num_alp_array[1] = 0xe3;
  4462  0354  30E3               	movlw	(0E3h)
  4463  0355  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4464  0356  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4465  0357  3E01               	addlw	01h
  4466  0358  0084               	movwf	fsr0
  4467  0359  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4468  035A  0080               	movwf	indf
  4469                           	line	418
  4470                           ;Dot Matrix.c: 418: num_alp_array[2] = 0x73;
  4471  035B  3073               	movlw	(073h)
  4472  035C  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4473  035D  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4474  035E  3E02               	addlw	02h
  4475  035F  0084               	movwf	fsr0
  4476  0360  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4477  0361  0080               	movwf	indf
  4478                           	line	419
  4479                           ;Dot Matrix.c: 419: num_alp_array[3] = 0x7f;
  4480  0362  307F               	movlw	(07Fh)
  4481  0363  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4482  0364  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4483  0365  3E03               	addlw	03h
  4484  0366  0084               	movwf	fsr0
  4485  0367  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4486  0368  0080               	movwf	indf
  4487                           	line	420
  4488                           ;Dot Matrix.c: 420: num_alp_array[4] = 0xff;
  4489  0369  30FF               	movlw	(0FFh)
  4490  036A  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4491  036B  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4492  036C  3E04               	addlw	04h
  4493  036D  0084               	movwf	fsr0
  4494  036E  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4495  036F  0080               	movwf	indf
  4496                           	line	421
  4497                           ;Dot Matrix.c: 421: num_alp_array[5] = 0xc3;
  4498  0370  30C3               	movlw	(0C3h)
  4499  0371  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4500  0372  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4501  0373  3E05               	addlw	05h
  4502  0374  0084               	movwf	fsr0
  4503  0375  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4504  0376  0080               	movwf	indf
  4505                           	line	422
  4506                           ;Dot Matrix.c: 422: num_alp_array[6] = 0xff;
  4507  0377  30FF               	movlw	(0FFh)
  4508  0378  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4509  0379  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4510  037A  3E06               	addlw	06h
  4511  037B  0084               	movwf	fsr0
  4512  037C  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4513  037D  0080               	movwf	indf
  4514                           	line	423
  4515                           ;Dot Matrix.c: 423: num_alp_array[7] = 0x7f;
  4516  037E  307F               	movlw	(07Fh)
  4517  037F  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4518  0380  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4519  0381  3E07               	addlw	07h
  4520  0382  0084               	movwf	fsr0
  4521  0383  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4522  0384  0080               	movwf	indf
  4523                           	line	424
  4524                           ;Dot Matrix.c: 424: break;
  4525  0385  2FFC               	goto	l1013
  4526                           	line	426
  4527                           ;Dot Matrix.c: 426: case 'S': num_alp_array[0] = 0xff;
  4528                           	
  4529  0386                     l994:	
  4530                           	
  4531  0386                     l2760:	
  4532  0386  30FF               	movlw	(0FFh)
  4533  0387  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4534  0388  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4535  0389  0084               	movwf	fsr0
  4536  038A  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4537  038B  1383               	bcf	status, 7	;select IRP bank0
  4538  038C  0080               	movwf	indf
  4539                           	line	427
  4540                           ;Dot Matrix.c: 427: num_alp_array[1] = 0xff;
  4541  038D  30FF               	movlw	(0FFh)
  4542  038E  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4543  038F  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4544  0390  3E01               	addlw	01h
  4545  0391  0084               	movwf	fsr0
  4546  0392  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4547  0393  0080               	movwf	indf
  4548                           	line	428
  4549                           ;Dot Matrix.c: 428: num_alp_array[2] = 0xc0;
  4550  0394  30C0               	movlw	(0C0h)
  4551  0395  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4552  0396  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4553  0397  3E02               	addlw	02h
  4554  0398  0084               	movwf	fsr0
  4555  0399  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4556  039A  0080               	movwf	indf
  4557                           	line	429
  4558                           ;Dot Matrix.c: 429: num_alp_array[3] = 0xff;
  4559  039B  30FF               	movlw	(0FFh)
  4560  039C  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4561  039D  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4562  039E  3E03               	addlw	03h
  4563  039F  0084               	movwf	fsr0
  4564  03A0  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4565  03A1  0080               	movwf	indf
  4566                           	line	430
  4567                           ;Dot Matrix.c: 430: num_alp_array[4] = 0xff;
  4568  03A2  30FF               	movlw	(0FFh)
  4569  03A3  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4570  03A4  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4571  03A5  3E04               	addlw	04h
  4572  03A6  0084               	movwf	fsr0
  4573  03A7  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4574  03A8  0080               	movwf	indf
  4575                           	line	431
  4576                           ;Dot Matrix.c: 431: num_alp_array[5] = 0x03;
  4577  03A9  3003               	movlw	(03h)
  4578  03AA  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4579  03AB  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4580  03AC  3E05               	addlw	05h
  4581  03AD  0084               	movwf	fsr0
  4582  03AE  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4583  03AF  0080               	movwf	indf
  4584                           	line	432
  4585                           ;Dot Matrix.c: 432: num_alp_array[6] = 0xff;
  4586  03B0  30FF               	movlw	(0FFh)
  4587  03B1  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4588  03B2  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4589  03B3  3E06               	addlw	06h
  4590  03B4  0084               	movwf	fsr0
  4591  03B5  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4592  03B6  0080               	movwf	indf
  4593                           	line	433
  4594                           ;Dot Matrix.c: 433: num_alp_array[7] = 0xff;
  4595  03B7  30FF               	movlw	(0FFh)
  4596  03B8  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4597  03B9  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4598  03BA  3E07               	addlw	07h
  4599  03BB  0084               	movwf	fsr0
  4600  03BC  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4601  03BD  0080               	movwf	indf
  4602                           	line	434
  4603                           ;Dot Matrix.c: 434: break;
  4604  03BE  2FFC               	goto	l1013
  4605                           	line	436
  4606                           ;Dot Matrix.c: 436: case 'T': num_alp_array[0] = 0x18;
  4607                           	
  4608  03BF                     l995:	
  4609                           	
  4610  03BF                     l2762:	
  4611  03BF  3018               	movlw	(018h)
  4612  03C0  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4613  03C1  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4614  03C2  0084               	movwf	fsr0
  4615  03C3  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4616  03C4  1383               	bcf	status, 7	;select IRP bank0
  4617  03C5  0080               	movwf	indf
  4618                           	line	437
  4619                           ;Dot Matrix.c: 437: num_alp_array[1] = 0x18;
  4620  03C6  3018               	movlw	(018h)
  4621  03C7  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4622  03C8  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4623  03C9  3E01               	addlw	01h
  4624  03CA  0084               	movwf	fsr0
  4625  03CB  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4626  03CC  0080               	movwf	indf
  4627                           	line	438
  4628                           ;Dot Matrix.c: 438: num_alp_array[2] = 0x18;
  4629  03CD  3018               	movlw	(018h)
  4630  03CE  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4631  03CF  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4632  03D0  3E02               	addlw	02h
  4633  03D1  0084               	movwf	fsr0
  4634  03D2  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4635  03D3  0080               	movwf	indf
  4636                           	line	439
  4637                           ;Dot Matrix.c: 439: num_alp_array[3] = 0x18;
  4638  03D4  3018               	movlw	(018h)
  4639  03D5  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4640  03D6  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4641  03D7  3E03               	addlw	03h
  4642  03D8  0084               	movwf	fsr0
  4643  03D9  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4644  03DA  0080               	movwf	indf
  4645                           	line	440
  4646                           ;Dot Matrix.c: 440: num_alp_array[4] = 0x18;
  4647  03DB  3018               	movlw	(018h)
  4648  03DC  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4649  03DD  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4650  03DE  3E04               	addlw	04h
  4651  03DF  0084               	movwf	fsr0
  4652  03E0  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4653  03E1  0080               	movwf	indf
  4654                           	line	441
  4655                           ;Dot Matrix.c: 441: num_alp_array[5] = 0x18;
  4656  03E2  3018               	movlw	(018h)
  4657  03E3  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4658  03E4  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4659  03E5  3E05               	addlw	05h
  4660  03E6  0084               	movwf	fsr0
  4661  03E7  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4662  03E8  0080               	movwf	indf
  4663                           	line	442
  4664                           ;Dot Matrix.c: 442: num_alp_array[6] = 0xff;
  4665  03E9  30FF               	movlw	(0FFh)
  4666  03EA  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4667  03EB  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4668  03EC  3E06               	addlw	06h
  4669  03ED  0084               	movwf	fsr0
  4670  03EE  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4671  03EF  0080               	movwf	indf
  4672                           	line	443
  4673                           ;Dot Matrix.c: 443: num_alp_array[7] = 0xff;
  4674  03F0  30FF               	movlw	(0FFh)
  4675  03F1  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4676  03F2  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4677  03F3  3E07               	addlw	07h
  4678  03F4  0084               	movwf	fsr0
  4679  03F5  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4680  03F6  0080               	movwf	indf
  4681                           	line	444
  4682                           ;Dot Matrix.c: 444: break;
  4683  03F7  2FFC               	goto	l1013
  4684                           	line	445
  4685                           ;Dot Matrix.c: 445: case 'U': num_alp_array[0] = 0x7e;
  4686                           	
  4687  03F8                     l996:	
  4688                           	
  4689  03F8                     l2764:	
  4690  03F8  307E               	movlw	(07Eh)
  4691  03F9  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4692  03FA  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4693  03FB  0084               	movwf	fsr0
  4694  03FC  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4695  03FD  1383               	bcf	status, 7	;select IRP bank0
  4696  03FE  0080               	movwf	indf
  4697                           	line	446
  4698                           ;Dot Matrix.c: 446: num_alp_array[1] = 0xff;
  4699  03FF  30FF               	movlw	(0FFh)
  4700  0400  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4701  0401  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4702  0402  3E01               	addlw	01h
  4703  0403  0084               	movwf	fsr0
  4704  0404  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4705  0405  0080               	movwf	indf
  4706                           	line	447
  4707                           ;Dot Matrix.c: 447: num_alp_array[2] = 0xc3;
  4708  0406  30C3               	movlw	(0C3h)
  4709  0407  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4710  0408  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4711  0409  3E02               	addlw	02h
  4712  040A  0084               	movwf	fsr0
  4713  040B  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4714  040C  0080               	movwf	indf
  4715                           	line	448
  4716                           ;Dot Matrix.c: 448: num_alp_array[3] = 0xc3;
  4717  040D  30C3               	movlw	(0C3h)
  4718  040E  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4719  040F  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4720  0410  3E03               	addlw	03h
  4721  0411  0084               	movwf	fsr0
  4722  0412  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4723  0413  0080               	movwf	indf
  4724                           	line	449
  4725                           ;Dot Matrix.c: 449: num_alp_array[4] = 0xc3;
  4726  0414  30C3               	movlw	(0C3h)
  4727  0415  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4728  0416  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4729  0417  3E04               	addlw	04h
  4730  0418  0084               	movwf	fsr0
  4731  0419  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4732  041A  0080               	movwf	indf
  4733                           	line	450
  4734                           ;Dot Matrix.c: 450: num_alp_array[5] = 0xc3;
  4735  041B  30C3               	movlw	(0C3h)
  4736  041C  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4737  041D  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4738  041E  3E05               	addlw	05h
  4739  041F  0084               	movwf	fsr0
  4740  0420  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4741  0421  0080               	movwf	indf
  4742                           	line	451
  4743                           ;Dot Matrix.c: 451: num_alp_array[6] = 0xc3;
  4744  0422  30C3               	movlw	(0C3h)
  4745  0423  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4746  0424  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4747  0425  3E06               	addlw	06h
  4748  0426  0084               	movwf	fsr0
  4749  0427  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4750  0428  0080               	movwf	indf
  4751                           	line	452
  4752                           ;Dot Matrix.c: 452: num_alp_array[7] = 0xc3;
  4753  0429  30C3               	movlw	(0C3h)
  4754  042A  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4755  042B  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4756  042C  3E07               	addlw	07h
  4757  042D  0084               	movwf	fsr0
  4758  042E  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4759  042F  0080               	movwf	indf
  4760                           	line	453
  4761                           ;Dot Matrix.c: 453: break;
  4762  0430  2FFC               	goto	l1013
  4763                           	line	455
  4764                           ;Dot Matrix.c: 455: case 'V': num_alp_array[0] = 0x18;
  4765                           	
  4766  0431                     l997:	
  4767                           	
  4768  0431                     l2766:	
  4769  0431  3018               	movlw	(018h)
  4770  0432  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4771  0433  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4772  0434  0084               	movwf	fsr0
  4773  0435  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4774  0436  1383               	bcf	status, 7	;select IRP bank0
  4775  0437  0080               	movwf	indf
  4776                           	line	456
  4777                           ;Dot Matrix.c: 456: num_alp_array[1] = 0x3c;
  4778  0438  303C               	movlw	(03Ch)
  4779  0439  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4780  043A  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4781  043B  3E01               	addlw	01h
  4782  043C  0084               	movwf	fsr0
  4783  043D  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4784  043E  0080               	movwf	indf
  4785                           	line	457
  4786                           ;Dot Matrix.c: 457: num_alp_array[2] = 0x66;
  4787  043F  3066               	movlw	(066h)
  4788  0440  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4789  0441  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4790  0442  3E02               	addlw	02h
  4791  0443  0084               	movwf	fsr0
  4792  0444  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4793  0445  0080               	movwf	indf
  4794                           	line	458
  4795                           ;Dot Matrix.c: 458: num_alp_array[3] = 0xe7;
  4796  0446  30E7               	movlw	(0E7h)
  4797  0447  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4798  0448  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4799  0449  3E03               	addlw	03h
  4800  044A  0084               	movwf	fsr0
  4801  044B  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4802  044C  0080               	movwf	indf
  4803                           	line	459
  4804                           ;Dot Matrix.c: 459: num_alp_array[4] = 0xc3;
  4805  044D  30C3               	movlw	(0C3h)
  4806  044E  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4807  044F  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4808  0450  3E04               	addlw	04h
  4809  0451  0084               	movwf	fsr0
  4810  0452  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4811  0453  0080               	movwf	indf
  4812                           	line	460
  4813                           ;Dot Matrix.c: 460: num_alp_array[5] = 0xc3;
  4814  0454  30C3               	movlw	(0C3h)
  4815  0455  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4816  0456  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4817  0457  3E05               	addlw	05h
  4818  0458  0084               	movwf	fsr0
  4819  0459  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4820  045A  0080               	movwf	indf
  4821                           	line	461
  4822                           ;Dot Matrix.c: 461: num_alp_array[6] = 0xc3;
  4823  045B  30C3               	movlw	(0C3h)
  4824  045C  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4825  045D  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4826  045E  3E06               	addlw	06h
  4827  045F  0084               	movwf	fsr0
  4828  0460  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4829  0461  0080               	movwf	indf
  4830                           	line	462
  4831                           ;Dot Matrix.c: 462: num_alp_array[7] = 0xc3;
  4832  0462  30C3               	movlw	(0C3h)
  4833  0463  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4834  0464  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4835  0465  3E07               	addlw	07h
  4836  0466  0084               	movwf	fsr0
  4837  0467  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4838  0468  0080               	movwf	indf
  4839                           	line	463
  4840                           ;Dot Matrix.c: 463: break;
  4841  0469  2FFC               	goto	l1013
  4842                           	line	465
  4843                           ;Dot Matrix.c: 465: case 'W': num_alp_array[0] = 0xc3;
  4844                           	
  4845  046A                     l998:	
  4846                           	
  4847  046A                     l2768:	
  4848  046A  30C3               	movlw	(0C3h)
  4849  046B  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4850  046C  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4851  046D  0084               	movwf	fsr0
  4852  046E  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4853  046F  1383               	bcf	status, 7	;select IRP bank0
  4854  0470  0080               	movwf	indf
  4855                           	line	466
  4856                           ;Dot Matrix.c: 466: num_alp_array[1] = 0xe7;
  4857  0471  30E7               	movlw	(0E7h)
  4858  0472  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4859  0473  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4860  0474  3E01               	addlw	01h
  4861  0475  0084               	movwf	fsr0
  4862  0476  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4863  0477  0080               	movwf	indf
  4864                           	line	467
  4865                           ;Dot Matrix.c: 467: num_alp_array[2] = 0xff;
  4866  0478  30FF               	movlw	(0FFh)
  4867  0479  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4868  047A  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4869  047B  3E02               	addlw	02h
  4870  047C  0084               	movwf	fsr0
  4871  047D  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4872  047E  0080               	movwf	indf
  4873                           	line	468
  4874                           ;Dot Matrix.c: 468: num_alp_array[3] = 0xdb;
  4875  047F  30DB               	movlw	(0DBh)
  4876  0480  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4877  0481  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4878  0482  3E03               	addlw	03h
  4879  0483  0084               	movwf	fsr0
  4880  0484  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4881  0485  0080               	movwf	indf
  4882                           	line	469
  4883                           ;Dot Matrix.c: 469: num_alp_array[4] = 0xc3;
  4884  0486  30C3               	movlw	(0C3h)
  4885  0487  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4886  0488  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4887  0489  3E04               	addlw	04h
  4888  048A  0084               	movwf	fsr0
  4889  048B  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4890  048C  0080               	movwf	indf
  4891                           	line	470
  4892                           ;Dot Matrix.c: 470: num_alp_array[5] = 0xc3;
  4893  048D  30C3               	movlw	(0C3h)
  4894  048E  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4895  048F  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4896  0490  3E05               	addlw	05h
  4897  0491  0084               	movwf	fsr0
  4898  0492  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4899  0493  0080               	movwf	indf
  4900                           	line	471
  4901                           ;Dot Matrix.c: 471: num_alp_array[6] = 0xc3;
  4902  0494  30C3               	movlw	(0C3h)
  4903  0495  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4904  0496  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4905  0497  3E06               	addlw	06h
  4906  0498  0084               	movwf	fsr0
  4907  0499  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4908  049A  0080               	movwf	indf
  4909                           	line	472
  4910                           ;Dot Matrix.c: 472: num_alp_array[7] = 0xc3;
  4911  049B  30C3               	movlw	(0C3h)
  4912  049C  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4913  049D  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4914  049E  3E07               	addlw	07h
  4915  049F  0084               	movwf	fsr0
  4916  04A0  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4917  04A1  0080               	movwf	indf
  4918                           	line	473
  4919                           ;Dot Matrix.c: 473: break;
  4920  04A2  2FFC               	goto	l1013
  4921                           	line	475
  4922                           ;Dot Matrix.c: 475: case 'X': num_alp_array[0] = 0xc3;
  4923                           	
  4924  04A3                     l999:	
  4925                           	
  4926  04A3                     l2770:	
  4927  04A3  30C3               	movlw	(0C3h)
  4928  04A4  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4929  04A5  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4930  04A6  0084               	movwf	fsr0
  4931  04A7  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4932  04A8  1383               	bcf	status, 7	;select IRP bank0
  4933  04A9  0080               	movwf	indf
  4934                           	line	476
  4935                           ;Dot Matrix.c: 476: num_alp_array[1] = 0xc3;
  4936  04AA  30C3               	movlw	(0C3h)
  4937  04AB  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4938  04AC  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4939  04AD  3E01               	addlw	01h
  4940  04AE  0084               	movwf	fsr0
  4941  04AF  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4942  04B0  0080               	movwf	indf
  4943                           	line	477
  4944                           ;Dot Matrix.c: 477: num_alp_array[2] = 0x66;
  4945  04B1  3066               	movlw	(066h)
  4946  04B2  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4947  04B3  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4948  04B4  3E02               	addlw	02h
  4949  04B5  0084               	movwf	fsr0
  4950  04B6  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4951  04B7  0080               	movwf	indf
  4952                           	line	478
  4953                           ;Dot Matrix.c: 478: num_alp_array[3] = 0x3c;
  4954  04B8  303C               	movlw	(03Ch)
  4955  04B9  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4956  04BA  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4957  04BB  3E03               	addlw	03h
  4958  04BC  0084               	movwf	fsr0
  4959  04BD  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4960  04BE  0080               	movwf	indf
  4961                           	line	479
  4962                           ;Dot Matrix.c: 479: num_alp_array[4] = 0x3c;
  4963  04BF  303C               	movlw	(03Ch)
  4964  04C0  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4965  04C1  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4966  04C2  3E04               	addlw	04h
  4967  04C3  0084               	movwf	fsr0
  4968  04C4  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4969  04C5  0080               	movwf	indf
  4970                           	line	480
  4971                           ;Dot Matrix.c: 480: num_alp_array[5] = 0x66;
  4972  04C6  3066               	movlw	(066h)
  4973  04C7  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4974  04C8  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4975  04C9  3E05               	addlw	05h
  4976  04CA  0084               	movwf	fsr0
  4977  04CB  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4978  04CC  0080               	movwf	indf
  4979                           	line	481
  4980                           ;Dot Matrix.c: 481: num_alp_array[6] = 0xc3;
  4981  04CD  30C3               	movlw	(0C3h)
  4982  04CE  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4983  04CF  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4984  04D0  3E06               	addlw	06h
  4985  04D1  0084               	movwf	fsr0
  4986  04D2  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4987  04D3  0080               	movwf	indf
  4988                           	line	482
  4989                           ;Dot Matrix.c: 482: num_alp_array[7] = 0xc3;
  4990  04D4  30C3               	movlw	(0C3h)
  4991  04D5  00F1               	movwf	(??_choose_num_alphabet+0)+0
  4992  04D6  0870               	movf	(choose_num_alphabet@num_alp_array),w
  4993  04D7  3E07               	addlw	07h
  4994  04D8  0084               	movwf	fsr0
  4995  04D9  0871               	movf	(??_choose_num_alphabet+0)+0,w
  4996  04DA  0080               	movwf	indf
  4997                           	line	483
  4998                           ;Dot Matrix.c: 483: break;
  4999  04DB  2FFC               	goto	l1013
  5000                           	line	485
  5001                           ;Dot Matrix.c: 485: case 'Y': num_alp_array[0] = 0x18;
  5002                           	
  5003  04DC                     l1000:	
  5004                           	
  5005  04DC                     l2772:	
  5006  04DC  3018               	movlw	(018h)
  5007  04DD  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5008  04DE  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5009  04DF  0084               	movwf	fsr0
  5010  04E0  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5011  04E1  1383               	bcf	status, 7	;select IRP bank0
  5012  04E2  0080               	movwf	indf
  5013                           	line	486
  5014                           ;Dot Matrix.c: 486: num_alp_array[1] = 0x18;
  5015  04E3  3018               	movlw	(018h)
  5016  04E4  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5017  04E5  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5018  04E6  3E01               	addlw	01h
  5019  04E7  0084               	movwf	fsr0
  5020  04E8  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5021  04E9  0080               	movwf	indf
  5022                           	line	487
  5023                           ;Dot Matrix.c: 487: num_alp_array[2] = 0x18;
  5024  04EA  3018               	movlw	(018h)
  5025  04EB  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5026  04EC  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5027  04ED  3E02               	addlw	02h
  5028  04EE  0084               	movwf	fsr0
  5029  04EF  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5030  04F0  0080               	movwf	indf
  5031                           	line	488
  5032                           ;Dot Matrix.c: 488: num_alp_array[3] = 0x18;
  5033  04F1  3018               	movlw	(018h)
  5034  04F2  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5035  04F3  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5036  04F4  3E03               	addlw	03h
  5037  04F5  0084               	movwf	fsr0
  5038  04F6  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5039  04F7  0080               	movwf	indf
  5040                           	line	489
  5041                           ;Dot Matrix.c: 489: num_alp_array[4] = 0x3c;
  5042  04F8  303C               	movlw	(03Ch)
  5043  04F9  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5044  04FA  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5045  04FB  3E04               	addlw	04h
  5046  04FC  0084               	movwf	fsr0
  5047  04FD  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5048  04FE  0080               	movwf	indf
  5049                           	line	490
  5050                           ;Dot Matrix.c: 490: num_alp_array[5] = 0x66;
  5051  04FF  3066               	movlw	(066h)
  5052  0500  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5053  0501  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5054  0502  3E05               	addlw	05h
  5055  0503  0084               	movwf	fsr0
  5056  0504  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5057  0505  0080               	movwf	indf
  5058                           	line	491
  5059                           ;Dot Matrix.c: 491: num_alp_array[6] = 0xc3;
  5060  0506  30C3               	movlw	(0C3h)
  5061  0507  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5062  0508  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5063  0509  3E06               	addlw	06h
  5064  050A  0084               	movwf	fsr0
  5065  050B  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5066  050C  0080               	movwf	indf
  5067                           	line	492
  5068                           ;Dot Matrix.c: 492: num_alp_array[7] = 0xc3;
  5069  050D  30C3               	movlw	(0C3h)
  5070  050E  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5071  050F  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5072  0510  3E07               	addlw	07h
  5073  0511  0084               	movwf	fsr0
  5074  0512  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5075  0513  0080               	movwf	indf
  5076                           	line	493
  5077                           ;Dot Matrix.c: 493: break;
  5078  0514  2FFC               	goto	l1013
  5079                           	line	494
  5080                           ;Dot Matrix.c: 494: case 'Z': num_alp_array[0] = 0xff;
  5081                           	
  5082  0515                     l1001:	
  5083                           	
  5084  0515                     l2774:	
  5085  0515  30FF               	movlw	(0FFh)
  5086  0516  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5087  0517  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5088  0518  0084               	movwf	fsr0
  5089  0519  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5090  051A  1383               	bcf	status, 7	;select IRP bank0
  5091  051B  0080               	movwf	indf
  5092                           	line	495
  5093                           ;Dot Matrix.c: 495: num_alp_array[1] = 0xff;
  5094  051C  30FF               	movlw	(0FFh)
  5095  051D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5096  051E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5097  051F  3E01               	addlw	01h
  5098  0520  0084               	movwf	fsr0
  5099  0521  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5100  0522  0080               	movwf	indf
  5101                           	line	496
  5102                           ;Dot Matrix.c: 496: num_alp_array[2] = 0x0e;
  5103  0523  300E               	movlw	(0Eh)
  5104  0524  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5105  0525  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5106  0526  3E02               	addlw	02h
  5107  0527  0084               	movwf	fsr0
  5108  0528  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5109  0529  0080               	movwf	indf
  5110                           	line	497
  5111                           ;Dot Matrix.c: 497: num_alp_array[3] = 0x1c;
  5112  052A  301C               	movlw	(01Ch)
  5113  052B  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5114  052C  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5115  052D  3E03               	addlw	03h
  5116  052E  0084               	movwf	fsr0
  5117  052F  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5118  0530  0080               	movwf	indf
  5119                           	line	498
  5120                           ;Dot Matrix.c: 498: num_alp_array[4] = 0x38;
  5121  0531  3038               	movlw	(038h)
  5122  0532  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5123  0533  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5124  0534  3E04               	addlw	04h
  5125  0535  0084               	movwf	fsr0
  5126  0536  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5127  0537  0080               	movwf	indf
  5128                           	line	499
  5129                           ;Dot Matrix.c: 499: num_alp_array[5] = 0x70;
  5130  0538  3070               	movlw	(070h)
  5131  0539  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5132  053A  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5133  053B  3E05               	addlw	05h
  5134  053C  0084               	movwf	fsr0
  5135  053D  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5136  053E  0080               	movwf	indf
  5137                           	line	500
  5138                           ;Dot Matrix.c: 500: num_alp_array[6] = 0xff;
  5139  053F  30FF               	movlw	(0FFh)
  5140  0540  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5141  0541  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5142  0542  3E06               	addlw	06h
  5143  0543  0084               	movwf	fsr0
  5144  0544  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5145  0545  0080               	movwf	indf
  5146                           	line	501
  5147                           ;Dot Matrix.c: 501: num_alp_array[7] = 0xff;
  5148  0546  30FF               	movlw	(0FFh)
  5149  0547  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5150  0548  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5151  0549  3E07               	addlw	07h
  5152  054A  0084               	movwf	fsr0
  5153  054B  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5154  054C  0080               	movwf	indf
  5155                           	line	502
  5156                           ;Dot Matrix.c: 502: break;
  5157  054D  2FFC               	goto	l1013
  5158                           	line	503
  5159                           ;Dot Matrix.c: 503: case '0': num_alp_array[0] = 0xff;
  5160                           	
  5161  054E                     l1002:	
  5162                           	
  5163  054E                     l2776:	
  5164  054E  30FF               	movlw	(0FFh)
  5165  054F  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5166  0550  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5167  0551  0084               	movwf	fsr0
  5168  0552  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5169  0553  1383               	bcf	status, 7	;select IRP bank0
  5170  0554  0080               	movwf	indf
  5171                           	line	504
  5172                           ;Dot Matrix.c: 504: num_alp_array[1] = 0xff;
  5173  0555  30FF               	movlw	(0FFh)
  5174  0556  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5175  0557  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5176  0558  3E01               	addlw	01h
  5177  0559  0084               	movwf	fsr0
  5178  055A  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5179  055B  0080               	movwf	indf
  5180                           	line	505
  5181                           ;Dot Matrix.c: 505: num_alp_array[2] = 0xc3;
  5182  055C  30C3               	movlw	(0C3h)
  5183  055D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5184  055E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5185  055F  3E02               	addlw	02h
  5186  0560  0084               	movwf	fsr0
  5187  0561  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5188  0562  0080               	movwf	indf
  5189                           	line	506
  5190                           ;Dot Matrix.c: 506: num_alp_array[3] = 0xc3;
  5191  0563  30C3               	movlw	(0C3h)
  5192  0564  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5193  0565  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5194  0566  3E03               	addlw	03h
  5195  0567  0084               	movwf	fsr0
  5196  0568  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5197  0569  0080               	movwf	indf
  5198                           	line	507
  5199                           ;Dot Matrix.c: 507: num_alp_array[4] = 0xc3;
  5200  056A  30C3               	movlw	(0C3h)
  5201  056B  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5202  056C  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5203  056D  3E04               	addlw	04h
  5204  056E  0084               	movwf	fsr0
  5205  056F  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5206  0570  0080               	movwf	indf
  5207                           	line	508
  5208                           ;Dot Matrix.c: 508: num_alp_array[5] = 0xc3;
  5209  0571  30C3               	movlw	(0C3h)
  5210  0572  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5211  0573  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5212  0574  3E05               	addlw	05h
  5213  0575  0084               	movwf	fsr0
  5214  0576  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5215  0577  0080               	movwf	indf
  5216                           	line	509
  5217                           ;Dot Matrix.c: 509: num_alp_array[6] = 0xff;
  5218  0578  30FF               	movlw	(0FFh)
  5219  0579  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5220  057A  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5221  057B  3E06               	addlw	06h
  5222  057C  0084               	movwf	fsr0
  5223  057D  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5224  057E  0080               	movwf	indf
  5225                           	line	510
  5226                           ;Dot Matrix.c: 510: num_alp_array[7] = 0xff;
  5227  057F  30FF               	movlw	(0FFh)
  5228  0580  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5229  0581  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5230  0582  3E07               	addlw	07h
  5231  0583  0084               	movwf	fsr0
  5232  0584  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5233  0585  0080               	movwf	indf
  5234                           	line	511
  5235                           ;Dot Matrix.c: 511: break;
  5236  0586  2FFC               	goto	l1013
  5237                           	line	512
  5238                           ;Dot Matrix.c: 512: case '1': num_alp_array[0] = 0x18;
  5239                           	
  5240  0587                     l1003:	
  5241                           	
  5242  0587                     l2778:	
  5243  0587  3018               	movlw	(018h)
  5244  0588  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5245  0589  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5246  058A  0084               	movwf	fsr0
  5247  058B  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5248  058C  1383               	bcf	status, 7	;select IRP bank0
  5249  058D  0080               	movwf	indf
  5250                           	line	513
  5251                           ;Dot Matrix.c: 513: num_alp_array[1] = 0x18;
  5252  058E  3018               	movlw	(018h)
  5253  058F  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5254  0590  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5255  0591  3E01               	addlw	01h
  5256  0592  0084               	movwf	fsr0
  5257  0593  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5258  0594  0080               	movwf	indf
  5259                           	line	514
  5260                           ;Dot Matrix.c: 514: num_alp_array[2] = 0x18;
  5261  0595  3018               	movlw	(018h)
  5262  0596  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5263  0597  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5264  0598  3E02               	addlw	02h
  5265  0599  0084               	movwf	fsr0
  5266  059A  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5267  059B  0080               	movwf	indf
  5268                           	line	515
  5269                           ;Dot Matrix.c: 515: num_alp_array[3] = 0x18;
  5270  059C  3018               	movlw	(018h)
  5271  059D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5272  059E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5273  059F  3E03               	addlw	03h
  5274  05A0  0084               	movwf	fsr0
  5275  05A1  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5276  05A2  0080               	movwf	indf
  5277                           	line	516
  5278                           ;Dot Matrix.c: 516: num_alp_array[4] = 0x18;
  5279  05A3  3018               	movlw	(018h)
  5280  05A4  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5281  05A5  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5282  05A6  3E04               	addlw	04h
  5283  05A7  0084               	movwf	fsr0
  5284  05A8  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5285  05A9  0080               	movwf	indf
  5286                           	line	517
  5287                           ;Dot Matrix.c: 517: num_alp_array[5] = 0x18;
  5288  05AA  3018               	movlw	(018h)
  5289  05AB  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5290  05AC  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5291  05AD  3E05               	addlw	05h
  5292  05AE  0084               	movwf	fsr0
  5293  05AF  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5294  05B0  0080               	movwf	indf
  5295                           	line	518
  5296                           ;Dot Matrix.c: 518: num_alp_array[6] = 0x18;
  5297  05B1  3018               	movlw	(018h)
  5298  05B2  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5299  05B3  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5300  05B4  3E06               	addlw	06h
  5301  05B5  0084               	movwf	fsr0
  5302  05B6  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5303  05B7  0080               	movwf	indf
  5304                           	line	519
  5305                           ;Dot Matrix.c: 519: num_alp_array[7] = 0x18;
  5306  05B8  3018               	movlw	(018h)
  5307  05B9  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5308  05BA  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5309  05BB  3E07               	addlw	07h
  5310  05BC  0084               	movwf	fsr0
  5311  05BD  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5312  05BE  0080               	movwf	indf
  5313                           	line	520
  5314                           ;Dot Matrix.c: 520: break;
  5315  05BF  2FFC               	goto	l1013
  5316                           	line	521
  5317                           ;Dot Matrix.c: 521: case '2': num_alp_array[0] = 0xff;
  5318                           	
  5319  05C0                     l1004:	
  5320                           	
  5321  05C0                     l2780:	
  5322  05C0  30FF               	movlw	(0FFh)
  5323  05C1  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5324  05C2  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5325  05C3  0084               	movwf	fsr0
  5326  05C4  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5327  05C5  1383               	bcf	status, 7	;select IRP bank0
  5328  05C6  0080               	movwf	indf
  5329                           	line	522
  5330                           ;Dot Matrix.c: 522: num_alp_array[1] = 0xff;
  5331  05C7  30FF               	movlw	(0FFh)
  5332  05C8  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5333  05C9  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5334  05CA  3E01               	addlw	01h
  5335  05CB  0084               	movwf	fsr0
  5336  05CC  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5337  05CD  0080               	movwf	indf
  5338                           	line	523
  5339                           ;Dot Matrix.c: 523: num_alp_array[2] = 0x03;
  5340  05CE  3003               	movlw	(03h)
  5341  05CF  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5342  05D0  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5343  05D1  3E02               	addlw	02h
  5344  05D2  0084               	movwf	fsr0
  5345  05D3  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5346  05D4  0080               	movwf	indf
  5347                           	line	524
  5348                           ;Dot Matrix.c: 524: num_alp_array[3] = 0xff;
  5349  05D5  30FF               	movlw	(0FFh)
  5350  05D6  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5351  05D7  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5352  05D8  3E03               	addlw	03h
  5353  05D9  0084               	movwf	fsr0
  5354  05DA  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5355  05DB  0080               	movwf	indf
  5356                           	line	525
  5357                           ;Dot Matrix.c: 525: num_alp_array[4] = 0xff;
  5358  05DC  30FF               	movlw	(0FFh)
  5359  05DD  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5360  05DE  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5361  05DF  3E04               	addlw	04h
  5362  05E0  0084               	movwf	fsr0
  5363  05E1  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5364  05E2  0080               	movwf	indf
  5365                           	line	526
  5366                           ;Dot Matrix.c: 526: num_alp_array[5] = 0xc0;
  5367  05E3  30C0               	movlw	(0C0h)
  5368  05E4  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5369  05E5  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5370  05E6  3E05               	addlw	05h
  5371  05E7  0084               	movwf	fsr0
  5372  05E8  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5373  05E9  0080               	movwf	indf
  5374                           	line	527
  5375                           ;Dot Matrix.c: 527: num_alp_array[6] = 0xff;
  5376  05EA  30FF               	movlw	(0FFh)
  5377  05EB  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5378  05EC  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5379  05ED  3E06               	addlw	06h
  5380  05EE  0084               	movwf	fsr0
  5381  05EF  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5382  05F0  0080               	movwf	indf
  5383                           	line	528
  5384                           ;Dot Matrix.c: 528: num_alp_array[7] = 0xff;
  5385  05F1  30FF               	movlw	(0FFh)
  5386  05F2  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5387  05F3  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5388  05F4  3E07               	addlw	07h
  5389  05F5  0084               	movwf	fsr0
  5390  05F6  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5391  05F7  0080               	movwf	indf
  5392                           	line	529
  5393                           ;Dot Matrix.c: 529: break;
  5394  05F8  2FFC               	goto	l1013
  5395                           	line	530
  5396                           ;Dot Matrix.c: 530: case '3': num_alp_array[0] = 0xff;
  5397                           	
  5398  05F9                     l1005:	
  5399                           	
  5400  05F9                     l2782:	
  5401  05F9  30FF               	movlw	(0FFh)
  5402  05FA  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5403  05FB  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5404  05FC  0084               	movwf	fsr0
  5405  05FD  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5406  05FE  1383               	bcf	status, 7	;select IRP bank0
  5407  05FF  0080               	movwf	indf
  5408                           	line	531
  5409                           ;Dot Matrix.c: 531: num_alp_array[1] = 0xff;
  5410  0600  30FF               	movlw	(0FFh)
  5411  0601  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5412  0602  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5413  0603  3E01               	addlw	01h
  5414  0604  0084               	movwf	fsr0
  5415  0605  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5416  0606  0080               	movwf	indf
  5417                           	line	532
  5418                           ;Dot Matrix.c: 532: num_alp_array[2] = 0xc0;
  5419  0607  30C0               	movlw	(0C0h)
  5420  0608  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5421  0609  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5422  060A  3E02               	addlw	02h
  5423  060B  0084               	movwf	fsr0
  5424  060C  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5425  060D  0080               	movwf	indf
  5426                           	line	533
  5427                           ;Dot Matrix.c: 533: num_alp_array[3] = 0xff;
  5428  060E  30FF               	movlw	(0FFh)
  5429  060F  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5430  0610  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5431  0611  3E03               	addlw	03h
  5432  0612  0084               	movwf	fsr0
  5433  0613  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5434  0614  0080               	movwf	indf
  5435                           	line	534
  5436                           ;Dot Matrix.c: 534: num_alp_array[4] = 0xff;
  5437  0615  30FF               	movlw	(0FFh)
  5438  0616  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5439  0617  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5440  0618  3E04               	addlw	04h
  5441  0619  0084               	movwf	fsr0
  5442  061A  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5443  061B  0080               	movwf	indf
  5444                           	line	535
  5445                           ;Dot Matrix.c: 535: num_alp_array[5] = 0xc0;
  5446  061C  30C0               	movlw	(0C0h)
  5447  061D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5448  061E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5449  061F  3E05               	addlw	05h
  5450  0620  0084               	movwf	fsr0
  5451  0621  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5452  0622  0080               	movwf	indf
  5453                           	line	536
  5454                           ;Dot Matrix.c: 536: num_alp_array[6] = 0xff;
  5455  0623  30FF               	movlw	(0FFh)
  5456  0624  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5457  0625  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5458  0626  3E06               	addlw	06h
  5459  0627  0084               	movwf	fsr0
  5460  0628  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5461  0629  0080               	movwf	indf
  5462                           	line	537
  5463                           ;Dot Matrix.c: 537: num_alp_array[7] = 0xff;
  5464  062A  30FF               	movlw	(0FFh)
  5465  062B  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5466  062C  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5467  062D  3E07               	addlw	07h
  5468  062E  0084               	movwf	fsr0
  5469  062F  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5470  0630  0080               	movwf	indf
  5471                           	line	538
  5472                           ;Dot Matrix.c: 538: break;
  5473  0631  2FFC               	goto	l1013
  5474                           	line	539
  5475                           ;Dot Matrix.c: 539: case '4': num_alp_array[0] = 0xc0;
  5476                           	
  5477  0632                     l1006:	
  5478                           	
  5479  0632                     l2784:	
  5480  0632  30C0               	movlw	(0C0h)
  5481  0633  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5482  0634  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5483  0635  0084               	movwf	fsr0
  5484  0636  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5485  0637  1383               	bcf	status, 7	;select IRP bank0
  5486  0638  0080               	movwf	indf
  5487                           	line	540
  5488                           ;Dot Matrix.c: 540: num_alp_array[1] = 0xc0;
  5489  0639  30C0               	movlw	(0C0h)
  5490  063A  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5491  063B  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5492  063C  3E01               	addlw	01h
  5493  063D  0084               	movwf	fsr0
  5494  063E  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5495  063F  0080               	movwf	indf
  5496                           	line	541
  5497                           ;Dot Matrix.c: 541: num_alp_array[2] = 0xc0;
  5498  0640  30C0               	movlw	(0C0h)
  5499  0641  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5500  0642  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5501  0643  3E02               	addlw	02h
  5502  0644  0084               	movwf	fsr0
  5503  0645  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5504  0646  0080               	movwf	indf
  5505                           	line	542
  5506                           ;Dot Matrix.c: 542: num_alp_array[3] = 0xff;
  5507  0647  30FF               	movlw	(0FFh)
  5508  0648  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5509  0649  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5510  064A  3E03               	addlw	03h
  5511  064B  0084               	movwf	fsr0
  5512  064C  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5513  064D  0080               	movwf	indf
  5514                           	line	543
  5515                           ;Dot Matrix.c: 543: num_alp_array[4] = 0xff;
  5516  064E  30FF               	movlw	(0FFh)
  5517  064F  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5518  0650  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5519  0651  3E04               	addlw	04h
  5520  0652  0084               	movwf	fsr0
  5521  0653  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5522  0654  0080               	movwf	indf
  5523                           	line	544
  5524                           ;Dot Matrix.c: 544: num_alp_array[5] = 0xc3;
  5525  0655  30C3               	movlw	(0C3h)
  5526  0656  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5527  0657  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5528  0658  3E05               	addlw	05h
  5529  0659  0084               	movwf	fsr0
  5530  065A  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5531  065B  0080               	movwf	indf
  5532                           	line	545
  5533                           ;Dot Matrix.c: 545: num_alp_array[6] = 0xc3;
  5534  065C  30C3               	movlw	(0C3h)
  5535  065D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5536  065E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5537  065F  3E06               	addlw	06h
  5538  0660  0084               	movwf	fsr0
  5539  0661  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5540  0662  0080               	movwf	indf
  5541                           	line	546
  5542                           ;Dot Matrix.c: 546: num_alp_array[7] = 0xc3;
  5543  0663  30C3               	movlw	(0C3h)
  5544  0664  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5545  0665  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5546  0666  3E07               	addlw	07h
  5547  0667  0084               	movwf	fsr0
  5548  0668  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5549  0669  0080               	movwf	indf
  5550                           	line	547
  5551                           ;Dot Matrix.c: 547: break;
  5552  066A  2FFC               	goto	l1013
  5553                           	line	548
  5554                           ;Dot Matrix.c: 548: case '5': num_alp_array[0] = 0xff;
  5555                           	
  5556  066B                     l1007:	
  5557                           	
  5558  066B                     l2786:	
  5559  066B  30FF               	movlw	(0FFh)
  5560  066C  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5561  066D  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5562  066E  0084               	movwf	fsr0
  5563  066F  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5564  0670  1383               	bcf	status, 7	;select IRP bank0
  5565  0671  0080               	movwf	indf
  5566                           	line	549
  5567                           ;Dot Matrix.c: 549: num_alp_array[1] = 0xff;
  5568  0672  30FF               	movlw	(0FFh)
  5569  0673  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5570  0674  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5571  0675  3E01               	addlw	01h
  5572  0676  0084               	movwf	fsr0
  5573  0677  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5574  0678  0080               	movwf	indf
  5575                           	line	550
  5576                           ;Dot Matrix.c: 550: num_alp_array[2] = 0xc0;
  5577  0679  30C0               	movlw	(0C0h)
  5578  067A  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5579  067B  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5580  067C  3E02               	addlw	02h
  5581  067D  0084               	movwf	fsr0
  5582  067E  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5583  067F  0080               	movwf	indf
  5584                           	line	551
  5585                           ;Dot Matrix.c: 551: num_alp_array[3] = 0xff;
  5586  0680  30FF               	movlw	(0FFh)
  5587  0681  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5588  0682  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5589  0683  3E03               	addlw	03h
  5590  0684  0084               	movwf	fsr0
  5591  0685  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5592  0686  0080               	movwf	indf
  5593                           	line	552
  5594                           ;Dot Matrix.c: 552: num_alp_array[4] = 0xff;
  5595  0687  30FF               	movlw	(0FFh)
  5596  0688  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5597  0689  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5598  068A  3E04               	addlw	04h
  5599  068B  0084               	movwf	fsr0
  5600  068C  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5601  068D  0080               	movwf	indf
  5602                           	line	553
  5603                           ;Dot Matrix.c: 553: num_alp_array[5] = 0x03;
  5604  068E  3003               	movlw	(03h)
  5605  068F  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5606  0690  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5607  0691  3E05               	addlw	05h
  5608  0692  0084               	movwf	fsr0
  5609  0693  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5610  0694  0080               	movwf	indf
  5611                           	line	554
  5612                           ;Dot Matrix.c: 554: num_alp_array[6] = 0xff;
  5613  0695  30FF               	movlw	(0FFh)
  5614  0696  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5615  0697  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5616  0698  3E06               	addlw	06h
  5617  0699  0084               	movwf	fsr0
  5618  069A  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5619  069B  0080               	movwf	indf
  5620                           	line	555
  5621                           ;Dot Matrix.c: 555: num_alp_array[7] = 0xff;
  5622  069C  30FF               	movlw	(0FFh)
  5623  069D  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5624  069E  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5625  069F  3E07               	addlw	07h
  5626  06A0  0084               	movwf	fsr0
  5627  06A1  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5628  06A2  0080               	movwf	indf
  5629                           	line	556
  5630                           ;Dot Matrix.c: 556: break;
  5631  06A3  2FFC               	goto	l1013
  5632                           	line	557
  5633                           ;Dot Matrix.c: 557: case '6': num_alp_array[0] = 0xff;
  5634                           	
  5635  06A4                     l1008:	
  5636                           	
  5637  06A4                     l2788:	
  5638  06A4  30FF               	movlw	(0FFh)
  5639  06A5  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5640  06A6  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5641  06A7  0084               	movwf	fsr0
  5642  06A8  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5643  06A9  1383               	bcf	status, 7	;select IRP bank0
  5644  06AA  0080               	movwf	indf
  5645                           	line	558
  5646                           ;Dot Matrix.c: 558: num_alp_array[1] = 0xff;
  5647  06AB  30FF               	movlw	(0FFh)
  5648  06AC  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5649  06AD  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5650  06AE  3E01               	addlw	01h
  5651  06AF  0084               	movwf	fsr0
  5652  06B0  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5653  06B1  0080               	movwf	indf
  5654                           	line	559
  5655                           ;Dot Matrix.c: 559: num_alp_array[2] = 0xc3;
  5656  06B2  30C3               	movlw	(0C3h)
  5657  06B3  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5658  06B4  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5659  06B5  3E02               	addlw	02h
  5660  06B6  0084               	movwf	fsr0
  5661  06B7  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5662  06B8  0080               	movwf	indf
  5663                           	line	560
  5664                           ;Dot Matrix.c: 560: num_alp_array[3] = 0xff;
  5665  06B9  30FF               	movlw	(0FFh)
  5666  06BA  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5667  06BB  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5668  06BC  3E03               	addlw	03h
  5669  06BD  0084               	movwf	fsr0
  5670  06BE  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5671  06BF  0080               	movwf	indf
  5672                           	line	561
  5673                           ;Dot Matrix.c: 561: num_alp_array[4] = 0xff;
  5674  06C0  30FF               	movlw	(0FFh)
  5675  06C1  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5676  06C2  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5677  06C3  3E04               	addlw	04h
  5678  06C4  0084               	movwf	fsr0
  5679  06C5  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5680  06C6  0080               	movwf	indf
  5681                           	line	562
  5682                           ;Dot Matrix.c: 562: num_alp_array[5] = 0x03;
  5683  06C7  3003               	movlw	(03h)
  5684  06C8  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5685  06C9  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5686  06CA  3E05               	addlw	05h
  5687  06CB  0084               	movwf	fsr0
  5688  06CC  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5689  06CD  0080               	movwf	indf
  5690                           	line	563
  5691                           ;Dot Matrix.c: 563: num_alp_array[6] = 0xff;
  5692  06CE  30FF               	movlw	(0FFh)
  5693  06CF  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5694  06D0  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5695  06D1  3E06               	addlw	06h
  5696  06D2  0084               	movwf	fsr0
  5697  06D3  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5698  06D4  0080               	movwf	indf
  5699                           	line	564
  5700                           ;Dot Matrix.c: 564: num_alp_array[7] = 0xff;
  5701  06D5  30FF               	movlw	(0FFh)
  5702  06D6  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5703  06D7  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5704  06D8  3E07               	addlw	07h
  5705  06D9  0084               	movwf	fsr0
  5706  06DA  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5707  06DB  0080               	movwf	indf
  5708                           	line	565
  5709                           ;Dot Matrix.c: 565: break;
  5710  06DC  2FFC               	goto	l1013
  5711                           	line	566
  5712                           ;Dot Matrix.c: 566: case '7': num_alp_array[0] = 0xc0;
  5713                           	
  5714  06DD                     l1009:	
  5715                           	
  5716  06DD                     l2790:	
  5717  06DD  30C0               	movlw	(0C0h)
  5718  06DE  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5719  06DF  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5720  06E0  0084               	movwf	fsr0
  5721  06E1  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5722  06E2  1383               	bcf	status, 7	;select IRP bank0
  5723  06E3  0080               	movwf	indf
  5724                           	line	567
  5725                           ;Dot Matrix.c: 567: num_alp_array[1] = 0xc0;
  5726  06E4  30C0               	movlw	(0C0h)
  5727  06E5  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5728  06E6  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5729  06E7  3E01               	addlw	01h
  5730  06E8  0084               	movwf	fsr0
  5731  06E9  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5732  06EA  0080               	movwf	indf
  5733                           	line	568
  5734                           ;Dot Matrix.c: 568: num_alp_array[2] = 0xc0;
  5735  06EB  30C0               	movlw	(0C0h)
  5736  06EC  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5737  06ED  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5738  06EE  3E02               	addlw	02h
  5739  06EF  0084               	movwf	fsr0
  5740  06F0  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5741  06F1  0080               	movwf	indf
  5742                           	line	569
  5743                           ;Dot Matrix.c: 569: num_alp_array[3] = 0xc0;
  5744  06F2  30C0               	movlw	(0C0h)
  5745  06F3  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5746  06F4  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5747  06F5  3E03               	addlw	03h
  5748  06F6  0084               	movwf	fsr0
  5749  06F7  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5750  06F8  0080               	movwf	indf
  5751                           	line	570
  5752                           ;Dot Matrix.c: 570: num_alp_array[4] = 0xc0;
  5753  06F9  30C0               	movlw	(0C0h)
  5754  06FA  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5755  06FB  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5756  06FC  3E04               	addlw	04h
  5757  06FD  0084               	movwf	fsr0
  5758  06FE  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5759  06FF  0080               	movwf	indf
  5760                           	line	571
  5761                           ;Dot Matrix.c: 571: num_alp_array[5] = 0xc0;
  5762  0700  30C0               	movlw	(0C0h)
  5763  0701  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5764  0702  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5765  0703  3E05               	addlw	05h
  5766  0704  0084               	movwf	fsr0
  5767  0705  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5768  0706  0080               	movwf	indf
  5769                           	line	572
  5770                           ;Dot Matrix.c: 572: num_alp_array[6] = 0xff;
  5771  0707  30FF               	movlw	(0FFh)
  5772  0708  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5773  0709  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5774  070A  3E06               	addlw	06h
  5775  070B  0084               	movwf	fsr0
  5776  070C  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5777  070D  0080               	movwf	indf
  5778                           	line	573
  5779                           ;Dot Matrix.c: 573: num_alp_array[7] = 0xff;
  5780  070E  30FF               	movlw	(0FFh)
  5781  070F  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5782  0710  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5783  0711  3E07               	addlw	07h
  5784  0712  0084               	movwf	fsr0
  5785  0713  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5786  0714  0080               	movwf	indf
  5787                           	line	574
  5788                           ;Dot Matrix.c: 574: break;
  5789  0715  2FFC               	goto	l1013
  5790                           	line	575
  5791                           ;Dot Matrix.c: 575: case '8': num_alp_array[0] = 0xff;
  5792                           	
  5793  0716                     l1010:	
  5794                           	
  5795  0716                     l2792:	
  5796  0716  30FF               	movlw	(0FFh)
  5797  0717  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5798  0718  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5799  0719  0084               	movwf	fsr0
  5800  071A  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5801  071B  1383               	bcf	status, 7	;select IRP bank0
  5802  071C  0080               	movwf	indf
  5803                           	line	576
  5804                           ;Dot Matrix.c: 576: num_alp_array[1] = 0xff;
  5805  071D  30FF               	movlw	(0FFh)
  5806  071E  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5807  071F  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5808  0720  3E01               	addlw	01h
  5809  0721  0084               	movwf	fsr0
  5810  0722  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5811  0723  0080               	movwf	indf
  5812                           	line	577
  5813                           ;Dot Matrix.c: 577: num_alp_array[2] = 0xc3;
  5814  0724  30C3               	movlw	(0C3h)
  5815  0725  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5816  0726  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5817  0727  3E02               	addlw	02h
  5818  0728  0084               	movwf	fsr0
  5819  0729  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5820  072A  0080               	movwf	indf
  5821                           	line	578
  5822                           ;Dot Matrix.c: 578: num_alp_array[3] = 0xff;
  5823  072B  30FF               	movlw	(0FFh)
  5824  072C  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5825  072D  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5826  072E  3E03               	addlw	03h
  5827  072F  0084               	movwf	fsr0
  5828  0730  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5829  0731  0080               	movwf	indf
  5830                           	line	579
  5831                           ;Dot Matrix.c: 579: num_alp_array[4] = 0xff;
  5832  0732  30FF               	movlw	(0FFh)
  5833  0733  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5834  0734  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5835  0735  3E04               	addlw	04h
  5836  0736  0084               	movwf	fsr0
  5837  0737  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5838  0738  0080               	movwf	indf
  5839                           	line	580
  5840                           ;Dot Matrix.c: 580: num_alp_array[5] = 0xc3;
  5841  0739  30C3               	movlw	(0C3h)
  5842  073A  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5843  073B  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5844  073C  3E05               	addlw	05h
  5845  073D  0084               	movwf	fsr0
  5846  073E  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5847  073F  0080               	movwf	indf
  5848                           	line	581
  5849                           ;Dot Matrix.c: 581: num_alp_array[6] = 0xff;
  5850  0740  30FF               	movlw	(0FFh)
  5851  0741  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5852  0742  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5853  0743  3E06               	addlw	06h
  5854  0744  0084               	movwf	fsr0
  5855  0745  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5856  0746  0080               	movwf	indf
  5857                           	line	582
  5858                           ;Dot Matrix.c: 582: num_alp_array[7] = 0xff;
  5859  0747  30FF               	movlw	(0FFh)
  5860  0748  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5861  0749  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5862  074A  3E07               	addlw	07h
  5863  074B  0084               	movwf	fsr0
  5864  074C  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5865  074D  0080               	movwf	indf
  5866                           	line	583
  5867                           ;Dot Matrix.c: 583: break;
  5868  074E  2FFC               	goto	l1013
  5869                           	line	584
  5870                           ;Dot Matrix.c: 584: case '9': num_alp_array[0] = 0xc0;
  5871                           	
  5872  074F                     l1011:	
  5873                           	
  5874  074F                     l2794:	
  5875  074F  30C0               	movlw	(0C0h)
  5876  0750  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5877  0751  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5878  0752  0084               	movwf	fsr0
  5879  0753  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5880  0754  1383               	bcf	status, 7	;select IRP bank0
  5881  0755  0080               	movwf	indf
  5882                           	line	585
  5883                           ;Dot Matrix.c: 585: num_alp_array[1] = 0xc0;
  5884  0756  30C0               	movlw	(0C0h)
  5885  0757  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5886  0758  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5887  0759  3E01               	addlw	01h
  5888  075A  0084               	movwf	fsr0
  5889  075B  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5890  075C  0080               	movwf	indf
  5891                           	line	586
  5892                           ;Dot Matrix.c: 586: num_alp_array[2] = 0xc0;
  5893  075D  30C0               	movlw	(0C0h)
  5894  075E  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5895  075F  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5896  0760  3E02               	addlw	02h
  5897  0761  0084               	movwf	fsr0
  5898  0762  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5899  0763  0080               	movwf	indf
  5900                           	line	587
  5901                           ;Dot Matrix.c: 587: num_alp_array[3] = 0xff;
  5902  0764  30FF               	movlw	(0FFh)
  5903  0765  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5904  0766  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5905  0767  3E03               	addlw	03h
  5906  0768  0084               	movwf	fsr0
  5907  0769  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5908  076A  0080               	movwf	indf
  5909                           	line	588
  5910                           ;Dot Matrix.c: 588: num_alp_array[4] = 0xff;
  5911  076B  30FF               	movlw	(0FFh)
  5912  076C  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5913  076D  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5914  076E  3E04               	addlw	04h
  5915  076F  0084               	movwf	fsr0
  5916  0770  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5917  0771  0080               	movwf	indf
  5918                           	line	589
  5919                           ;Dot Matrix.c: 589: num_alp_array[5] = 0xc3;
  5920  0772  30C3               	movlw	(0C3h)
  5921  0773  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5922  0774  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5923  0775  3E05               	addlw	05h
  5924  0776  0084               	movwf	fsr0
  5925  0777  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5926  0778  0080               	movwf	indf
  5927                           	line	590
  5928                           ;Dot Matrix.c: 590: num_alp_array[6] = 0xff;
  5929  0779  30FF               	movlw	(0FFh)
  5930  077A  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5931  077B  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5932  077C  3E06               	addlw	06h
  5933  077D  0084               	movwf	fsr0
  5934  077E  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5935  077F  0080               	movwf	indf
  5936                           	line	591
  5937                           ;Dot Matrix.c: 591: num_alp_array[7] = 0xff;
  5938  0780  30FF               	movlw	(0FFh)
  5939  0781  00F1               	movwf	(??_choose_num_alphabet+0)+0
  5940  0782  0870               	movf	(choose_num_alphabet@num_alp_array),w
  5941  0783  3E07               	addlw	07h
  5942  0784  0084               	movwf	fsr0
  5943  0785  0871               	movf	(??_choose_num_alphabet+0)+0,w
  5944  0786  0080               	movwf	indf
  5945                           	line	592
  5946                           ;Dot Matrix.c: 592: break;
  5947  0787  2FFC               	goto	l1013
  5948                           	line	593
  5949                           ;Dot Matrix.c: 593: default:break;
  5950                           	
  5951  0788                     l1012:	
  5952  0788  2FFC               	goto	l1013
  5953                           	line	594
  5954                           	
  5955  0789                     l2796:	
  5956                           ;Dot Matrix.c: 594: }
  5957  0789  2FFC               	goto	l1013
  5958                           	line	248
  5959                           	
  5960  078A                     l974:	
  5961                           	
  5962  078A                     l2798:	
  5963  078A  0872               	movf	(choose_num_alphabet@num_alp),w
  5964                           	; Switch size 1, requested type "space"
  5965                           ; Number of cases is 36, Range of values is 48 to 90
  5966                           ; switch strategies available:
  5967                           ; Name         Bytes Cycles
  5968                           ; simple_byte   109    55 (average)
  5969                           ; direct_byte   151    22 (fixed)
  5970                           ;	Chosen strategy is simple_byte
  5971                           
  5972  078B  3A30               	xorlw	48^0	; case 48
  5973  078C  1903               	skipnz
  5974  078D  2D4E               	goto	l2776
  5975  078E  3A01               	xorlw	49^48	; case 49
  5976  078F  1903               	skipnz
  5977  0790  2D87               	goto	l2778
  5978  0791  3A03               	xorlw	50^49	; case 50
  5979  0792  1903               	skipnz
  5980  0793  2DC0               	goto	l2780
  5981  0794  3A01               	xorlw	51^50	; case 51
  5982  0795  1903               	skipnz
  5983  0796  2DF9               	goto	l2782
  5984  0797  3A07               	xorlw	52^51	; case 52
  5985  0798  1903               	skipnz
  5986  0799  2E32               	goto	l2784
  5987  079A  3A01               	xorlw	53^52	; case 53
  5988  079B  1903               	skipnz
  5989  079C  2E6B               	goto	l2786
  5990  079D  3A03               	xorlw	54^53	; case 54
  5991  079E  1903               	skipnz
  5992  079F  2EA4               	goto	l2788
  5993  07A0  3A01               	xorlw	55^54	; case 55
  5994  07A1  1903               	skipnz
  5995  07A2  2EDD               	goto	l2790
  5996  07A3  3A0F               	xorlw	56^55	; case 56
  5997  07A4  1903               	skipnz
  5998  07A5  2F16               	goto	l2792
  5999  07A6  3A01               	xorlw	57^56	; case 57
  6000  07A7  1903               	skipnz
  6001  07A8  2F4F               	goto	l2794
  6002  07A9  3A78               	xorlw	65^57	; case 65
  6003  07AA  120A  158A  1903   	skipnz
  6004  07AD  2EE1               	goto	l2710
  6005  07AE  3A03               	xorlw	66^65	; case 66
  6006  07AF  1903               	skipnz
  6007  07B0  2F1C               	goto	l2726
  6008  07B1  3A01               	xorlw	67^66	; case 67
  6009  07B2  1903               	skipnz
  6010  07B3  2F55               	goto	l2728
  6011  07B4  3A07               	xorlw	68^67	; case 68
  6012  07B5  1903               	skipnz
  6013  07B6  2F8E  120A  118A   	goto	l2730
  6014  07B9  3A01               	xorlw	69^68	; case 69
  6015  07BA  1903               	skipnz
  6016  07BB  2FFD               	goto	l2732
  6017  07BC  3A03               	xorlw	70^69	; case 70
  6018  07BD  1903               	skipnz
  6019  07BE  28A1               	goto	l2734
  6020  07BF  3A01               	xorlw	71^70	; case 71
  6021  07C0  1903               	skipnz
  6022  07C1  28DA               	goto	l2736
  6023  07C2  3A0F               	xorlw	72^71	; case 72
  6024  07C3  1903               	skipnz
  6025  07C4  2913               	goto	l2738
  6026  07C5  3A01               	xorlw	73^72	; case 73
  6027  07C6  1903               	skipnz
  6028  07C7  294C               	goto	l2740
  6029  07C8  3A03               	xorlw	74^73	; case 74
  6030  07C9  1903               	skipnz
  6031  07CA  2985               	goto	l2742
  6032  07CB  3A01               	xorlw	75^74	; case 75
  6033  07CC  1903               	skipnz
  6034  07CD  29BE               	goto	l2744
  6035  07CE  3A07               	xorlw	76^75	; case 76
  6036  07CF  1903               	skipnz
  6037  07D0  29F7               	goto	l2746
  6038  07D1  3A01               	xorlw	77^76	; case 77
  6039  07D2  1903               	skipnz
  6040  07D3  2A30               	goto	l2748
  6041  07D4  3A03               	xorlw	78^77	; case 78
  6042  07D5  1903               	skipnz
  6043  07D6  2A69               	goto	l2750
  6044  07D7  3A01               	xorlw	79^78	; case 79
  6045  07D8  1903               	skipnz
  6046  07D9  2AA2               	goto	l2752
  6047  07DA  3A1F               	xorlw	80^79	; case 80
  6048  07DB  1903               	skipnz
  6049  07DC  2ADB               	goto	l2754
  6050  07DD  3A01               	xorlw	81^80	; case 81
  6051  07DE  1903               	skipnz
  6052  07DF  2B14               	goto	l2756
  6053  07E0  3A03               	xorlw	82^81	; case 82
  6054  07E1  1903               	skipnz
  6055  07E2  2B4D               	goto	l2758
  6056  07E3  3A01               	xorlw	83^82	; case 83
  6057  07E4  1903               	skipnz
  6058  07E5  2B86               	goto	l2760
  6059  07E6  3A07               	xorlw	84^83	; case 84
  6060  07E7  1903               	skipnz
  6061  07E8  2BBF               	goto	l2762
  6062  07E9  3A01               	xorlw	85^84	; case 85
  6063  07EA  1903               	skipnz
  6064  07EB  2BF8               	goto	l2764
  6065  07EC  3A03               	xorlw	86^85	; case 86
  6066  07ED  1903               	skipnz
  6067  07EE  2C31               	goto	l2766
  6068  07EF  3A01               	xorlw	87^86	; case 87
  6069  07F0  1903               	skipnz
  6070  07F1  2C6A               	goto	l2768
  6071  07F2  3A0F               	xorlw	88^87	; case 88
  6072  07F3  1903               	skipnz
  6073  07F4  2CA3               	goto	l2770
  6074  07F5  3A01               	xorlw	89^88	; case 89
  6075  07F6  1903               	skipnz
  6076  07F7  2CDC               	goto	l2772
  6077  07F8  3A03               	xorlw	90^89	; case 90
  6078  07F9  1903               	skipnz
  6079  07FA  2D15               	goto	l2774
  6080  07FB  2FFC               	goto	l1013
  6081                           
  6082                           	line	594
  6083                           	
  6084  07FC                     l976:	
  6085                           	line	595
  6086                           	
  6087  07FC                     l1013:	
  6088  07FC  0008               	return
      + 07FD                     L2:	
      + 07FD  120A  158A  2FC7   	ljmp	l2732
  6089                           	opt stack 0
  6090                           GLOBAL	__end_of_choose_num_alphabet
  6091  07FD                     	__end_of_choose_num_alphabet:
      + 07FD  120A  158A  2FC7   	ljmp	l2732
  6092 ;; =============== function _choose_num_alphabet ends ============
  6093                           
  6094                           	signat	_choose_num_alphabet,8312
  6095                           	global	_light_a_row
  6096                           psect	text347,local,class=CODE,delta=2
  6097                           global __ptext347
  6098  0A64                     __ptext347:
  6099                           
  6100 ;; *************** function _light_a_row *****************
  6101 ;; Defined at:
  6102 ;;		line 131 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  row             1    wreg     unsigned char 
  6105 ;;  color           1    0[COMMON] unsigned char 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;  row             1    1[COMMON] unsigned char 
  6108 ;; Return value:  Size  Location     Type
  6109 ;;		None               void
  6110 ;; Registers used:
  6111 ;;		wreg, status,2, status,0
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6117 ;;      Params:         1       0       0       0       0
  6118 ;;      Locals:         1       0       0       0       0
  6119 ;;      Temps:          0       0       0       0       0
  6120 ;;      Totals:         2       0       0       0       0
  6121 ;;Total ram usage:        2 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		_running_line
  6127 ;;		_light_all_dot
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           psect	text347
  6131                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  6132                           	line	131
  6133                           	global	__size_of_light_a_row
  6134  001C                     	__size_of_light_a_row	equ	__end_of_light_a_row-_light_a_row
  6135                           	
  6136  0A64                     _light_a_row:	
  6137                           	opt	stack 6
  6138                           ; Regs used in _light_a_row: [wreg+status,2+status,0]
  6139                           ;light_a_row@row stored from wreg
  6140  0A64  00F1               	movwf	(light_a_row@row)
  6141                           	line	132
  6142                           	
  6143  0A65                     l2648:	
  6144                           ;Dot Matrix.c: 132: PORTD = 0xFF;
  6145  0A65  30FF               	movlw	(0FFh)
  6146  0A66  1283               	bcf	status, 5	;RP0=0, select bank0
  6147  0A67  1303               	bcf	status, 6	;RP1=0, select bank0
  6148  0A68  0088               	movwf	(8)	;volatile
  6149                           	line	133
  6150                           	
  6151  0A69                     l2650:	
  6152                           ;Dot Matrix.c: 133: if(color == GREEN)
  6153  0A69  08F0               	movf	(light_a_row@color),f
  6154  0A6A  1D03               	skipz
  6155  0A6B  2A6D               	goto	u2711
  6156  0A6C  2A6E               	goto	u2710
  6157  0A6D                     u2711:
  6158  0A6D  2A73               	goto	l2656
  6159  0A6E                     u2710:
  6160                           	line	135
  6161                           	
  6162  0A6E                     l2652:	
  6163                           ;Dot Matrix.c: 134: {
  6164                           ;Dot Matrix.c: 135: PORTC = 0;
  6165  0A6E  0187               	clrf	(7)	;volatile
  6166                           	line	136
  6167                           	
  6168  0A6F                     l2654:	
  6169                           ;Dot Matrix.c: 136: PORTA = 0b00001000 | row;
  6170  0A6F  0871               	movf	(light_a_row@row),w
  6171  0A70  3808               	iorlw	08h
  6172  0A71  0085               	movwf	(5)	;volatile
  6173                           	line	137
  6174                           ;Dot Matrix.c: 137: }
  6175  0A72  2A7F               	goto	l918
  6176                           	line	138
  6177                           	
  6178  0A73                     l915:	
  6179                           	
  6180  0A73                     l2656:	
  6181                           ;Dot Matrix.c: 138: else if(color == RED)
  6182  0A73  0870               	movf	(light_a_row@color),w
  6183  0A74  3A01               	xorlw	01h
  6184  0A75  1D03               	skipz
  6185  0A76  2A78               	goto	u2721
  6186  0A77  2A79               	goto	u2720
  6187  0A78                     u2721:
  6188  0A78  2A7F               	goto	l918
  6189  0A79                     u2720:
  6190                           	line	140
  6191                           	
  6192  0A79                     l2658:	
  6193                           ;Dot Matrix.c: 139: {
  6194                           ;Dot Matrix.c: 140: PORTA = 0;
  6195  0A79  0185               	clrf	(5)	;volatile
  6196                           	line	141
  6197                           	
  6198  0A7A                     l2660:	
  6199                           ;Dot Matrix.c: 141: PORTC = 0b00001000 | row;
  6200  0A7A  0871               	movf	(light_a_row@row),w
  6201  0A7B  3808               	iorlw	08h
  6202  0A7C  0087               	movwf	(7)	;volatile
  6203  0A7D  2A7F               	goto	l918
  6204                           	line	142
  6205                           	
  6206  0A7E                     l917:	
  6207  0A7E  2A7F               	goto	l918
  6208                           	line	143
  6209                           	
  6210  0A7F                     l916:	
  6211                           	
  6212  0A7F                     l918:	
  6213  0A7F  0008               	return
  6214                           	opt stack 0
  6215                           GLOBAL	__end_of_light_a_row
  6216  0A80                     	__end_of_light_a_row:
  6217 ;; =============== function _light_a_row ends ============
  6218                           
  6219                           	signat	_light_a_row,8312
  6220                           	global	_light_a_dot
  6221                           psect	text348,local,class=CODE,delta=2
  6222                           global __ptext348
  6223  0A80                     __ptext348:
  6224                           
  6225 ;; *************** function _light_a_dot *****************
  6226 ;; Defined at:
  6227 ;;		line 116 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  row             1    wreg     unsigned char 
  6230 ;;  column          1    0[COMMON] unsigned char 
  6231 ;;  color           1    1[COMMON] unsigned char 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;  row             1    3[COMMON] unsigned char 
  6234 ;; Return value:  Size  Location     Type
  6235 ;;		None               void
  6236 ;; Registers used:
  6237 ;;		wreg, status,2, status,0
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6243 ;;      Params:         2       0       0       0       0
  6244 ;;      Locals:         1       0       0       0       0
  6245 ;;      Temps:          1       0       0       0       0
  6246 ;;      Totals:         4       0       0       0       0
  6247 ;;Total ram usage:        4 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_light_a_column_two_color
  6253 ;;		_running_dot
  6254 ;;		_light_a_column
  6255 ;;		_light_all_dot_2
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           psect	text348
  6259                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  6260                           	line	116
  6261                           	global	__size_of_light_a_dot
  6262  0025                     	__size_of_light_a_dot	equ	__end_of_light_a_dot-_light_a_dot
  6263                           	
  6264  0A80                     _light_a_dot:	
  6265                           	opt	stack 5
  6266                           ; Regs used in _light_a_dot: [wreg+status,2+status,0]
  6267                           ;light_a_dot@row stored from wreg
  6268  0A80  00F3               	movwf	(light_a_dot@row)
  6269                           	line	117
  6270                           	
  6271  0A81                     l2634:	
  6272                           ;Dot Matrix.c: 117: PORTD = 1<<column;
  6273  0A81  3001               	movlw	(01h)
  6274  0A82  00F2               	movwf	(??_light_a_dot+0)+0
  6275  0A83  0A70               	incf	(light_a_dot@column),w
  6276  0A84  2A87               	goto	u2684
  6277  0A85                     u2685:
  6278  0A85  1003               	clrc
  6279  0A86  0DF2               	rlf	(??_light_a_dot+0)+0,f
  6280  0A87                     u2684:
  6281  0A87  3EFF               	addlw	-1
  6282  0A88  1D03               	skipz
  6283  0A89  2A85               	goto	u2685
  6284  0A8A  0872               	movf	0+(??_light_a_dot+0)+0,w
  6285  0A8B  1283               	bcf	status, 5	;RP0=0, select bank0
  6286  0A8C  1303               	bcf	status, 6	;RP1=0, select bank0
  6287  0A8D  0088               	movwf	(8)	;volatile
  6288                           	line	118
  6289                           	
  6290  0A8E                     l2636:	
  6291                           ;Dot Matrix.c: 118: if(color == GREEN)
  6292  0A8E  08F1               	movf	(light_a_dot@color),f
  6293  0A8F  1D03               	skipz
  6294  0A90  2A92               	goto	u2691
  6295  0A91  2A93               	goto	u2690
  6296  0A92                     u2691:
  6297  0A92  2A98               	goto	l2642
  6298  0A93                     u2690:
  6299                           	line	120
  6300                           	
  6301  0A93                     l2638:	
  6302                           ;Dot Matrix.c: 119: {
  6303                           ;Dot Matrix.c: 120: PORTC = 0;
  6304  0A93  0187               	clrf	(7)	;volatile
  6305                           	line	121
  6306                           	
  6307  0A94                     l2640:	
  6308                           ;Dot Matrix.c: 121: PORTA = 0b00001000 | row;
  6309  0A94  0873               	movf	(light_a_dot@row),w
  6310  0A95  3808               	iorlw	08h
  6311  0A96  0085               	movwf	(5)	;volatile
  6312                           	line	122
  6313                           ;Dot Matrix.c: 122: }
  6314  0A97  2AA4               	goto	l912
  6315                           	line	123
  6316                           	
  6317  0A98                     l909:	
  6318                           	
  6319  0A98                     l2642:	
  6320                           ;Dot Matrix.c: 123: else if(color == RED)
  6321  0A98  0871               	movf	(light_a_dot@color),w
  6322  0A99  3A01               	xorlw	01h
  6323  0A9A  1D03               	skipz
  6324  0A9B  2A9D               	goto	u2701
  6325  0A9C  2A9E               	goto	u2700
  6326  0A9D                     u2701:
  6327  0A9D  2AA4               	goto	l912
  6328  0A9E                     u2700:
  6329                           	line	125
  6330                           	
  6331  0A9E                     l2644:	
  6332                           ;Dot Matrix.c: 124: {
  6333                           ;Dot Matrix.c: 125: PORTA = 0;
  6334  0A9E  0185               	clrf	(5)	;volatile
  6335                           	line	126
  6336                           	
  6337  0A9F                     l2646:	
  6338                           ;Dot Matrix.c: 126: PORTC = 0b00001000 | row;
  6339  0A9F  0873               	movf	(light_a_dot@row),w
  6340  0AA0  3808               	iorlw	08h
  6341  0AA1  0087               	movwf	(7)	;volatile
  6342  0AA2  2AA4               	goto	l912
  6343                           	line	127
  6344                           	
  6345  0AA3                     l911:	
  6346  0AA3  2AA4               	goto	l912
  6347                           	line	128
  6348                           	
  6349  0AA4                     l910:	
  6350                           	
  6351  0AA4                     l912:	
  6352  0AA4  0008               	return
  6353                           	opt stack 0
  6354                           GLOBAL	__end_of_light_a_dot
  6355  0AA5                     	__end_of_light_a_dot:
  6356 ;; =============== function _light_a_dot ends ============
  6357                           
  6358                           	signat	_light_a_dot,12408
  6359                           	global	_init
  6360                           psect	text349,local,class=CODE,delta=2
  6361                           global __ptext349
  6362  0A36                     __ptext349:
  6363                           
  6364 ;; *************** function _init *****************
  6365 ;; Defined at:
  6366 ;;		line 88 in file "C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;		None
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;		None
  6371 ;; Return value:  Size  Location     Type
  6372 ;;		None               void
  6373 ;; Registers used:
  6374 ;;		wreg, status,2
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6380 ;;      Params:         0       0       0       0       0
  6381 ;;      Locals:         0       0       0       0       0
  6382 ;;      Temps:          0       0       0       0       0
  6383 ;;      Totals:         0       0       0       0       0
  6384 ;;Total ram usage:        0 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_main
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           psect	text349
  6393                           	file	"C:\Users\younce\Documents\Dot Matrix\Dot Matrix.c"
  6394                           	line	88
  6395                           	global	__size_of_init
  6396  0014                     	__size_of_init	equ	__end_of_init-_init
  6397                           	
  6398  0A36                     _init:	
  6399                           	opt	stack 7
  6400                           ; Regs used in _init: [wreg+status,2]
  6401                           	line	89
  6402                           	
  6403  0A36                     l2612:	
  6404                           ;Dot Matrix.c: 89: TRISA = 0;
  6405  0A36  1683               	bsf	status, 5	;RP0=1, select bank1
  6406  0A37  1303               	bcf	status, 6	;RP1=0, select bank1
  6407  0A38  0185               	clrf	(133)^080h	;volatile
  6408                           	line	90
  6409                           	
  6410  0A39                     l2614:	
  6411                           ;Dot Matrix.c: 90: TRISB = 0b00000011;
  6412  0A39  3003               	movlw	(03h)
  6413  0A3A  0086               	movwf	(134)^080h	;volatile
  6414                           	line	91
  6415                           	
  6416  0A3B                     l2616:	
  6417                           ;Dot Matrix.c: 91: TRISC = 0;
  6418  0A3B  0187               	clrf	(135)^080h	;volatile
  6419                           	line	92
  6420                           	
  6421  0A3C                     l2618:	
  6422                           ;Dot Matrix.c: 92: TRISD = 0;
  6423  0A3C  0188               	clrf	(136)^080h	;volatile
  6424                           	line	95
  6425                           	
  6426  0A3D                     l2620:	
  6427                           ;Dot Matrix.c: 95: ANSEL = 0;
  6428  0A3D  1683               	bsf	status, 5	;RP0=1, select bank3
  6429  0A3E  1703               	bsf	status, 6	;RP1=1, select bank3
  6430  0A3F  0188               	clrf	(392)^0180h	;volatile
  6431                           	line	96
  6432                           	
  6433  0A40                     l2622:	
  6434                           ;Dot Matrix.c: 96: ANSELH = 0;
  6435  0A40  0189               	clrf	(393)^0180h	;volatile
  6436                           	line	97
  6437                           	
  6438  0A41                     l2624:	
  6439                           ;Dot Matrix.c: 97: ADCON0 = 0;
  6440  0A41  1283               	bcf	status, 5	;RP0=0, select bank0
  6441  0A42  1303               	bcf	status, 6	;RP1=0, select bank0
  6442  0A43  019F               	clrf	(31)	;volatile
  6443                           	line	99
  6444                           	
  6445  0A44                     l2626:	
  6446                           ;Dot Matrix.c: 99: RB6 = RB7 = 0;
  6447  0A44  1386               	bcf	(55/8),(55)&7
  6448  0A45  1306               	bcf	(54/8),(54)&7
  6449                           	line	100
  6450                           	
  6451  0A46                     l2628:	
  6452                           ;Dot Matrix.c: 100: PORTA = 0;
  6453  0A46  0185               	clrf	(5)	;volatile
  6454                           	line	101
  6455                           	
  6456  0A47                     l2630:	
  6457                           ;Dot Matrix.c: 101: PORTC = 0;
  6458  0A47  0187               	clrf	(7)	;volatile
  6459                           	line	102
  6460                           	
  6461  0A48                     l2632:	
  6462                           ;Dot Matrix.c: 102: PORTD = 0;
  6463  0A48  0188               	clrf	(8)	;volatile
  6464                           	line	103
  6465                           	
  6466  0A49                     l900:	
  6467  0A49  0008               	return
  6468                           	opt stack 0
  6469                           GLOBAL	__end_of_init
  6470  0A4A                     	__end_of_init:
  6471 ;; =============== function _init ends ============
  6472                           
  6473                           	signat	_init,88
  6474                           psect	text350,local,class=CODE,delta=2
  6475                           global __ptext350
  6476  0000                     __ptext350:
  6477                           	global	btemp
  6478  007E                     	btemp set 07Eh
  6479                           
  6480                           	DABS	1,126,2	;btemp
  6481                           	global	wtemp0
  6482  007E                     	wtemp0 set btemp
  6483  0F19                     


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Sat Sep 07 19:12:56 2013

                                     pc 0002                                      fsr 0004  
                                   l900 0A49                                     l910 0AA4  
                                   l911 0AA3                                     l903 0AE6  
                                   l912 0AA4                                     l904 0ADE  
                                   l905 0B15                                     l906 0B15  
                                   l915 0A73                                     l916 0A7F  
                                   l940 0B40                                     l909 0A98  
                                   l917 0A7E                                     l941 0B4C  
                                   l918 0A7F                                     l950 0BC6  
                                   l942 0B4B                                     l870 0E40  
                                   l943 0B6D                                     l871 0DEA  
                                   l863 0E59                                     l960 0042  
                                   l880 0E60                                     l872 0E59  
                                   l864 0DCD                                     l961 00A0  
                                   l953 0CA5                                     l881 0E61  
                                   l873 0DF6                                     l865 0DE9  
                                   l946 0B8B                                     l962 0057  
                                   l970 0C8E                                     l938 0B2A  
                                   l954 0D00                                     l890 0E82  
                                   l882 0E61                                     l874 0E02  
                                   l866 0DD3                                     l947 0BC6  
                                   l963 008A                                     l971 0C8E  
                                   l939 0B6D                                     l955 0CBA  
                                   l891 0E97                                     l883 0E66  
                                   l875 0E0E                                     l867 0DD3  
                                   l980 0FC7                                     l948 0BAC  
                                   l964 00A0                                     l956 0CEA  
                                   l892 0EA8                                     l884 0E67  
                                   l876 0E1A                                     l868 0DD8  
                                   l981 00A1                                     l949 0BBB  
                                   l957 0D00                                     l885 0EBF  
                                   l893 0EB6                                     l877 0E26  
                                   l869 0DE8                                     l974 078A  
                                   l990 02A2                                     l982 00DA  
                                   l894 0EBD                                     l886 0E68  
                                   l878 0E32                                     l991 02DB  
                                   l983 0113                                     l975 0EE1  
                                   l967 0C37                                     l895 0ED9  
                                   l887 0ED8                                     l879 0E3E  
                                   l976 07FC                                     l992 0314  
                                   l984 014C                                     l968 0C62  
                                   l896 0EDA                                     l888 0E6F  
                                   l993 034D                                     l985 0185  
                                   l977 0F1C                                     l969 0C6C  
                                   l897 0EDA                                     l889 0E76  
                                   l994 0386                                     l986 01BE  
                                   l978 0F55                                     l995 03BF  
                                   l987 01F7                                     l979 0F8E  
                                   l996 03F8                                     l988 0230  
                                   l997 0431                                     l989 0269  
                                   l998 046A                                     l999 04A3  
                                   _RB0 0030                                     _RB1 0031  
                                   _RB6 0036                                     _RB7 0037  
                                   fsr0 0004                                     indf 0000  
                                  l1000 04DC                                    l1001 0515  
                                  l1010 0716                                    l1002 054E  
                                  l1011 074F                                    l1003 0587  
                                  l1012 0788                                    l1004 05C0  
                                  l1020 0BCF                                    l1005 05F9  
                                  l1013 07FC                                    l1021 0BE2  
                                  l1006 0632                                    l1030 0D58  
                                  l1022 0C0B                                    l1007 066B  
                                  l1031 0D7A                                    l1023 0C22  
                                  l1008 06A4                                    l1016 0A63  
                                  l1032 0DC6                                    l1024 0C22  
                                  l1009 06DD                                    l1033 0D8D  
                                  l1034 0DB9                                    l1035 0DC6  
                                  l1027 0D17                                    l1019 0C14  
                                  l1028 0D6E                                    l1029 0D2C  
                                  l3000 0E0E                                    l3002 0E1A  
                                  l3010 0E40                                    l3020 0E97  
                                  l3012 0E68                                    l3004 0E26  
                                  l3022 0EA8                                    l3014 0E6F  
                                  l3006 0E32                                    l3024 0EB6  
                                  l3016 0E76                                    l3008 0E3F  
                                  l3026 0EBE                                    l3018 0E82  
                                  l3028 0EBF                                    l2620 0A3D  
                                  l2612 0A36                                    l2630 0A47  
                                  l2622 0A40                                    l2614 0A39  
                                  l2710 0EE1                                    l2632 0A48  
                                  l2624 0A41                                    l2616 0A3B  
                                  l2640 0A94                                    l2720 0F04  
                                  l2712 0EE8                                    l2800 0ADD  
                                  l2626 0A44                                    l2618 0A3C  
                                  l2642 0A98                                    l2634 0A81  
                                  l2650 0A69                                    l2730 0F8E  
                                  l2722 0F0B                                    l2714 0EEF  
                                  l2802 0ADE                                    l2810 0B8A  
                                  l2628 0A46                                    l2644 0A9E  
                                  l2636 0A8E                                    l2660 0A7A  
                                  l2652 0A6E                                    l2740 014C  
                                  l2732 0FC7                                    l2724 0F12  
                                  l2716 0EF6                                    l2708 0EDE  
                                  l2820 0BBB                                    l2812 0B8B  
                                  l2804 0B6F                                    l2900 0CA4  
                                  l2646 0A9F                                    l2638 0A93  
                                  l2654 0A6F                                    l2750 0269  
                                  l2742 0185                                    l2734 00A1  
                                  l2726 0F1C                                    l2718 0EFD  
                                  l2822 0BC1                                    l2814 0B99  
                                  l2806 0B81                                    l2830 0042  
                                  l2910 0CD4                                    l2902 0CA5  
                                  l2656 0A73                                    l2648 0A65  
                                  l2760 0386                                    l2752 02A2  
                                  l2744 01BE                                    l2736 00DA  
                                  l2728 0F55                                    l2816 0B9D  
                                  l2808 0B85                                    l2840 007C  
                                  l2832 0048                                    l2824 002F  
                                  l2912 0CDC                                    l2904 0CAB  
                                  l2920 0A57                                    l2658 0A79  
                                  l2770 04A3                                    l2762 03BF  
                                  l2754 02DB                                    l2746 01F7  
                                  l2738 0113                                    l2818 0BAC  
                                  l2834 0056                                    l2842 008A  
                                  l2826 0033                                    l2850 0C36  
                                  l2906 0CB9                                    l2914 0CEA  
                                  l2930 0D1D                                    l2922 0D04  
                                  l2780 05C0                                    l2772 04DC  
                                  l2764 03F8                                    l2756 0314  
                                  l2748 0230                                    l2844 0092  
                                  l2836 0057                                    l2828 0041  
                                  l2860 0C66                                    l2852 0C37  
                                  l2916 0CF2                                    l2908 0CBA  
                                  l2932 0D2B                                    l2940 0D58  
                                  l2924 0D08                                    l2790 06DD  
                                  l2782 05F9                                    l2774 0515  
                                  l2766 0431                                    l2758 034D  
                                  l2838 0074                                    l2862 0C6B  
                                  l2854 0C4E                                    l2846 0C24  
                                  l2870 0B17                                    l2918 0A4D  
                                  l2950 0D7A                                    l2942 0D60  
                                  l2934 0D2C                                    l2926 0D16  
                                  l2792 0716                                    l2784 0632  
                                  l2776 054E                                    l2768 046A  
                                  l2864 0C6C                                    l2856 0C54  
                                  l2848 0C28                                    l2880 0B3B  
                                  l2872 0B1B                                    l2960 0DAB  
                                  l2952 0D7E                                    l2936 0D42  
                                  l2944 0D6E                                    l2928 0D17  
                                  l2794 074F                                    l2786 066B  
                                  l2778 0587                                    l2866 0C83  
                                  l2858 0C62                                    l2890 0B4C  
                                  l2882 0B3C                                    l2874 0B29  
                                  l2954 0D8C                                    l2962 0DB9  
                                  l2946 0D74                                    l2938 0D4A  
                                  l2970 0BD3                                    l2796 0789  
                                  l2788 06A4                                    l2868 0C89  
                                  l2892 0B59                                    l2884 0B40  
                                  l2876 0B2A                                    l2964 0DC1  
                                  l2956 0D8D                                    l2948 0D79  
                                  l2972 0BE1                                    l2980 0C0B  
                                  l2798 078A                                    l2894 0B5F  
                                  l2886 0B46                                    l2878 0B36  
                                  l2958 0DA3                                    l2974 0BE2  
                                  l2982 0C14                                    l2966 0BCA  
                                  l2990 0DDC                                    l2888 0B47  
                                  l2896 0C92                                    l2976 0BF5  
                                  l2968 0BCF                                    l2992 0DE2  
                                  l2984 0DC7                                    l2898 0C96  
                                  l2978 0BFD                                    l2994 0DEA  
                                  l2986 0DD2                                    l2996 0DF6  
                                  l2988 0DD8                                    l2998 0E02  
                                  STR_1 0806                                    u3000 0CA3  
                                  u3001 0CA2                                    u3010 0CB8  
                                  u3011 0CB7                                    u3020 0CE9  
                                  u3100 0D8B                                    u3021 0CE8  
                                  u3005 0C9F                                    u3101 0D8A  
                                  u3030 0CFF                                    u3031 0CFE  
                                  u3015 0CB4                                    u3120 0DB8  
                                  u3040 0D15                                    u3200 0E5F  
                                  u3025 0CE5                                    u3121 0DB7  
                                  u3105 0D87                                    u3041 0D14  
                                  u3201 0E5E                                    u3130 0DC5  
                                  u3050 0D2A                                    u3210 0E65  
                                  u3035 0CFB                                    u3131 0DC4  
                                  u3115 0D96                                    u3051 0D29  
                                  u3211 0E64                                    u3140 0BE0  
                                  u3125 0DB4                                    u3045 0D11  
                                  u3141 0BDF                                    u3070 0D57  
                                  u3150 0C0A                                    u3071 0D56  
                                  u3055 0D26                                    u3151 0C09  
                                  u3080 0D6D                                    u3160 0C21  
                                  u3081 0D6C                                    u3065 0D35  
                                  u3161 0C20                                    u3145 0BDC  
                                  u3090 0D78                                    u3170 0DD1  
                                  u3227 0AE2                                    u3091 0D77  
                                  u3075 0D53                                    u3155 0C06  
                                  u3171 0DD0                                    u2700 0A9E  
                                  u3180 0DD7                                    u2701 0A9D  
                                  u3085 0D69                                    u3181 0DD6  
                                  u2710 0A6E                                    u3190 0DE2  
                                  u2711 0A6D                                    u3191 0DE1  
                                  u2720 0A79                                    u2721 0A78  
                                  u2810 0B02                                    u2820 0B14  
                                  u2900 0089                                    u2821 0B13  
                                  u2901 0088                                    u2910 009F  
                                  u2815 0AF5                                    u2911 009E  
                                  u2816 0AF6                                    u2840 0B89  
                                  u2920 0C35                                    u2825 0B10  
                                  u2817 0AFB                                    u2841 0B88  
                                  u2905 0085                                    u2921 0C34  
                                  u2690 0A93                                    u2818 0AFC  
                                  u2834 0B7A                                    u2930 0C61  
                                  u2691 0A92                                    u2819 0B01  
                                  u2835 0B78                                    u2915 009B  
                                  u2931 0C60                                    u2684 0A87  
                                  u2860 0B9D                                    u2940 0C6A  
                                  u2685 0A85                                    u2941 0C69  
                                  u2925 0C31                                    u2870 0BC5  
                                  u2854 0B91                                    u2950 0C8D  
                                  u2871 0BC4                                    u2855 0B8F  
                                  u2951 0C8C                                    u2935 0C5D  
                                  u2880 0040                                    u2960 0B28  
                                  u2881 003F                                    u2961 0B27  
                                  u2890 0055                                    u2970 0B3B  
                                  u2891 0054                                    u2971 0B3A  
                                  u2980 0B46                                    u2885 003C  
                                  u2981 0B45                                    u2965 0B24  
                                  u2990 0B6C                                    u2895 0051  
                                  u2991 0B6B                                    u2995 0B68  
                                  _main 0DC7                                    _init 0A36  
                                  _mode 003C                                    btemp 007E  
                           _running_dot 002C                                    start 0000  
                 __size_of_running_line 006C        choose_num_alphabet@num_alp_array 0070  
                          ?_light_a_dot 0070                            ?_light_a_row 0070  
                                 ?_main 0070                                   ?_init 0070  
                                 _ANSEL 0188                                   _PORTA 0005  
                                 _PORTC 0007                                   _PORTD 0008  
        light_a_column_two_color@column 007A                                   _TRISA 0085  
                                 _TRISB 0086                                   _TRISC 0087  
                                 _TRISD 0088                ?_light_pattern_one_color 0078  
                                 pclath 000A                            _running_line 0C23  
                                 status 0003                                   wtemp0 007E  
                          __end_of_main 0EDD                            __end_of_init 0A4A  
                                ??_main 003B                                  ??_init 0070  
              ?_light_pattern_two_color 0030                                  _ADCON0 001F  
                                _ANSELH 0189         light_a_column_two_color@color_0 0075  
       light_a_column_two_color@color_1 0076                        __end_of_delay_ms 0B16  
            choose_num_alphabet@num_alp 0072                ?_light_a_number_alphabet 007D  
           light_pattern_two_color@time 0037                        light_a_dot@color 0071  
          __end_of_expand_shrink_square 0DC7                          __pcstackCOMMON 0070  
               __size_of_running_string 005C                            __pidataBANK0 0A15  
                          __pidataBANK1 0AA5                _light_a_column_two_color 0B6E  
                  __size_of_light_a_dot 0025                    __size_of_light_a_row 001C  
                   running_string@color 0032                         _number_alphabet 003D  
                      light_a_row@color 0070                              __pbssBANK0 003C  
                          ?_running_dot 0070                              __pmaintext 0DC7  
          _love_shape_pattern_one_color 0020                            running_dot@i 0031  
                          running_dot@j 0033                               ?_delay_ms 0070  
      __size_of_light_pattern_one_color 0058            _love_shape_pattern_two_color 0028  
                  _expand_shrink_square 0D01                              ??_delay_ms 0074  
                running_string@sentence 0034                              delay_ms@ms 0070  
                  end_of_initialization 0028                                 init_ram 0A29  
      __size_of_light_pattern_two_color 0072                          _running_string 0BC7  
                 ?_expand_shrink_square 0070            light_a_number_alphabet@color 007D  
                     light_a_dot@column 0070        __size_of_light_a_number_alphabet 001A  
              light_pattern_one_color@i 007B              ??_light_a_column_two_color 0077  
                __end_of_running_string 0C23                    __size_of_running_dot 0075  
        light_a_number_alphabet@num_alp 0031                          light_a_dot@row 0073  
                   start_initialization 0004            __size_of_choose_num_alphabet F123  
                        light_a_row@row 0071                         ?_running_string 0032  
               _light_pattern_one_color 0B16                             __pdataBANK0 0020  
                           __pdataBANK1 00A0                           ??_light_a_dot 0072  
                         ??_light_a_row 0071                  ??_expand_shrink_square 0030  
                         __pcstackBANK0 0030                       __size_of_delay_ms 0039  
               _light_pattern_two_color 0C8F                           ?_running_line 0070  
                             __ptext340 0C8F                               __ptext341 0B16  
                             __ptext350 0000                               __ptext342 0C23  
                             __ptext343 002C                               __ptext344 0B6E  
                             __ptext345 0ADD                               __ptext337 0BC7  
                             __ptext346 0EDD                               __ptext338 0D01  
                             __ptext347 0A64                               __ptext339 0A4A  
                             __ptext348 0A80                               __ptext349 0A36  
                     running_line@i_540 007C                               __pstrings 0800  
                     running_line@color 0079                     __end_of_light_a_dot 0AA5  
                   __end_of_light_a_row 0A80                 _light_a_number_alphabet 0A4A  
                        ??_running_line 0078                light_pattern_two_color@i 0039  
      __end_of_light_a_column_two_color 0BC7               ??_light_pattern_one_color 0079  
    light_a_column_two_color@lsb_tester 0079                           running_line@i 007A  
        light_pattern_two_color@color_0 0030          light_pattern_two_color@color_1 0031  
        light_pattern_one_color@pattern 007A          light_pattern_two_color@pattern 0036  
                           __stringbase 0805               ??_light_pattern_two_color 0032  
          light_pattern_one_color@color 0078               expand_shrink_square@i_556 0039  
             expand_shrink_square@j_557 0035               expand_shrink_square@color 0032  
                             init_fetch 0A25                     _choose_num_alphabet 0EDD  
                           _light_a_dot 0A80                             _light_a_row 0A64  
       __end_of_light_pattern_one_color 0B6E                        running_dot@color 0030  
             ??_light_a_number_alphabet 0030                   expand_shrink_square@i 0037  
                 expand_shrink_square@j 0033                                _delay_ms 0ADD  
                 _expand_shrink_pattern 00A0                    ?_choose_num_alphabet 0070  
                      ??_running_string 0033                           __size_of_main 0116  
                         __size_of_init 0014                           ??_running_dot 0078  
       __end_of_light_pattern_two_color 0D01                    __end_of_running_line 0C8F  
     __size_of_light_a_column_two_color 0059               ?_light_a_column_two_color 0074  
                 ??_choose_num_alphabet 0071         __end_of_light_a_number_alphabet 0A64  
             light_a_column_two_color@i 007B                               stringcode 0800  
light_a_column_two_color@column_pattern 0074                     __end_of_running_dot 00A1  
         __size_of_expand_shrink_square 00C6                         running_string@i 0035  
                       running_string@j 0037                                stringdir 0800  
                              stringtab 0800  
